---
library:
  rows:
  - library:
      map:
        Contraction_l_Ailk_Bjlk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.0861282
                value: {index: 113, type: Single}
              - key: [4, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 64, 128]
                speed: 1.42696
                value: {index: 113, type: Single}
              - key: [4, 64, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 64, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 64, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 64, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 128, 128]
                speed: 2.88184
                value: {index: 113, type: Single}
              - key: [4, 128, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 128, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 128, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 128, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 256, 128]
                speed: 5.65319
                value: {index: 113, type: Single}
              - key: [4, 256, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 256, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 256, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 256, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 448, 128]
                speed: 9.95664
                value: {index: 113, type: Single}
              - key: [4, 448, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 448, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 448, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 448, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 704, 128]
                speed: 14.8354
                value: {index: 113, type: Single}
              - key: [4, 704, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 704, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 704, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 704, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1024, 128]
                speed: 21.6447
                value: {index: 113, type: Single}
              - key: [4, 1024, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1024, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1024, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1024, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1408, 128]
                speed: 30.1302
                value: {index: 113, type: Single}
              - key: [4, 1408, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1408, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1408, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1408, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1856, 128]
                speed: 39.4721
                value: {index: 113, type: Single}
              - key: [4, 1856, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1856, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1856, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 1856, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 2368, 128]
                speed: 50.6725
                value: {index: 113, type: Single}
              - key: [4, 2368, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 2368, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 2368, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 2368, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 2944, 128]
                speed: 62.4191
                value: {index: 113, type: Single}
              - key: [4, 2944, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 2944, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 2944, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 2944, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 3584, 128]
                speed: 75.7548
                value: {index: 113, type: Single}
              - key: [4, 3584, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 3584, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 3584, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 3584, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 4288, 128]
                speed: 89.8121
                value: {index: 113, type: Single}
              - key: [4, 4288, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 4288, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 4288, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 4288, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 5056, 128]
                speed: 102.481
                value: {index: 112, type: Single}
              - key: [4, 5056, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 5056, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 5056, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 5056, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 5888, 128]
                speed: 118.996
                value: {index: 113, type: Single}
              - key: [4, 5888, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 5888, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 5888, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 5888, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 6784, 128]
                speed: 134.743
                value: {index: 112, type: Single}
              - key: [4, 6784, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 6784, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 6784, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4, 6784, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [64, 4, 128]
                speed: 1.46965
                value: {index: 113, type: Single}
              - key: [64, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [64, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [64, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [64, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [64, 64, 128]
                speed: 15.9051
                value: {index: 109, type: Single}
              - key: [64, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 128, 128]
                speed: 36.1111
                value: {index: 108, type: Single}
              - key: [64, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 256, 128]
                speed: 72.5922
                value: {index: 108, type: Single}
              - key: [64, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 448, 128]
                speed: 130.036
                value: {index: 108, type: Single}
              - key: [64, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 704, 128]
                speed: 201.178
                value: {index: 108, type: Single}
              - key: [64, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1024, 128]
                speed: 284.533
                value: {index: 108, type: Single}
              - key: [64, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1408, 128]
                speed: 402.356
                value: {index: 108, type: Single}
              - key: [64, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1856, 128]
                speed: 524.949
                value: {index: 108, type: Single}
              - key: [64, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 2368, 128]
                speed: 625.007
                value: {index: 108, type: Single}
              - key: [64, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 2944, 128]
                speed: 729.996
                value: {index: 108, type: Single}
              - key: [64, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 3584, 128]
                speed: 874.959
                value: {index: 108, type: Single}
              - key: [64, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 4288, 128]
                speed: 839.312
                value: {index: 108, type: Single}
              - key: [64, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 5056, 128]
                speed: 986.137
                value: {index: 108, type: Single}
              - key: [64, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 5888, 128]
                speed: 1142.37
                value: {index: 108, type: Single}
              - key: [64, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 6784, 128]
                speed: 1280.27
                value: {index: 108, type: Single}
              - key: [64, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [64, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 4, 128]
                speed: 3.02987
                value: {index: 113, type: Single}
              - key: [128, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [128, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [128, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [128, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [128, 64, 128]
                speed: 36.4836
                value: {index: 108, type: Single}
              - key: [128, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 128, 128]
                speed: 72.4067
                value: {index: 108, type: Single}
              - key: [128, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 256, 128]
                speed: 144.813
                value: {index: 108, type: Single}
              - key: [128, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 448, 128]
                speed: 245.269
                value: {index: 108, type: Single}
              - key: [128, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 704, 128]
                speed: 397.222
                value: {index: 108, type: Single}
              - key: [128, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1024, 128]
                speed: 569.066
                value: {index: 108, type: Single}
              - key: [128, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1408, 128]
                speed: 715.907
                value: {index: 108, type: Single}
              - key: [128, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1856, 128]
                speed: 918.373
                value: {index: 108, type: Single}
              - key: [128, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 2368, 128]
                speed: 933.615
                value: {index: 108, type: Single}
              - key: [128, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 2944, 128]
                speed: 1148.41
                value: {index: 108, type: Single}
              - key: [128, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 3584, 128]
                speed: 1321.17
                value: {index: 108, type: Single}
              - key: [128, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 4288, 128]
                speed: 1347.19
                value: {index: 109, type: Single}
              - key: [128, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 5056, 128]
                speed: 1546.73
                value: {index: 108, type: Single}
              - key: [128, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 5888, 128]
                speed: 1678.23
                value: {index: 109, type: Single}
              - key: [128, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 6784, 128]
                speed: 1812.18
                value: {index: 109, type: Single}
              - key: [128, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [128, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 4, 128]
                speed: 5.82051
                value: {index: 113, type: Single}
              - key: [256, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [256, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [256, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [256, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [256, 64, 128]
                speed: 72.2222
                value: {index: 108, type: Single}
              - key: [256, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 128, 128]
                speed: 142.625
                value: {index: 108, type: Single}
              - key: [256, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 256, 128]
                speed: 291.864
                value: {index: 108, type: Single}
              - key: [256, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 448, 128]
                speed: 483.358
                value: {index: 108, type: Single}
              - key: [256, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 704, 128]
                speed: 661.192
                value: {index: 108, type: Single}
              - key: [256, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1024, 128]
                speed: 793.305
                value: {index: 109, type: Single}
              - key: [256, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1408, 128]
                speed: 993.376
                value: {index: 109, type: Single}
              - key: [256, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1856, 128]
                speed: 1290.92
                value: {index: 109, type: Single}
              - key: [256, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 2368, 128]
                speed: 1383.77
                value: {index: 109, type: Single}
              - key: [256, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 2944, 128]
                speed: 1669.63
                value: {index: 108, type: Single}
              - key: [256, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 3584, 128]
                speed: 1822.31
                value: {index: 110, type: Single}
              - key: [256, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 4288, 128]
                speed: 1801.37
                value: {index: 109, type: Single}
              - key: [256, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 5056, 128]
                speed: 2107.99
                value: {index: 110, type: Single}
              - key: [256, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 5888, 128]
                speed: 2413.91
                value: {index: 110, type: Single}
              - key: [256, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 6784, 128]
                speed: 2246.24
                value: {index: 110, type: Single}
              - key: [256, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [256, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 4, 128]
                speed: 10.0537
                value: {index: 113, type: Single}
              - key: [448, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [448, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [448, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [448, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [448, 64, 128]
                speed: 123.859
                value: {index: 108, type: Single}
              - key: [448, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 128, 128]
                speed: 250.86
                value: {index: 108, type: Single}
              - key: [448, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 256, 128]
                speed: 490.537
                value: {index: 108, type: Single}
              - key: [448, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 448, 128]
                speed: 860.568
                value: {index: 108, type: Single}
              - key: [448, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 704, 128]
                speed: 1152.2
                value: {index: 108, type: Single}
              - key: [448, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1024, 128]
                speed: 1501.34
                value: {index: 108, type: Single}
              - key: [448, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1408, 128]
                speed: 1695.14
                value: {index: 108, type: Single}
              - key: [448, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1856, 128]
                speed: 1946.87
                value: {index: 108, type: Single}
              - key: [448, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 2368, 128]
                speed: 2126.61
                value: {index: 108, type: Single}
              - key: [448, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 2944, 128]
                speed: 2381.43
                value: {index: 108, type: Single}
              - key: [448, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 3584, 128]
                speed: 2522.25
                value: {index: 108, type: Single}
              - key: [448, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 4288, 128]
                speed: 2707.56
                value: {index: 108, type: Single}
              - key: [448, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 5056, 128]
                speed: 2888.57
                value: {index: 108, type: Single}
              - key: [448, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 5888, 128]
                speed: 2933.13
                value: {index: 108, type: Single}
              - key: [448, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 6784, 128]
                speed: 3069.37
                value: {index: 108, type: Single}
              - key: [448, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [448, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 4, 128]
                speed: 15.4968
                value: {index: 113, type: Single}
              - key: [704, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [704, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [704, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [704, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [704, 64, 128]
                speed: 193.672
                value: {index: 108, type: Single}
              - key: [704, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 128, 128]
                speed: 386.378
                value: {index: 108, type: Single}
              - key: [704, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 256, 128]
                speed: 802.64
                value: {index: 108, type: Single}
              - key: [704, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 448, 128]
                speed: 1140.13
                value: {index: 108, type: Single}
              - key: [704, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 704, 128]
                speed: 1628.16
                value: {index: 108, type: Single}
              - key: [704, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1024, 128]
                speed: 1884.54
                value: {index: 108, type: Single}
              - key: [704, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1408, 128]
                speed: 2241.91
                value: {index: 108, type: Single}
              - key: [704, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1856, 128]
                speed: 2522.69
                value: {index: 108, type: Single}
              - key: [704, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 2368, 128]
                speed: 2599.86
                value: {index: 108, type: Single}
              - key: [704, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 2944, 128]
                speed: 2862.8
                value: {index: 108, type: Single}
              - key: [704, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 3584, 128]
                speed: 2916.31
                value: {index: 108, type: Single}
              - key: [704, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 4288, 128]
                speed: 3079.29
                value: {index: 108, type: Single}
              - key: [704, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 5056, 128]
                speed: 3188.48
                value: {index: 108, type: Single}
              - key: [704, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 5888, 128]
                speed: 3045.36
                value: {index: 110, type: Single}
              - key: [704, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 6784, 128]
                speed: 3287.92
                value: {index: 108, type: Single}
              - key: [704, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [704, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 4, 128]
                speed: 21.3829
                value: {index: 112, type: Single}
              - key: [1024, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1024, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1024, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1024, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1024, 64, 128]
                speed: 274.196
                value: {index: 108, type: Single}
              - key: [1024, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 128, 128]
                speed: 544.441
                value: {index: 108, type: Single}
              - key: [1024, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 256, 128]
                speed: 915.113
                value: {index: 108, type: Single}
              - key: [1024, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 448, 128]
                speed: 1190.25
                value: {index: 108, type: Single}
              - key: [1024, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 704, 128]
                speed: 1458.65
                value: {index: 110, type: Single}
              - key: [1024, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1024, 128]
                speed: 2051.98
                value: {index: 110, type: Single}
              - key: [1024, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1408, 128]
                speed: 2332.75
                value: {index: 110, type: Single}
              - key: [1024, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1856, 128]
                speed: 2405.92
                value: {index: 110, type: Single}
              - key: [1024, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 2368, 128]
                speed: 2658.65
                value: {index: 110, type: Single}
              - key: [1024, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 2944, 128]
                speed: 2868.52
                value: {index: 110, type: Single}
              - key: [1024, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 3584, 128]
                speed: 2999.84
                value: {index: 110, type: Single}
              - key: [1024, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 4288, 128]
                speed: 3001.32
                value: {index: 110, type: Single}
              - key: [1024, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 5056, 128]
                speed: 3106.35
                value: {index: 110, type: Single}
              - key: [1024, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 5888, 128]
                speed: 3200.76
                value: {index: 110, type: Single}
              - key: [1024, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 6784, 128]
                speed: 3244.29
                value: {index: 110, type: Single}
              - key: [1024, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1024, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 4, 128]
                speed: 29.8526
                value: {index: 113, type: Single}
              - key: [1408, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1408, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1408, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1408, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1408, 64, 128]
                speed: 394.202
                value: {index: 108, type: Single}
              - key: [1408, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 128, 128]
                speed: 796.474
                value: {index: 108, type: Single}
              - key: [1408, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 256, 128]
                speed: 1248.19
                value: {index: 108, type: Single}
              - key: [1408, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 448, 128]
                speed: 1721.91
                value: {index: 108, type: Single}
              - key: [1408, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 704, 128]
                speed: 2168.13
                value: {index: 108, type: Single}
              - key: [1408, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1024, 128]
                speed: 2345.93
                value: {index: 110, type: Single}
              - key: [1408, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1408, 128]
                speed: 2749.31
                value: {index: 108, type: Single}
              - key: [1408, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1856, 128]
                speed: 2951.39
                value: {index: 108, type: Single}
              - key: [1408, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 2368, 128]
                speed: 3126.04
                value: {index: 108, type: Single}
              - key: [1408, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 2944, 128]
                speed: 3242.51
                value: {index: 108, type: Single}
              - key: [1408, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 3584, 128]
                speed: 3204.63
                value: {index: 108, type: Single}
              - key: [1408, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 4288, 128]
                speed: 3435.17
                value: {index: 108, type: Single}
              - key: [1408, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 5056, 128]
                speed: 3494.64
                value: {index: 108, type: Single}
              - key: [1408, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 5888, 128]
                speed: 3510.26
                value: {index: 108, type: Single}
              - key: [1408, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 6784, 128]
                speed: 3609.3
                value: {index: 108, type: Single}
              - key: [1408, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1408, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 4, 128]
                speed: 39.9635
                value: {index: 113, type: Single}
              - key: [1856, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1856, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1856, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1856, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [1856, 64, 128]
                speed: 508.056
                value: {index: 108, type: Single}
              - key: [1856, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 128, 128]
                speed: 894.36
                value: {index: 108, type: Single}
              - key: [1856, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 256, 128]
                speed: 1549.09
                value: {index: 108, type: Single}
              - key: [1856, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 448, 128]
                speed: 1962.81
                value: {index: 108, type: Single}
              - key: [1856, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 704, 128]
                speed: 2522.69
                value: {index: 108, type: Single}
              - key: [1856, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1024, 128]
                speed: 2495.5
                value: {index: 109, type: Single}
              - key: [1856, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1408, 128]
                speed: 3053.15
                value: {index: 108, type: Single}
              - key: [1856, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1856, 128]
                speed: 3156.1
                value: {index: 108, type: Single}
              - key: [1856, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 2368, 128]
                speed: 3352.95
                value: {index: 108, type: Single}
              - key: [1856, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 2944, 128]
                speed: 3442.12
                value: {index: 108, type: Single}
              - key: [1856, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 3584, 128]
                speed: 3396.65
                value: {index: 108, type: Single}
              - key: [1856, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 4288, 128]
                speed: 3585.94
                value: {index: 108, type: Single}
              - key: [1856, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 5056, 128]
                speed: 3641.4
                value: {index: 108, type: Single}
              - key: [1856, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 5888, 128]
                speed: 3666.69
                value: {index: 108, type: Single}
              - key: [1856, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 6784, 128]
                speed: 3719.78
                value: {index: 108, type: Single}
              - key: [1856, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [1856, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 4, 128]
                speed: 50.0533
                value: {index: 113, type: Single}
              - key: [2368, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [2368, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [2368, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [2368, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [2368, 64, 128]
                speed: 597.894
                value: {index: 108, type: Single}
              - key: [2368, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 128, 128]
                speed: 1098.02
                value: {index: 108, type: Single}
              - key: [2368, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 256, 128]
                speed: 1670.66
                value: {index: 108, type: Single}
              - key: [2368, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 448, 128]
                speed: 2124.15
                value: {index: 108, type: Single}
              - key: [2368, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 704, 128]
                speed: 2623.55
                value: {index: 108, type: Single}
              - key: [2368, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1024, 128]
                speed: 2668.81
                value: {index: 110, type: Single}
              - key: [2368, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1408, 128]
                speed: 3184.79
                value: {index: 108, type: Single}
              - key: [2368, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1856, 128]
                speed: 3336.74
                value: {index: 108, type: Single}
              - key: [2368, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 2368, 128]
                speed: 3439.63
                value: {index: 108, type: Single}
              - key: [2368, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 2944, 128]
                speed: 3526.44
                value: {index: 108, type: Single}
              - key: [2368, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 3584, 128]
                speed: 3436.87
                value: {index: 109, type: Single}
              - key: [2368, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 4288, 128]
                speed: 3663.76
                value: {index: 108, type: Single}
              - key: [2368, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 5056, 128]
                speed: 3720.91
                value: {index: 108, type: Single}
              - key: [2368, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 5888, 128]
                speed: 3727.79
                value: {index: 108, type: Single}
              - key: [2368, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 6784, 128]
                speed: 3791.17
                value: {index: 108, type: Single}
              - key: [2368, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2368, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 4, 128]
                speed: 62.8053
                value: {index: 113, type: Single}
              - key: [2944, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [2944, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [2944, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [2944, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [2944, 64, 128]
                speed: 717.135
                value: {index: 108, type: Single}
              - key: [2944, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 128, 128]
                speed: 1279.28
                value: {index: 108, type: Single}
              - key: [2944, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 256, 128]
                speed: 1940.85
                value: {index: 108, type: Single}
              - key: [2944, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 448, 128]
                speed: 2327.92
                value: {index: 108, type: Single}
              - key: [2944, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 704, 128]
                speed: 2808.89
                value: {index: 108, type: Single}
              - key: [2944, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1024, 128]
                speed: 2852.8
                value: {index: 110, type: Single}
              - key: [2944, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1408, 128]
                speed: 3260.22
                value: {index: 108, type: Single}
              - key: [2944, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1856, 128]
                speed: 3380.49
                value: {index: 108, type: Single}
              - key: [2944, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 2368, 128]
                speed: 3510.01
                value: {index: 108, type: Single}
              - key: [2944, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 2944, 128]
                speed: 3600.99
                value: {index: 108, type: Single}
              - key: [2944, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 3584, 128]
                speed: 3474.14
                value: {index: 110, type: Single}
              - key: [2944, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 4288, 128]
                speed: 3711.7
                value: {index: 108, type: Single}
              - key: [2944, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 5056, 128]
                speed: 3717.92
                value: {index: 108, type: Single}
              - key: [2944, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 5888, 128]
                speed: 3690.62
                value: {index: 108, type: Single}
              - key: [2944, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 6784, 128]
                speed: 3794.94
                value: {index: 108, type: Single}
              - key: [2944, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [2944, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 4, 128]
                speed: 75.7548
                value: {index: 112, type: Single}
              - key: [3584, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [3584, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [3584, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [3584, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [3584, 64, 128]
                speed: 837.963
                value: {index: 108, type: Single}
              - key: [3584, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 128, 128]
                speed: 1147.18
                value: {index: 110, type: Single}
              - key: [3584, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 256, 128]
                speed: 1828.62
                value: {index: 110, type: Single}
              - key: [3584, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 448, 128]
                speed: 2181.19
                value: {index: 109, type: Single}
              - key: [3584, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 704, 128]
                speed: 2461.82
                value: {index: 109, type: Single}
              - key: [3584, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1024, 128]
                speed: 3025.61
                value: {index: 110, type: Single}
              - key: [3584, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1408, 128]
                speed: 3197.57
                value: {index: 110, type: Single}
              - key: [3584, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1856, 128]
                speed: 3182.25
                value: {index: 110, type: Single}
              - key: [3584, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 2368, 128]
                speed: 3364.33
                value: {index: 110, type: Single}
              - key: [3584, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 2944, 128]
                speed: 3476.79
                value: {index: 110, type: Single}
              - key: [3584, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 3584, 128]
                speed: 3571.91
                value: {index: 110, type: Single}
              - key: [3584, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 4288, 128]
                speed: 3586.68
                value: {index: 110, type: Single}
              - key: [3584, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 5056, 128]
                speed: 3651.97
                value: {index: 110, type: Single}
              - key: [3584, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 5888, 128]
                speed: 3674.76
                value: {index: 110, type: Single}
              - key: [3584, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 6784, 128]
                speed: 3709.15
                value: {index: 110, type: Single}
              - key: [3584, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [3584, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 4, 128]
                speed: 90.0866
                value: {index: 113, type: Single}
              - key: [4288, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4288, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4288, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4288, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [4288, 64, 128]
                speed: 963.831
                value: {index: 108, type: Single}
              - key: [4288, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 128, 128]
                speed: 1498.3
                value: {index: 108, type: Single}
              - key: [4288, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 256, 128]
                speed: 2162.88
                value: {index: 108, type: Single}
              - key: [4288, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 448, 128]
                speed: 2705.36
                value: {index: 108, type: Single}
              - key: [4288, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 704, 128]
                speed: 3084.75
                value: {index: 108, type: Single}
              - key: [4288, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1024, 128]
                speed: 3065.59
                value: {index: 110, type: Single}
              - key: [4288, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1408, 128]
                speed: 3470.59
                value: {index: 108, type: Single}
              - key: [4288, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1856, 128]
                speed: 3570.12
                value: {index: 108, type: Single}
              - key: [4288, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 2368, 128]
                speed: 3669.12
                value: {index: 108, type: Single}
              - key: [4288, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 2944, 128]
                speed: 3730.74
                value: {index: 108, type: Single}
              - key: [4288, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 3584, 128]
                speed: 3626.35
                value: {index: 109, type: Single}
              - key: [4288, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 4288, 128]
                speed: 3804.58
                value: {index: 108, type: Single}
              - key: [4288, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 5056, 128]
                speed: 3826.62
                value: {index: 108, type: Single}
              - key: [4288, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 5888, 128]
                speed: 3785.12
                value: {index: 108, type: Single}
              - key: [4288, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 6784, 128]
                speed: 3874.68
                value: {index: 108, type: Single}
              - key: [4288, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [4288, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 4, 128]
                speed: 102.784
                value: {index: 113, type: Single}
              - key: [5056, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [5056, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [5056, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [5056, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [5056, 64, 128]
                speed: 1148.14
                value: {index: 108, type: Single}
              - key: [5056, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 128, 128]
                speed: 1736.47
                value: {index: 108, type: Single}
              - key: [5056, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 256, 128]
                speed: 2433.71
                value: {index: 108, type: Single}
              - key: [5056, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 448, 128]
                speed: 2884.3
                value: {index: 108, type: Single}
              - key: [5056, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 704, 128]
                speed: 3191.78
                value: {index: 108, type: Single}
              - key: [5056, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1024, 128]
                speed: 3235.55
                value: {index: 110, type: Single}
              - key: [5056, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1408, 128]
                speed: 3529.74
                value: {index: 108, type: Single}
              - key: [5056, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1856, 128]
                speed: 3640.58
                value: {index: 108, type: Single}
              - key: [5056, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 2368, 128]
                speed: 3695.65
                value: {index: 108, type: Single}
              - key: [5056, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 2944, 128]
                speed: 3747.17
                value: {index: 108, type: Single}
              - key: [5056, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 3584, 128]
                speed: 3657.94
                value: {index: 110, type: Single}
              - key: [5056, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 4288, 128]
                speed: 3837.98
                value: {index: 108, type: Single}
              - key: [5056, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 5056, 128]
                speed: 3844.74
                value: {index: 108, type: Single}
              - key: [5056, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 5888, 128]
                speed: 3767.2
                value: {index: 110, type: Single}
              - key: [5056, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 6784, 128]
                speed: 3878.87
                value: {index: 108, type: Single}
              - key: [5056, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5056, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 4, 128]
                speed: 119.698
                value: {index: 113, type: Single}
              - key: [5888, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [5888, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [5888, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [5888, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [5888, 64, 128]
                speed: 1214.84
                value: {index: 108, type: Single}
              - key: [5888, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 128, 128]
                speed: 1689.12
                value: {index: 108, type: Single}
              - key: [5888, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 256, 128]
                speed: 2466.48
                value: {index: 108, type: Single}
              - key: [5888, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 448, 128]
                speed: 2612.08
                value: {index: 108, type: Single}
              - key: [5888, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 704, 128]
                speed: 2918.78
                value: {index: 108, type: Single}
              - key: [5888, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1024, 128]
                speed: 3272.13
                value: {index: 110, type: Single}
              - key: [5888, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1408, 128]
                speed: 3470.3
                value: {index: 110, type: Single}
              - key: [5888, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1856, 128]
                speed: 3449.66
                value: {index: 110, type: Single}
              - key: [5888, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 2368, 128]
                speed: 3518.21
                value: {index: 110, type: Single}
              - key: [5888, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 2944, 128]
                speed: 3638.61
                value: {index: 110, type: Single}
              - key: [5888, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 3584, 128]
                speed: 3688.14
                value: {index: 110, type: Single}
              - key: [5888, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 4288, 128]
                speed: 3695.04
                value: {index: 110, type: Single}
              - key: [5888, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 5056, 128]
                speed: 3717.11
                value: {index: 110, type: Single}
              - key: [5888, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 5888, 128]
                speed: 3755.87
                value: {index: 110, type: Single}
              - key: [5888, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 6784, 128]
                speed: 3788.48
                value: {index: 110, type: Single}
              - key: [5888, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [5888, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 4, 128]
                speed: 137.105
                value: {index: 113, type: Single}
              - key: [6784, 4, 256]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [6784, 4, 768]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [6784, 4, 1792]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [6784, 4, 3328]
                speed: 0.0
                value: {index: 114, type: Single}
              - key: [6784, 64, 128]
                speed: 1330.22
                value: {index: 108, type: Single}
              - key: [6784, 64, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 64, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 64, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 64, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 128, 128]
                speed: 1887.4
                value: {index: 108, type: Single}
              - key: [6784, 128, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 128, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 128, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 128, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 256, 128]
                speed: 2424.04
                value: {index: 108, type: Single}
              - key: [6784, 256, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 256, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 256, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 256, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 448, 128]
                speed: 2927.36
                value: {index: 108, type: Single}
              - key: [6784, 448, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 448, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 448, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 448, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 704, 128]
                speed: 3260.63
                value: {index: 108, type: Single}
              - key: [6784, 704, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 704, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 704, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 704, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1024, 128]
                speed: 3317.82
                value: {index: 110, type: Single}
              - key: [6784, 1024, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1024, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1024, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1024, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1408, 128]
                speed: 3517.76
                value: {index: 108, type: Single}
              - key: [6784, 1408, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1408, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1408, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1408, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1856, 128]
                speed: 3629.8
                value: {index: 108, type: Single}
              - key: [6784, 1856, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1856, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1856, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 1856, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 2368, 128]
                speed: 3671.34
                value: {index: 108, type: Single}
              - key: [6784, 2368, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 2368, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 2368, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 2368, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 2944, 128]
                speed: 3689.85
                value: {index: 108, type: Single}
              - key: [6784, 2944, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 2944, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 2944, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 2944, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 3584, 128]
                speed: 3710.46
                value: {index: 110, type: Single}
              - key: [6784, 3584, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 3584, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 3584, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 3584, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 4288, 128]
                speed: 3765.83
                value: {index: 108, type: Single}
              - key: [6784, 4288, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 4288, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 4288, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 4288, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 5056, 128]
                speed: 3783.78
                value: {index: 108, type: Single}
              - key: [6784, 5056, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 5056, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 5056, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 5056, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 5888, 128]
                speed: 3782.46
                value: {index: 110, type: Single}
              - key: [6784, 5888, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 5888, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 5888, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 5888, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 6784, 128]
                speed: 3807.24
                value: {index: 110, type: Single}
              - key: [6784, 6784, 256]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 6784, 768]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 6784, 1792]
                speed: 0.0
                value: {index: 111, type: Single}
              - key: [6784, 6784, 3328]
                speed: 0.0
                value: {index: 111, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
        Contraction_l_Ailk_Bljk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.0796763
                value: {index: 66, type: Single}
              - key: [4, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 64, 128]
                speed: 1.4133
                value: {index: 66, type: Single}
              - key: [4, 64, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 64, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 64, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 64, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 128, 128]
                speed: 2.83564
                value: {index: 66, type: Single}
              - key: [4, 128, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 128, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 128, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 128, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 256, 128]
                speed: 5.63508
                value: {index: 66, type: Single}
              - key: [4, 256, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 256, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 256, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 256, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 448, 128]
                speed: 10.1861
                value: {index: 66, type: Single}
              - key: [4, 448, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 448, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 448, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 448, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 704, 128]
                speed: 15.4968
                value: {index: 65, type: Single}
              - key: [4, 704, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 704, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 704, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 704, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1024, 128]
                speed: 21.9124
                value: {index: 65, type: Single}
              - key: [4, 1024, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1024, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1024, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1024, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1408, 128]
                speed: 31.7003
                value: {index: 65, type: Single}
              - key: [4, 1408, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1408, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1408, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1408, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1856, 128]
                speed: 40.596
                value: {index: 66, type: Single}
              - key: [4, 1856, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1856, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1856, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 1856, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 2368, 128]
                speed: 52.292
                value: {index: 65, type: Single}
              - key: [4, 2368, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 2368, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 2368, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 2368, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 2944, 128]
                speed: 65.4293
                value: {index: 65, type: Single}
              - key: [4, 2944, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 2944, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 2944, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 2944, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 3584, 128]
                speed: 77.8998
                value: {index: 65, type: Single}
              - key: [4, 3584, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 3584, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 3584, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 3584, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 4288, 128]
                speed: 89.0038
                value: {index: 66, type: Single}
              - key: [4, 4288, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 4288, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 4288, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 4288, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 5056, 128]
                speed: 98.1636
                value: {index: 66, type: Single}
              - key: [4, 5056, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 5056, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 5056, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 5056, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 5888, 128]
                speed: 113.997
                value: {index: 66, type: Single}
              - key: [4, 5888, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 5888, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 5888, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 5888, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 6784, 128]
                speed: 122.748
                value: {index: 66, type: Single}
              - key: [4, 6784, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 6784, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 6784, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4, 6784, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [64, 4, 128]
                speed: 1.45516
                value: {index: 66, type: Single}
              - key: [64, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [64, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [64, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [64, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [64, 64, 128]
                speed: 17.8281
                value: {index: 63, type: Single}
              - key: [64, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 128, 128]
                speed: 35.3884
                value: {index: 63, type: Single}
              - key: [64, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 256, 128]
                speed: 72.0386
                value: {index: 63, type: Single}
              - key: [64, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 448, 128]
                speed: 128.687
                value: {index: 63, type: Single}
              - key: [64, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 704, 128]
                speed: 207.613
                value: {index: 63, type: Single}
              - key: [64, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1024, 128]
                speed: 298.798
                value: {index: 63, type: Single}
              - key: [64, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1408, 128]
                speed: 387.338
                value: {index: 63, type: Single}
              - key: [64, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1856, 128]
                speed: 494.595
                value: {index: 63, type: Single}
              - key: [64, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 2368, 128]
                speed: 631.025
                value: {index: 63, type: Single}
              - key: [64, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 2944, 128]
                speed: 731.635
                value: {index: 63, type: Single}
              - key: [64, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 3584, 128]
                speed: 888.691
                value: {index: 63, type: Single}
              - key: [64, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 4288, 128]
                speed: 836.344
                value: {index: 63, type: Single}
              - key: [64, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 5056, 128]
                speed: 965.697
                value: {index: 63, type: Single}
              - key: [64, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 5888, 128]
                speed: 1150.45
                value: {index: 63, type: Single}
              - key: [64, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 6784, 128]
                speed: 1260.92
                value: {index: 63, type: Single}
              - key: [64, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [64, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 4, 128]
                speed: 2.96886
                value: {index: 66, type: Single}
              - key: [128, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [128, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [128, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [128, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [128, 64, 128]
                speed: 36.8633
                value: {index: 63, type: Single}
              - key: [128, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 128, 128]
                speed: 74.5018
                value: {index: 63, type: Single}
              - key: [128, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 256, 128]
                speed: 143.712
                value: {index: 63, type: Single}
              - key: [128, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 448, 128]
                speed: 267.085
                value: {index: 63, type: Single}
              - key: [128, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 704, 128]
                speed: 392.218
                value: {index: 63, type: Single}
              - key: [128, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1024, 128]
                speed: 536.699
                value: {index: 63, type: Single}
              - key: [128, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1408, 128]
                speed: 739.712
                value: {index: 63, type: Single}
              - key: [128, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1856, 128]
                speed: 879.029
                value: {index: 63, type: Single}
              - key: [128, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 2368, 128]
                speed: 945.411
                value: {index: 63, type: Single}
              - key: [128, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 2944, 128]
                speed: 1072.74
                value: {index: 63, type: Single}
              - key: [128, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 3584, 128]
                speed: 1303.79
                value: {index: 63, type: Single}
              - key: [128, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 4288, 128]
                speed: 1333.93
                value: {index: 63, type: Single}
              - key: [128, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 5056, 128]
                speed: 1542.47
                value: {index: 63, type: Single}
              - key: [128, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 5888, 128]
                speed: 1722.63
                value: {index: 63, type: Single}
              - key: [128, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 6784, 128]
                speed: 1632.74
                value: {index: 63, type: Single}
              - key: [128, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [128, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 4, 128]
                speed: 5.74499
                value: {index: 66, type: Single}
              - key: [256, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [256, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [256, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [256, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [256, 64, 128]
                speed: 73.9202
                value: {index: 63, type: Single}
              - key: [256, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 128, 128]
                speed: 147.838
                value: {index: 63, type: Single}
              - key: [256, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 256, 128]
                speed: 295.675
                value: {index: 63, type: Single}
              - key: [256, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 448, 128]
                speed: 459.808
                value: {index: 63, type: Single}
              - key: [256, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 704, 128]
                speed: 661.192
                value: {index: 63, type: Single}
              - key: [256, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1024, 128]
                speed: 743.803
                value: {index: 63, type: Single}
              - key: [256, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1408, 128]
                speed: 900.065
                value: {index: 63, type: Single}
              - key: [256, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1856, 128]
                speed: 1158.0
                value: {index: 62, type: Single}
              - key: [256, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 2368, 128]
                speed: 1256.0
                value: {index: 63, type: Single}
              - key: [256, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 2944, 128]
                speed: 1466.56
                value: {index: 62, type: Single}
              - key: [256, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 3584, 128]
                speed: 1777.38
                value: {index: 62, type: Single}
              - key: [256, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 4288, 128]
                speed: 1711.95
                value: {index: 62, type: Single}
              - key: [256, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 5056, 128]
                speed: 2024.04
                value: {index: 62, type: Single}
              - key: [256, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 5888, 128]
                speed: 2311.12
                value: {index: 62, type: Single}
              - key: [256, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 6784, 128]
                speed: 2126.84
                value: {index: 62, type: Single}
              - key: [256, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [256, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 4, 128]
                speed: 9.89287
                value: {index: 66, type: Single}
              - key: [448, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [448, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [448, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [448, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [448, 64, 128]
                speed: 129.024
                value: {index: 63, type: Single}
              - key: [448, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 128, 128]
                speed: 271.476
                value: {index: 63, type: Single}
              - key: [448, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 256, 128]
                speed: 501.72
                value: {index: 63, type: Single}
              - key: [448, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 448, 128]
                speed: 843.834
                value: {index: 63, type: Single}
              - key: [448, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 704, 128]
                speed: 1142.53
                value: {index: 63, type: Single}
              - key: [448, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1024, 128]
                speed: 1554.33
                value: {index: 63, type: Single}
              - key: [448, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1408, 128]
                speed: 1735.62
                value: {index: 63, type: Single}
              - key: [448, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1856, 128]
                speed: 1895.5
                value: {index: 60, type: Single}
              - key: [448, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 2368, 128]
                speed: 2043.64
                value: {index: 63, type: Single}
              - key: [448, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 2944, 128]
                speed: 2193.49
                value: {index: 63, type: Single}
              - key: [448, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 3584, 128]
                speed: 2308.21
                value: {index: 63, type: Single}
              - key: [448, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 4288, 128]
                speed: 2451.6
                value: {index: 63, type: Single}
              - key: [448, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 5056, 128]
                speed: 2549.84
                value: {index: 63, type: Single}
              - key: [448, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 5888, 128]
                speed: 2613.59
                value: {index: 63, type: Single}
              - key: [448, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 6784, 128]
                speed: 2759.69
                value: {index: 62, type: Single}
              - key: [448, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [448, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 4, 128]
                speed: 15.0184
                value: {index: 66, type: Single}
              - key: [704, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [704, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [704, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [704, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [704, 64, 128]
                speed: 208.167
                value: {index: 63, type: Single}
              - key: [704, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 128, 128]
                speed: 399.257
                value: {index: 63, type: Single}
              - key: [704, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 256, 128]
                speed: 772.755
                value: {index: 63, type: Single}
              - key: [704, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 448, 128]
                speed: 1147.34
                value: {index: 63, type: Single}
              - key: [704, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 704, 128]
                speed: 1625.05
                value: {index: 63, type: Single}
              - key: [704, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1024, 128]
                speed: 1907.64
                value: {index: 63, type: Single}
              - key: [704, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1408, 128]
                speed: 2138.35
                value: {index: 60, type: Single}
              - key: [704, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1856, 128]
                speed: 2342.13
                value: {index: 63, type: Single}
              - key: [704, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 2368, 128]
                speed: 2340.08
                value: {index: 63, type: Single}
              - key: [704, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 2944, 128]
                speed: 2591.43
                value: {index: 60, type: Single}
              - key: [704, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 3584, 128]
                speed: 2620.13
                value: {index: 63, type: Single}
              - key: [704, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 4288, 128]
                speed: 2702.76
                value: {index: 63, type: Single}
              - key: [704, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 5056, 128]
                speed: 2835.67
                value: {index: 62, type: Single}
              - key: [704, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 5888, 128]
                speed: 2931.93
                value: {index: 62, type: Single}
              - key: [704, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 6784, 128]
                speed: 2897.71
                value: {index: 62, type: Single}
              - key: [704, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [704, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 4, 128]
                speed: 21.2542
                value: {index: 66, type: Single}
              - key: [1024, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1024, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1024, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1024, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1024, 64, 128]
                speed: 293.38
                value: {index: 63, type: Single}
              - key: [1024, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 128, 128]
                speed: 532.915
                value: {index: 63, type: Single}
              - key: [1024, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 256, 128]
                speed: 913.257
                value: {index: 63, type: Single}
              - key: [1024, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 448, 128]
                speed: 1186.69
                value: {index: 63, type: Single}
              - key: [1024, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 704, 128]
                speed: 1394.94
                value: {index: 62, type: Single}
              - key: [1024, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1024, 128]
                speed: 2006.54
                value: {index: 62, type: Single}
              - key: [1024, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1408, 128]
                speed: 2212.6
                value: {index: 62, type: Single}
              - key: [1024, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1856, 128]
                speed: 2229.52
                value: {index: 62, type: Single}
              - key: [1024, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 2368, 128]
                speed: 2501.52
                value: {index: 62, type: Single}
              - key: [1024, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 2944, 128]
                speed: 2696.29
                value: {index: 62, type: Single}
              - key: [1024, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 3584, 128]
                speed: 2859.19
                value: {index: 62, type: Single}
              - key: [1024, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 4288, 128]
                speed: 2750.04
                value: {index: 62, type: Single}
              - key: [1024, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 5056, 128]
                speed: 2944.8
                value: {index: 62, type: Single}
              - key: [1024, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 5888, 128]
                speed: 2972.46
                value: {index: 62, type: Single}
              - key: [1024, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 6784, 128]
                speed: 3003.22
                value: {index: 62, type: Single}
              - key: [1024, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1024, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 4, 128]
                speed: 28.7078
                value: {index: 65, type: Single}
              - key: [1408, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1408, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1408, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1408, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1408, 64, 128]
                speed: 379.781
                value: {index: 63, type: Single}
              - key: [1408, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 128, 128]
                speed: 761.418
                value: {index: 63, type: Single}
              - key: [1408, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 256, 128]
                speed: 1268.52
                value: {index: 63, type: Single}
              - key: [1408, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 448, 128]
                speed: 1713.81
                value: {index: 63, type: Single}
              - key: [1408, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 704, 128]
                speed: 2046.36
                value: {index: 63, type: Single}
              - key: [1408, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1024, 128]
                speed: 2248.53
                value: {index: 62, type: Single}
              - key: [1408, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1408, 128]
                speed: 2410.73
                value: {index: 63, type: Single}
              - key: [1408, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1856, 128]
                speed: 2601.16
                value: {index: 60, type: Single}
              - key: [1408, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 2368, 128]
                speed: 2698.5
                value: {index: 62, type: Single}
              - key: [1408, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 2944, 128]
                speed: 2972.07
                value: {index: 62, type: Single}
              - key: [1408, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 3584, 128]
                speed: 3005.79
                value: {index: 62, type: Single}
              - key: [1408, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 4288, 128]
                speed: 3074.75
                value: {index: 62, type: Single}
              - key: [1408, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 5056, 128]
                speed: 3167.95
                value: {index: 62, type: Single}
              - key: [1408, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 5888, 128]
                speed: 3241.77
                value: {index: 62, type: Single}
              - key: [1408, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 6784, 128]
                speed: 3222.44
                value: {index: 62, type: Single}
              - key: [1408, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1408, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 4, 128]
                speed: 38.6399
                value: {index: 66, type: Single}
              - key: [1856, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1856, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1856, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1856, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [1856, 64, 128]
                speed: 498.193
                value: {index: 63, type: Single}
              - key: [1856, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 128, 128]
                speed: 998.808
                value: {index: 63, type: Single}
              - key: [1856, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 256, 128]
                speed: 1594.23
                value: {index: 63, type: Single}
              - key: [1856, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 448, 128]
                speed: 1900.51
                value: {index: 60, type: Single}
              - key: [1856, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 704, 128]
                speed: 2364.19
                value: {index: 63, type: Single}
              - key: [1856, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1024, 128]
                speed: 2425.47
                value: {index: 60, type: Single}
              - key: [1856, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1408, 128]
                speed: 2679.89
                value: {index: 63, type: Single}
              - key: [1856, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1856, 128]
                speed: 2777.6
                value: {index: 63, type: Single}
              - key: [1856, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 2368, 128]
                speed: 2911.98
                value: {index: 63, type: Single}
              - key: [1856, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 2944, 128]
                speed: 3019.43
                value: {index: 62, type: Single}
              - key: [1856, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 3584, 128]
                speed: 3149.12
                value: {index: 62, type: Single}
              - key: [1856, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 4288, 128]
                speed: 3151.98
                value: {index: 62, type: Single}
              - key: [1856, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 5056, 128]
                speed: 3163.31
                value: {index: 62, type: Single}
              - key: [1856, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 5888, 128]
                speed: 3336.89
                value: {index: 62, type: Single}
              - key: [1856, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 6784, 128]
                speed: 3315.61
                value: {index: 62, type: Single}
              - key: [1856, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [1856, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 4, 128]
                speed: 49.0043
                value: {index: 66, type: Single}
              - key: [2368, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [2368, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [2368, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [2368, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [2368, 64, 128]
                speed: 641.851
                value: {index: 63, type: Single}
              - key: [2368, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 128, 128]
                speed: 1109.65
                value: {index: 63, type: Single}
              - key: [2368, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 256, 128]
                speed: 1678.7
                value: {index: 63, type: Single}
              - key: [2368, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 448, 128]
                speed: 2030.06
                value: {index: 63, type: Single}
              - key: [2368, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 704, 128]
                speed: 2386.62
                value: {index: 63, type: Single}
              - key: [2368, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1024, 128]
                speed: 2626.98
                value: {index: 63, type: Single}
              - key: [2368, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1408, 128]
                speed: 2811.76
                value: {index: 63, type: Single}
              - key: [2368, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1856, 128]
                speed: 2920.94
                value: {index: 63, type: Single}
              - key: [2368, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 2368, 128]
                speed: 3056.61
                value: {index: 62, type: Single}
              - key: [2368, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 2944, 128]
                speed: 3124.06
                value: {index: 62, type: Single}
              - key: [2368, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 3584, 128]
                speed: 3178.4
                value: {index: 62, type: Single}
              - key: [2368, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 4288, 128]
                speed: 3249.22
                value: {index: 62, type: Single}
              - key: [2368, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 5056, 128]
                speed: 3264.17
                value: {index: 62, type: Single}
              - key: [2368, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 5888, 128]
                speed: 3371.97
                value: {index: 62, type: Single}
              - key: [2368, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 6784, 128]
                speed: 3414.39
                value: {index: 62, type: Single}
              - key: [2368, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2368, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 4, 128]
                speed: 60.9231
                value: {index: 66, type: Single}
              - key: [2944, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [2944, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [2944, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [2944, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [2944, 64, 128]
                speed: 782.646
                value: {index: 63, type: Single}
              - key: [2944, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 128, 128]
                speed: 1331.6
                value: {index: 63, type: Single}
              - key: [2944, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 256, 128]
                speed: 1932.2
                value: {index: 63, type: Single}
              - key: [2944, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 448, 128]
                speed: 2187.18
                value: {index: 63, type: Single}
              - key: [2944, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 704, 128]
                speed: 2550.81
                value: {index: 63, type: Single}
              - key: [2944, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1024, 128]
                speed: 2750.38
                value: {index: 62, type: Single}
              - key: [2944, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1408, 128]
                speed: 2934.33
                value: {index: 62, type: Single}
              - key: [2944, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1856, 128]
                speed: 3012.68
                value: {index: 62, type: Single}
              - key: [2944, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 2368, 128]
                speed: 3102.33
                value: {index: 62, type: Single}
              - key: [2944, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 2944, 128]
                speed: 3235.37
                value: {index: 62, type: Single}
              - key: [2944, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 3584, 128]
                speed: 3252.87
                value: {index: 62, type: Single}
              - key: [2944, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 4288, 128]
                speed: 3144.09
                value: {index: 63, type: Single}
              - key: [2944, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 5056, 128]
                speed: 3386.96
                value: {index: 62, type: Single}
              - key: [2944, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 5888, 128]
                speed: 3400.29
                value: {index: 62, type: Single}
              - key: [2944, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 6784, 128]
                speed: 3421.69
                value: {index: 62, type: Single}
              - key: [2944, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [2944, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 4, 128]
                speed: 73.7262
                value: {index: 66, type: Single}
              - key: [3584, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [3584, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [3584, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [3584, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [3584, 64, 128]
                speed: 941.452
                value: {index: 63, type: Single}
              - key: [3584, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 128, 128]
                speed: 1425.73
                value: {index: 63, type: Single}
              - key: [3584, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 256, 128]
                speed: 1779.37
                value: {index: 61, type: Single}
              - key: [3584, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 448, 128]
                speed: 1976.12
                value: {index: 62, type: Single}
              - key: [3584, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 704, 128]
                speed: 2344.04
                value: {index: 62, type: Single}
              - key: [3584, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1024, 128]
                speed: 2890.46
                value: {index: 62, type: Single}
              - key: [3584, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1408, 128]
                speed: 3000.62
                value: {index: 62, type: Single}
              - key: [3584, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1856, 128]
                speed: 2955.59
                value: {index: 62, type: Single}
              - key: [3584, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 2368, 128]
                speed: 3166.05
                value: {index: 62, type: Single}
              - key: [3584, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 2944, 128]
                speed: 3241.3
                value: {index: 62, type: Single}
              - key: [3584, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 3584, 128]
                speed: 3340.23
                value: {index: 62, type: Single}
              - key: [3584, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 4288, 128]
                speed: 3363.19
                value: {index: 62, type: Single}
              - key: [3584, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 5056, 128]
                speed: 3377.78
                value: {index: 62, type: Single}
              - key: [3584, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 5888, 128]
                speed: 3444.28
                value: {index: 62, type: Single}
              - key: [3584, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 6784, 128]
                speed: 3465.61
                value: {index: 62, type: Single}
              - key: [3584, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [3584, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 4, 128]
                speed: 87.6867
                value: {index: 65, type: Single}
              - key: [4288, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4288, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4288, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4288, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [4288, 64, 128]
                speed: 946.534
                value: {index: 63, type: Single}
              - key: [4288, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 128, 128]
                speed: 1491.23
                value: {index: 63, type: Single}
              - key: [4288, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 256, 128]
                speed: 2086.73
                value: {index: 63, type: Single}
              - key: [4288, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 448, 128]
                speed: 2495.84
                value: {index: 63, type: Single}
              - key: [4288, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 704, 128]
                speed: 2789.47
                value: {index: 63, type: Single}
              - key: [4288, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1024, 128]
                speed: 2967.29
                value: {index: 63, type: Single}
              - key: [4288, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1408, 128]
                speed: 3082.92
                value: {index: 63, type: Single}
              - key: [4288, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1856, 128]
                speed: 3191.48
                value: {index: 63, type: Single}
              - key: [4288, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 2368, 128]
                speed: 3254.04
                value: {index: 62, type: Single}
              - key: [4288, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 2944, 128]
                speed: 3315.65
                value: {index: 62, type: Single}
              - key: [4288, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 3584, 128]
                speed: 3379.46
                value: {index: 62, type: Single}
              - key: [4288, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 4288, 128]
                speed: 3401.36
                value: {index: 62, type: Single}
              - key: [4288, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 5056, 128]
                speed: 3442.62
                value: {index: 62, type: Single}
              - key: [4288, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 5888, 128]
                speed: 3468.82
                value: {index: 62, type: Single}
              - key: [4288, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 6784, 128]
                speed: 3503.85
                value: {index: 62, type: Single}
              - key: [4288, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [4288, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 4, 128]
                speed: 100.134
                value: {index: 66, type: Single}
              - key: [5056, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [5056, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [5056, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [5056, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [5056, 64, 128]
                speed: 1152.87
                value: {index: 63, type: Single}
              - key: [5056, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 128, 128]
                speed: 1752.79
                value: {index: 63, type: Single}
              - key: [5056, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 256, 128]
                speed: 2317.7
                value: {index: 63, type: Single}
              - key: [5056, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 448, 128]
                speed: 2626.86
                value: {index: 63, type: Single}
              - key: [5056, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 704, 128]
                speed: 2850.12
                value: {index: 63, type: Single}
              - key: [5056, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1024, 128]
                speed: 3072.22
                value: {index: 62, type: Single}
              - key: [5056, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1408, 128]
                speed: 3162.25
                value: {index: 62, type: Single}
              - key: [5056, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1856, 128]
                speed: 3221.13
                value: {index: 63, type: Single}
              - key: [5056, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 2368, 128]
                speed: 3262.11
                value: {index: 63, type: Single}
              - key: [5056, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 2944, 128]
                speed: 3387.41
                value: {index: 62, type: Single}
              - key: [5056, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 3584, 128]
                speed: 3432.21
                value: {index: 62, type: Single}
              - key: [5056, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 4288, 128]
                speed: 3454.68
                value: {index: 62, type: Single}
              - key: [5056, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 5056, 128]
                speed: 3447.73
                value: {index: 62, type: Single}
              - key: [5056, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 5888, 128]
                speed: 3513.74
                value: {index: 62, type: Single}
              - key: [5056, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 6784, 128]
                speed: 3525.83
                value: {index: 62, type: Single}
              - key: [5056, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5056, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 4, 128]
                speed: 118.999
                value: {index: 66, type: Single}
              - key: [5888, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [5888, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [5888, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [5888, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [5888, 64, 128]
                speed: 1266.83
                value: {index: 63, type: Single}
              - key: [5888, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 128, 128]
                speed: 1695.73
                value: {index: 63, type: Single}
              - key: [5888, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 256, 128]
                speed: 2361.38
                value: {index: 62, type: Single}
              - key: [5888, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 448, 128]
                speed: 2442.7
                value: {index: 62, type: Single}
              - key: [5888, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 704, 128]
                speed: 2728.64
                value: {index: 62, type: Single}
              - key: [5888, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1024, 128]
                speed: 3104.43
                value: {index: 62, type: Single}
              - key: [5888, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1408, 128]
                speed: 3250.6
                value: {index: 62, type: Single}
              - key: [5888, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1856, 128]
                speed: 3233.47
                value: {index: 62, type: Single}
              - key: [5888, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 2368, 128]
                speed: 3304.44
                value: {index: 62, type: Single}
              - key: [5888, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 2944, 128]
                speed: 3406.08
                value: {index: 62, type: Single}
              - key: [5888, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 3584, 128]
                speed: 3462.6
                value: {index: 62, type: Single}
              - key: [5888, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 4288, 128]
                speed: 3472.68
                value: {index: 62, type: Single}
              - key: [5888, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 5056, 128]
                speed: 3495.12
                value: {index: 62, type: Single}
              - key: [5888, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 5888, 128]
                speed: 3527.21
                value: {index: 62, type: Single}
              - key: [5888, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 6784, 128]
                speed: 3550.53
                value: {index: 62, type: Single}
              - key: [5888, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [5888, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 4, 128]
                speed: 135.914
                value: {index: 66, type: Single}
              - key: [6784, 4, 256]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [6784, 4, 768]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [6784, 4, 1792]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [6784, 4, 3328]
                speed: 0.0
                value: {index: 67, type: Single}
              - key: [6784, 64, 128]
                speed: 1437.24
                value: {index: 63, type: Single}
              - key: [6784, 64, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 64, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 64, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 64, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 128, 128]
                speed: 1859.33
                value: {index: 63, type: Single}
              - key: [6784, 128, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 128, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 128, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 128, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 256, 128]
                speed: 2329.95
                value: {index: 63, type: Single}
              - key: [6784, 256, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 256, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 256, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 256, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 448, 128]
                speed: 2668.54
                value: {index: 63, type: Single}
              - key: [6784, 448, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 448, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 448, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 448, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 704, 128]
                speed: 2855.59
                value: {index: 62, type: Single}
              - key: [6784, 704, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 704, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 704, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 704, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1024, 128]
                speed: 3106.6
                value: {index: 62, type: Single}
              - key: [6784, 1024, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1024, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1024, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1024, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1408, 128]
                speed: 3243.34
                value: {index: 62, type: Single}
              - key: [6784, 1408, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1408, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1408, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1408, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1856, 128]
                speed: 3290.04
                value: {index: 62, type: Single}
              - key: [6784, 1856, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1856, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1856, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 1856, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 2368, 128]
                speed: 3342.04
                value: {index: 62, type: Single}
              - key: [6784, 2368, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 2368, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 2368, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 2368, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 2944, 128]
                speed: 3443.54
                value: {index: 62, type: Single}
              - key: [6784, 2944, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 2944, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 2944, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 2944, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 3584, 128]
                speed: 3485.74
                value: {index: 62, type: Single}
              - key: [6784, 3584, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 3584, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 3584, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 3584, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 4288, 128]
                speed: 3450.93
                value: {index: 62, type: Single}
              - key: [6784, 4288, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 4288, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 4288, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 4288, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 5056, 128]
                speed: 3501.87
                value: {index: 62, type: Single}
              - key: [6784, 5056, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 5056, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 5056, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 5056, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 5888, 128]
                speed: 3506.88
                value: {index: 62, type: Single}
              - key: [6784, 5888, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 5888, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 5888, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 5888, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 6784, 128]
                speed: 3570.02
                value: {index: 62, type: Single}
              - key: [6784, 6784, 256]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 6784, 768]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 6784, 1792]
                speed: 0.0
                value: {index: 64, type: Single}
              - key: [6784, 6784, 3328]
                speed: 0.0
                value: {index: 64, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
        Contraction_l_Alik_Bjlk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.089185
                value: {index: 41, type: Single}
              - key: [4, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 64, 128]
                speed: 1.40433
                value: {index: 41, type: Single}
              - key: [4, 64, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 64, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 64, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 64, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 128, 128]
                speed: 2.81754
                value: {index: 40, type: Single}
              - key: [4, 128, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 128, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 128, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 128, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 256, 128]
                speed: 5.65307
                value: {index: 41, type: Single}
              - key: [4, 256, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 256, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 256, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 256, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 448, 128]
                speed: 9.8616
                value: {index: 41, type: Single}
              - key: [4, 448, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 448, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 448, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 448, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 704, 128]
                speed: 14.9722
                value: {index: 41, type: Single}
              - key: [4, 704, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 704, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 704, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 704, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1024, 128]
                speed: 21.4477
                value: {index: 41, type: Single}
              - key: [4, 1024, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1024, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1024, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1024, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1408, 128]
                speed: 30.0361
                value: {index: 41, type: Single}
              - key: [4, 1408, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1408, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1408, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1408, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1856, 128]
                speed: 38.7566
                value: {index: 41, type: Single}
              - key: [4, 1856, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1856, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1856, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 1856, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 2368, 128]
                speed: 50.2056
                value: {index: 41, type: Single}
              - key: [4, 2368, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 2368, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 2368, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 2368, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 2944, 128]
                speed: 62.0376
                value: {index: 41, type: Single}
              - key: [4, 2944, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 2944, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 2944, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 2944, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 3584, 128]
                speed: 74.6151
                value: {index: 40, type: Single}
              - key: [4, 3584, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 3584, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 3584, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 3584, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 4288, 128]
                speed: 88.7376
                value: {index: 41, type: Single}
              - key: [4, 4288, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 4288, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 4288, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 4288, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 5056, 128]
                speed: 103.39
                value: {index: 41, type: Single}
              - key: [4, 5056, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 5056, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 5056, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 5056, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 5888, 128]
                speed: 121.122
                value: {index: 41, type: Single}
              - key: [4, 5888, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 5888, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 5888, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 5888, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 6784, 128]
                speed: 136.306
                value: {index: 41, type: Single}
              - key: [4, 6784, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 6784, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 6784, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4, 6784, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [64, 4, 128]
                speed: 1.5149
                value: {index: 41, type: Single}
              - key: [64, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [64, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [64, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [64, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [64, 64, 128]
                speed: 14.6839
                value: {index: 36, type: Single}
              - key: [64, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 128, 128]
                speed: 34.2745
                value: {index: 35, type: Single}
              - key: [64, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 256, 128]
                speed: 69.7307
                value: {index: 35, type: Single}
              - key: [64, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 448, 128]
                speed: 127.036
                value: {index: 35, type: Single}
              - key: [64, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 704, 128]
                speed: 189.887
                value: {index: 35, type: Single}
              - key: [64, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1024, 128]
                speed: 283.107
                value: {index: 35, type: Single}
              - key: [64, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1408, 128]
                speed: 397.222
                value: {index: 35, type: Single}
              - key: [64, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1856, 128]
                speed: 504.307
                value: {index: 35, type: Single}
              - key: [64, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 2368, 128]
                speed: 620.558
                value: {index: 35, type: Single}
              - key: [64, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 2944, 128]
                speed: 728.354
                value: {index: 35, type: Single}
              - key: [64, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 3584, 128]
                speed: 871.104
                value: {index: 35, type: Single}
              - key: [64, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 4288, 128]
                speed: 848.311
                value: {index: 36, type: Single}
              - key: [64, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 5056, 128]
                speed: 984.403
                value: {index: 35, type: Single}
              - key: [64, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 5888, 128]
                speed: 1130.47
                value: {index: 35, type: Single}
              - key: [64, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 6784, 128]
                speed: 1254.57
                value: {index: 35, type: Single}
              - key: [64, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [64, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 4, 128]
                speed: 3.0826
                value: {index: 41, type: Single}
              - key: [128, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [128, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [128, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [128, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [128, 64, 128]
                speed: 34.525
                value: {index: 35, type: Single}
              - key: [128, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 128, 128]
                speed: 69.7319
                value: {index: 35, type: Single}
              - key: [128, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 256, 128]
                speed: 139.461
                value: {index: 35, type: Single}
              - key: [128, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 448, 128]
                speed: 240.507
                value: {index: 35, type: Single}
              - key: [128, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 704, 128]
                speed: 393.2
                value: {index: 35, type: Single}
              - key: [128, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1024, 128]
                speed: 539.252
                value: {index: 35, type: Single}
              - key: [128, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1408, 128]
                speed: 701.399
                value: {index: 35, type: Single}
              - key: [128, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1856, 128]
                speed: 875.285
                value: {index: 35, type: Single}
              - key: [128, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 2368, 128]
                speed: 909.284
                value: {index: 35, type: Single}
              - key: [128, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 2944, 128]
                speed: 1107.4
                value: {index: 35, type: Single}
              - key: [128, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 3584, 128]
                speed: 1345.85
                value: {index: 35, type: Single}
              - key: [128, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 4288, 128]
                speed: 1374.52
                value: {index: 35, type: Single}
              - key: [128, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 5056, 128]
                speed: 1546.72
                value: {index: 35, type: Single}
              - key: [128, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 5888, 128]
                speed: 1731.78
                value: {index: 35, type: Single}
              - key: [128, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 6784, 128]
                speed: 1742.71
                value: {index: 35, type: Single}
              - key: [128, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [128, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 4, 128]
                speed: 6.27454
                value: {index: 41, type: Single}
              - key: [256, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [256, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [256, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [256, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [256, 64, 128]
                speed: 69.7307
                value: {index: 35, type: Single}
              - key: [256, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 128, 128]
                speed: 138.44
                value: {index: 35, type: Single}
              - key: [256, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 256, 128]
                speed: 280.302
                value: {index: 35, type: Single}
              - key: [256, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 448, 128]
                speed: 478.685
                value: {index: 35, type: Single}
              - key: [256, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 704, 128]
                speed: 627.856
                value: {index: 35, type: Single}
              - key: [256, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1024, 128]
                speed: 820.612
                value: {index: 36, type: Single}
              - key: [256, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1408, 128]
                speed: 1012.75
                value: {index: 36, type: Single}
              - key: [256, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1856, 128]
                speed: 1203.84
                value: {index: 37, type: Single}
              - key: [256, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 2368, 128]
                speed: 1268.16
                value: {index: 36, type: Single}
              - key: [256, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 2944, 128]
                speed: 1507.29
                value: {index: 37, type: Single}
              - key: [256, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 3584, 128]
                speed: 1734.58
                value: {index: 37, type: Single}
              - key: [256, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 4288, 128]
                speed: 1848.77
                value: {index: 35, type: Single}
              - key: [256, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 5056, 128]
                speed: 2025.86
                value: {index: 37, type: Single}
              - key: [256, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 5888, 128]
                speed: 2389.53
                value: {index: 37, type: Single}
              - key: [256, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 6784, 128]
                speed: 2246.22
                value: {index: 37, type: Single}
              - key: [256, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [256, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 4, 128]
                speed: 11.2192
                value: {index: 41, type: Single}
              - key: [448, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [448, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [448, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [448, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [448, 64, 128]
                speed: 121.133
                value: {index: 35, type: Single}
              - key: [448, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 128, 128]
                speed: 253.424
                value: {index: 35, type: Single}
              - key: [448, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 256, 128]
                speed: 491.745
                value: {index: 35, type: Single}
              - key: [448, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 448, 128]
                speed: 829.677
                value: {index: 35, type: Single}
              - key: [448, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 704, 128]
                speed: 1135.38
                value: {index: 35, type: Single}
              - key: [448, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1024, 128]
                speed: 1504.18
                value: {index: 35, type: Single}
              - key: [448, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1408, 128]
                speed: 1708.41
                value: {index: 35, type: Single}
              - key: [448, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1856, 128]
                speed: 1827.95
                value: {index: 38, type: Single}
              - key: [448, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 2368, 128]
                speed: 1994.69
                value: {index: 35, type: Single}
              - key: [448, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 2944, 128]
                speed: 2170.49
                value: {index: 35, type: Single}
              - key: [448, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 3584, 128]
                speed: 2264.87
                value: {index: 36, type: Single}
              - key: [448, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 4288, 128]
                speed: 2467.98
                value: {index: 36, type: Single}
              - key: [448, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 5056, 128]
                speed: 2614.54
                value: {index: 36, type: Single}
              - key: [448, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 5888, 128]
                speed: 2668.64
                value: {index: 36, type: Single}
              - key: [448, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 6784, 128]
                speed: 2829.56
                value: {index: 37, type: Single}
              - key: [448, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [448, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 4, 128]
                speed: 17.255
                value: {index: 41, type: Single}
              - key: [704, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [704, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [704, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [704, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [704, 64, 128]
                speed: 188.967
                value: {index: 35, type: Single}
              - key: [704, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 128, 128]
                speed: 396.212
                value: {index: 35, type: Single}
              - key: [704, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 256, 128]
                speed: 761.418
                value: {index: 35, type: Single}
              - key: [704, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 448, 128]
                speed: 1123.67
                value: {index: 35, type: Single}
              - key: [704, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 704, 128]
                speed: 1618.9
                value: {index: 35, type: Single}
              - key: [704, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1024, 128]
                speed: 1818.51
                value: {index: 35, type: Single}
              - key: [704, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1408, 128]
                speed: 2051.26
                value: {index: 35, type: Single}
              - key: [704, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1856, 128]
                speed: 2315.68
                value: {index: 35, type: Single}
              - key: [704, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 2368, 128]
                speed: 2357.31
                value: {index: 35, type: Single}
              - key: [704, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 2944, 128]
                speed: 2556.27
                value: {index: 36, type: Single}
              - key: [704, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 3584, 128]
                speed: 2691.28
                value: {index: 37, type: Single}
              - key: [704, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 4288, 128]
                speed: 2804.45
                value: {index: 37, type: Single}
              - key: [704, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 5056, 128]
                speed: 2923.26
                value: {index: 37, type: Single}
              - key: [704, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 5888, 128]
                speed: 3058.34
                value: {index: 37, type: Single}
              - key: [704, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 6784, 128]
                speed: 3007.51
                value: {index: 36, type: Single}
              - key: [704, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [704, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 4, 128]
                speed: 24.3221
                value: {index: 41, type: Single}
              - key: [1024, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1024, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1024, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1024, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1024, 64, 128]
                speed: 267.712
                value: {index: 35, type: Single}
              - key: [1024, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 128, 128]
                speed: 563.4
                value: {index: 35, type: Single}
              - key: [1024, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 256, 128]
                speed: 1034.18
                value: {index: 35, type: Single}
              - key: [1024, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 448, 128]
                speed: 1433.46
                value: {index: 35, type: Single}
              - key: [1024, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 704, 128]
                speed: 1752.01
                value: {index: 35, type: Single}
              - key: [1024, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1024, 128]
                speed: 2038.13
                value: {index: 37, type: Single}
              - key: [1024, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1408, 128]
                speed: 2311.09
                value: {index: 37, type: Single}
              - key: [1024, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1856, 128]
                speed: 2364.33
                value: {index: 37, type: Single}
              - key: [1024, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 2368, 128]
                speed: 2599.26
                value: {index: 37, type: Single}
              - key: [1024, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 2944, 128]
                speed: 2784.18
                value: {index: 37, type: Single}
              - key: [1024, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 3584, 128]
                speed: 2934.58
                value: {index: 37, type: Single}
              - key: [1024, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 4288, 128]
                speed: 2960.32
                value: {index: 37, type: Single}
              - key: [1024, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 5056, 128]
                speed: 3070.08
                value: {index: 37, type: Single}
              - key: [1024, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 5888, 128]
                speed: 3174.41
                value: {index: 37, type: Single}
              - key: [1024, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 6784, 128]
                speed: 3173.93
                value: {index: 37, type: Single}
              - key: [1024, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1024, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 4, 128]
                speed: 33.5581
                value: {index: 41, type: Single}
              - key: [1408, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1408, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1408, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1408, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1408, 64, 128]
                speed: 372.514
                value: {index: 35, type: Single}
              - key: [1408, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 128, 128]
                speed: 696.686
                value: {index: 35, type: Single}
              - key: [1408, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 256, 128]
                speed: 1235.8
                value: {index: 35, type: Single}
              - key: [1408, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 448, 128]
                speed: 1692.49
                value: {index: 35, type: Single}
              - key: [1408, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 704, 128]
                speed: 1996.28
                value: {index: 35, type: Single}
              - key: [1408, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1024, 128]
                speed: 2298.31
                value: {index: 37, type: Single}
              - key: [1408, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1408, 128]
                speed: 2452.12
                value: {index: 37, type: Single}
              - key: [1408, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1856, 128]
                speed: 2575.92
                value: {index: 35, type: Single}
              - key: [1408, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 2368, 128]
                speed: 2777.84
                value: {index: 37, type: Single}
              - key: [1408, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 2944, 128]
                speed: 3064.89
                value: {index: 37, type: Single}
              - key: [1408, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 3584, 128]
                speed: 3046.73
                value: {index: 37, type: Single}
              - key: [1408, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 4288, 128]
                speed: 3171.95
                value: {index: 37, type: Single}
              - key: [1408, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 5056, 128]
                speed: 3272.43
                value: {index: 37, type: Single}
              - key: [1408, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 5888, 128]
                speed: 3369.07
                value: {index: 37, type: Single}
              - key: [1408, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 6784, 128]
                speed: 3356.08
                value: {index: 37, type: Single}
              - key: [1408, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1408, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 4, 128]
                speed: 44.3886
                value: {index: 41, type: Single}
              - key: [1856, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1856, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1856, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1856, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [1856, 64, 128]
                speed: 487.538
                value: {index: 35, type: Single}
              - key: [1856, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 128, 128]
                speed: 871.559
                value: {index: 35, type: Single}
              - key: [1856, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 256, 128]
                speed: 1534.61
                value: {index: 35, type: Single}
              - key: [1856, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 448, 128]
                speed: 1809.53
                value: {index: 38, type: Single}
              - key: [1856, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 704, 128]
                speed: 2322.82
                value: {index: 35, type: Single}
              - key: [1856, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1024, 128]
                speed: 2349.11
                value: {index: 37, type: Single}
              - key: [1856, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1408, 128]
                speed: 2736.71
                value: {index: 36, type: Single}
              - key: [1856, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1856, 128]
                speed: 2845.29
                value: {index: 37, type: Single}
              - key: [1856, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 2368, 128]
                speed: 3026.86
                value: {index: 36, type: Single}
              - key: [1856, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 2944, 128]
                speed: 3122.25
                value: {index: 37, type: Single}
              - key: [1856, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 3584, 128]
                speed: 3246.95
                value: {index: 37, type: Single}
              - key: [1856, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 4288, 128]
                speed: 3261.86
                value: {index: 37, type: Single}
              - key: [1856, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 5056, 128]
                speed: 3316.63
                value: {index: 37, type: Single}
              - key: [1856, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 5888, 128]
                speed: 3450.9
                value: {index: 37, type: Single}
              - key: [1856, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 6784, 128]
                speed: 3442.0
                value: {index: 37, type: Single}
              - key: [1856, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [1856, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 4, 128]
                speed: 56.4387
                value: {index: 41, type: Single}
              - key: [2368, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [2368, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [2368, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [2368, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [2368, 64, 128]
                speed: 571.785
                value: {index: 35, type: Single}
              - key: [2368, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 128, 128]
                speed: 1088.88
                value: {index: 35, type: Single}
              - key: [2368, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 256, 128]
                speed: 1647.01
                value: {index: 35, type: Single}
              - key: [2368, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 448, 128]
                speed: 1999.05
                value: {index: 35, type: Single}
              - key: [2368, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 704, 128]
                speed: 2353.45
                value: {index: 35, type: Single}
              - key: [2368, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1024, 128]
                speed: 2615.49
                value: {index: 37, type: Single}
              - key: [2368, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1408, 128]
                speed: 2852.1
                value: {index: 36, type: Single}
              - key: [2368, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1856, 128]
                speed: 2978.18
                value: {index: 36, type: Single}
              - key: [2368, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 2368, 128]
                speed: 3133.7
                value: {index: 37, type: Single}
              - key: [2368, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 2944, 128]
                speed: 3238.24
                value: {index: 37, type: Single}
              - key: [2368, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 3584, 128]
                speed: 3305.16
                value: {index: 37, type: Single}
              - key: [2368, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 4288, 128]
                speed: 3375.46
                value: {index: 37, type: Single}
              - key: [2368, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 5056, 128]
                speed: 3403.22
                value: {index: 37, type: Single}
              - key: [2368, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 5888, 128]
                speed: 3506.41
                value: {index: 37, type: Single}
              - key: [2368, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 6784, 128]
                speed: 3543.82
                value: {index: 37, type: Single}
              - key: [2368, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2368, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 4, 128]
                speed: 70.167
                value: {index: 41, type: Single}
              - key: [2944, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [2944, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [2944, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [2944, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [2944, 64, 128]
                speed: 710.857
                value: {index: 35, type: Single}
              - key: [2944, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 128, 128]
                speed: 1269.3
                value: {index: 35, type: Single}
              - key: [2944, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 256, 128]
                speed: 1887.4
                value: {index: 35, type: Single}
              - key: [2944, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 448, 128]
                speed: 2123.99
                value: {index: 35, type: Single}
              - key: [2944, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 704, 128]
                speed: 2464.77
                value: {index: 36, type: Single}
              - key: [2944, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1024, 128]
                speed: 2802.15
                value: {index: 37, type: Single}
              - key: [2944, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1408, 128]
                speed: 3036.31
                value: {index: 37, type: Single}
              - key: [2944, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1856, 128]
                speed: 3072.46
                value: {index: 37, type: Single}
              - key: [2944, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 2368, 128]
                speed: 3209.77
                value: {index: 37, type: Single}
              - key: [2944, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 2944, 128]
                speed: 3350.43
                value: {index: 37, type: Single}
              - key: [2944, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 3584, 128]
                speed: 3377.58
                value: {index: 37, type: Single}
              - key: [2944, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 4288, 128]
                speed: 3426.03
                value: {index: 37, type: Single}
              - key: [2944, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 5056, 128]
                speed: 3498.42
                value: {index: 37, type: Single}
              - key: [2944, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 5888, 128]
                speed: 3518.9
                value: {index: 37, type: Single}
              - key: [2944, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 6784, 128]
                speed: 3570.34
                value: {index: 37, type: Single}
              - key: [2944, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [2944, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 4, 128]
                speed: 84.8362
                value: {index: 41, type: Single}
              - key: [3584, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [3584, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [3584, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [3584, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [3584, 64, 128]
                speed: 825.732
                value: {index: 35, type: Single}
              - key: [3584, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 128, 128]
                speed: 1140.58
                value: {index: 37, type: Single}
              - key: [3584, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 256, 128]
                speed: 1761.57
                value: {index: 37, type: Single}
              - key: [3584, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 448, 128]
                speed: 2144.09
                value: {index: 36, type: Single}
              - key: [3584, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 704, 128]
                speed: 2411.44
                value: {index: 37, type: Single}
              - key: [3584, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1024, 128]
                speed: 2974.5
                value: {index: 37, type: Single}
              - key: [3584, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1408, 128]
                speed: 3094.3
                value: {index: 37, type: Single}
              - key: [3584, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1856, 128]
                speed: 3084.04
                value: {index: 37, type: Single}
              - key: [3584, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 2368, 128]
                speed: 3276.37
                value: {index: 37, type: Single}
              - key: [3584, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 2944, 128]
                speed: 3376.96
                value: {index: 37, type: Single}
              - key: [3584, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 3584, 128]
                speed: 3464.83
                value: {index: 37, type: Single}
              - key: [3584, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 4288, 128]
                speed: 3500.6
                value: {index: 37, type: Single}
              - key: [3584, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 5056, 128]
                speed: 3544.06
                value: {index: 37, type: Single}
              - key: [3584, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 5888, 128]
                speed: 3564.46
                value: {index: 37, type: Single}
              - key: [3584, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 6784, 128]
                speed: 3597.34
                value: {index: 37, type: Single}
              - key: [3584, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [3584, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 4, 128]
                speed: 95.9154
                value: {index: 41, type: Single}
              - key: [4288, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4288, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4288, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4288, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [4288, 64, 128]
                speed: 998.332
                value: {index: 35, type: Single}
              - key: [4288, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 128, 128]
                speed: 1515.04
                value: {index: 35, type: Single}
              - key: [4288, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 256, 128]
                speed: 2002.98
                value: {index: 35, type: Single}
              - key: [4288, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 448, 128]
                speed: 2438.97
                value: {index: 35, type: Single}
              - key: [4288, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 704, 128]
                speed: 2762.86
                value: {index: 36, type: Single}
              - key: [4288, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1024, 128]
                speed: 2837.44
                value: {index: 36, type: Single}
              - key: [4288, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1408, 128]
                speed: 3188.43
                value: {index: 37, type: Single}
              - key: [4288, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1856, 128]
                speed: 3226.65
                value: {index: 37, type: Single}
              - key: [4288, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 2368, 128]
                speed: 3371.57
                value: {index: 37, type: Single}
              - key: [4288, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 2944, 128]
                speed: 3444.42
                value: {index: 37, type: Single}
              - key: [4288, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 3584, 128]
                speed: 3496.92
                value: {index: 37, type: Single}
              - key: [4288, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 4288, 128]
                speed: 3527.07
                value: {index: 37, type: Single}
              - key: [4288, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 5056, 128]
                speed: 3580.11
                value: {index: 37, type: Single}
              - key: [4288, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 5888, 128]
                speed: 3607.92
                value: {index: 37, type: Single}
              - key: [4288, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 6784, 128]
                speed: 3649.86
                value: {index: 37, type: Single}
              - key: [4288, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [4288, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 4, 128]
                speed: 105.898
                value: {index: 41, type: Single}
              - key: [5056, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [5056, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [5056, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [5056, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [5056, 64, 128]
                speed: 1189.66
                value: {index: 35, type: Single}
              - key: [5056, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 128, 128]
                speed: 1792.11
                value: {index: 35, type: Single}
              - key: [5056, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 256, 128]
                speed: 2238.79
                value: {index: 35, type: Single}
              - key: [5056, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 448, 128]
                speed: 2590.33
                value: {index: 35, type: Single}
              - key: [5056, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 704, 128]
                speed: 2855.4
                value: {index: 36, type: Single}
              - key: [5056, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1024, 128]
                speed: 3158.98
                value: {index: 37, type: Single}
              - key: [5056, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1408, 128]
                speed: 3264.61
                value: {index: 37, type: Single}
              - key: [5056, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1856, 128]
                speed: 3280.4
                value: {index: 37, type: Single}
              - key: [5056, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 2368, 128]
                speed: 3379.31
                value: {index: 37, type: Single}
              - key: [5056, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 2944, 128]
                speed: 3511.32
                value: {index: 37, type: Single}
              - key: [5056, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 3584, 128]
                speed: 3546.87
                value: {index: 37, type: Single}
              - key: [5056, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 4288, 128]
                speed: 3571.24
                value: {index: 37, type: Single}
              - key: [5056, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 5056, 128]
                speed: 3582.77
                value: {index: 37, type: Single}
              - key: [5056, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 5888, 128]
                speed: 3663.87
                value: {index: 37, type: Single}
              - key: [5056, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 6784, 128]
                speed: 3668.3
                value: {index: 37, type: Single}
              - key: [5056, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5056, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 4, 128]
                speed: 121.122
                value: {index: 41, type: Single}
              - key: [5888, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [5888, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [5888, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [5888, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [5888, 64, 128]
                speed: 1214.82
                value: {index: 35, type: Single}
              - key: [5888, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 128, 128]
                speed: 1678.22
                value: {index: 35, type: Single}
              - key: [5888, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 256, 128]
                speed: 2407.21
                value: {index: 37, type: Single}
              - key: [5888, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 448, 128]
                speed: 2498.93
                value: {index: 37, type: Single}
              - key: [5888, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 704, 128]
                speed: 2808.88
                value: {index: 37, type: Single}
              - key: [5888, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1024, 128]
                speed: 3183.13
                value: {index: 37, type: Single}
              - key: [5888, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1408, 128]
                speed: 3376.21
                value: {index: 37, type: Single}
              - key: [5888, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1856, 128]
                speed: 3343.36
                value: {index: 37, type: Single}
              - key: [5888, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 2368, 128]
                speed: 3414.47
                value: {index: 37, type: Single}
              - key: [5888, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 2944, 128]
                speed: 3542.2
                value: {index: 37, type: Single}
              - key: [5888, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 3584, 128]
                speed: 3581.26
                value: {index: 37, type: Single}
              - key: [5888, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 4288, 128]
                speed: 3590.11
                value: {index: 37, type: Single}
              - key: [5888, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 5056, 128]
                speed: 3637.7
                value: {index: 37, type: Single}
              - key: [5888, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 5888, 128]
                speed: 3657.25
                value: {index: 37, type: Single}
              - key: [5888, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 6784, 128]
                speed: 3674.5
                value: {index: 37, type: Single}
              - key: [5888, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [5888, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 4, 128]
                speed: 137.91
                value: {index: 41, type: Single}
              - key: [6784, 4, 256]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [6784, 4, 768]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [6784, 4, 1792]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [6784, 4, 3328]
                speed: 0.0
                value: {index: 42, type: Single}
              - key: [6784, 64, 128]
                speed: 1351.77
                value: {index: 35, type: Single}
              - key: [6784, 64, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 64, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 64, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 64, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 128, 128]
                speed: 1784.17
                value: {index: 35, type: Single}
              - key: [6784, 128, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 128, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 128, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 128, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 256, 128]
                speed: 2348.16
                value: {index: 36, type: Single}
              - key: [6784, 256, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 256, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 256, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 256, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 448, 128]
                speed: 2659.07
                value: {index: 36, type: Single}
              - key: [6784, 448, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 448, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 448, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 448, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 704, 128]
                speed: 2924.39
                value: {index: 37, type: Single}
              - key: [6784, 704, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 704, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 704, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 704, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1024, 128]
                speed: 3208.71
                value: {index: 37, type: Single}
              - key: [6784, 1024, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1024, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1024, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1024, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1408, 128]
                speed: 3360.18
                value: {index: 37, type: Single}
              - key: [6784, 1408, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1408, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1408, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1408, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1856, 128]
                speed: 3389.98
                value: {index: 37, type: Single}
              - key: [6784, 1856, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1856, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1856, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 1856, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 2368, 128]
                speed: 3464.22
                value: {index: 37, type: Single}
              - key: [6784, 2368, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 2368, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 2368, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 2368, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 2944, 128]
                speed: 3578.11
                value: {index: 37, type: Single}
              - key: [6784, 2944, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 2944, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 2944, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 2944, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 3584, 128]
                speed: 3613.42
                value: {index: 37, type: Single}
              - key: [6784, 3584, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 3584, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 3584, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 3584, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 4288, 128]
                speed: 3596.07
                value: {index: 37, type: Single}
              - key: [6784, 4288, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 4288, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 4288, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 4288, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 5056, 128]
                speed: 3624.56
                value: {index: 37, type: Single}
              - key: [6784, 5056, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 5056, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 5056, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 5056, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 5888, 128]
                speed: 3676.85
                value: {index: 37, type: Single}
              - key: [6784, 5888, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 5888, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 5888, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 5888, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 6784, 128]
                speed: 3708.33
                value: {index: 37, type: Single}
              - key: [6784, 6784, 256]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 6784, 768]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 6784, 1792]
                speed: 0.0
                value: {index: 39, type: Single}
              - key: [6784, 6784, 3328]
                speed: 0.0
                value: {index: 39, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
        Contraction_l_Alik_Bljk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.0921588
                value: {index: 106, type: Single}
              - key: [4, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 64, 128]
                speed: 1.5576
                value: {index: 105, type: Single}
              - key: [4, 64, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 64, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 64, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 64, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 128, 128]
                speed: 3.10428
                value: {index: 105, type: Single}
              - key: [4, 128, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 128, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 128, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 128, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 256, 128]
                speed: 6.16534
                value: {index: 105, type: Single}
              - key: [4, 256, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 256, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 256, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 256, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 448, 128]
                speed: 10.391
                value: {index: 105, type: Single}
              - key: [4, 448, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 448, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 448, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 448, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 704, 128]
                speed: 15.954
                value: {index: 105, type: Single}
              - key: [4, 704, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 704, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 704, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 704, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1024, 128]
                speed: 24.1563
                value: {index: 105, type: Single}
              - key: [4, 1024, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1024, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1024, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1024, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1408, 128]
                speed: 32.8778
                value: {index: 105, type: Single}
              - key: [4, 1408, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1408, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1408, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1408, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1856, 128]
                speed: 43.1932
                value: {index: 105, type: Single}
              - key: [4, 1856, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1856, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1856, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 1856, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 2368, 128]
                speed: 54.558
                value: {index: 105, type: Single}
              - key: [4, 2368, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 2368, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 2368, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 2368, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 2944, 128]
                speed: 67.8289
                value: {index: 105, type: Single}
              - key: [4, 2944, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 2944, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 2944, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 2944, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 3584, 128]
                speed: 81.4871
                value: {index: 105, type: Single}
              - key: [4, 3584, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 3584, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 3584, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 3584, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 4288, 128]
                speed: 91.7603
                value: {index: 106, type: Single}
              - key: [4, 4288, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 4288, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 4288, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 4288, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 5056, 128]
                speed: 100.709
                value: {index: 105, type: Single}
              - key: [4, 5056, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 5056, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 5056, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 5056, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 5888, 128]
                speed: 111.805
                value: {index: 106, type: Single}
              - key: [4, 5888, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 5888, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 5888, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 5888, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 6784, 128]
                speed: 121.793
                value: {index: 106, type: Single}
              - key: [4, 6784, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 6784, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 6784, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4, 6784, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [64, 4, 128]
                speed: 1.64444
                value: {index: 105, type: Single}
              - key: [64, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [64, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [64, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [64, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [64, 64, 128]
                speed: 14.7762
                value: {index: 101, type: Single}
              - key: [64, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 128, 128]
                speed: 34.5256
                value: {index: 99, type: Single}
              - key: [64, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 256, 128]
                speed: 59.8545
                value: {index: 101, type: Single}
              - key: [64, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 448, 128]
                speed: 122.94
                value: {index: 99, type: Single}
              - key: [64, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 704, 128]
                speed: 196.109
                value: {index: 99, type: Single}
              - key: [64, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1024, 128]
                speed: 281.7
                value: {index: 99, type: Single}
              - key: [64, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1408, 128]
                speed: 401.313
                value: {index: 99, type: Single}
              - key: [64, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1856, 128]
                speed: 510.582
                value: {index: 99, type: Single}
              - key: [64, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 2368, 128]
                speed: 634.088
                value: {index: 99, type: Single}
              - key: [64, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 2944, 128]
                speed: 710.868
                value: {index: 99, type: Single}
              - key: [64, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 3584, 128]
                speed: 859.778
                value: {index: 99, type: Single}
              - key: [64, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 4288, 128]
                speed: 820.434
                value: {index: 99, type: Single}
              - key: [64, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 5056, 128]
                speed: 964.034
                value: {index: 99, type: Single}
              - key: [64, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 5888, 128]
                speed: 1164.86
                value: {index: 99, type: Single}
              - key: [64, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 6784, 128]
                speed: 1311.6
                value: {index: 99, type: Single}
              - key: [64, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [64, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 4, 128]
                speed: 3.26472
                value: {index: 105, type: Single}
              - key: [128, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [128, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [128, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [128, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [128, 64, 128]
                speed: 34.7798
                value: {index: 99, type: Single}
              - key: [128, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 128, 128]
                speed: 68.8833
                value: {index: 99, type: Single}
              - key: [128, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 256, 128]
                speed: 135.137
                value: {index: 99, type: Single}
              - key: [128, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 448, 128]
                speed: 236.485
                value: {index: 99, type: Single}
              - key: [128, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 704, 128]
                speed: 398.237
                value: {index: 99, type: Single}
              - key: [128, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1024, 128]
                speed: 556.477
                value: {index: 99, type: Single}
              - key: [128, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1408, 128]
                speed: 743.252
                value: {index: 99, type: Single}
              - key: [128, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1856, 128]
                speed: 867.89
                value: {index: 99, type: Single}
              - key: [128, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 2368, 128]
                speed: 928.643
                value: {index: 101, type: Single}
              - key: [128, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 2944, 128]
                speed: 1107.4
                value: {index: 99, type: Single}
              - key: [128, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 3584, 128]
                speed: 1295.28
                value: {index: 99, type: Single}
              - key: [128, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 4288, 128]
                speed: 1368.56
                value: {index: 99, type: Single}
              - key: [128, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 5056, 128]
                speed: 1553.18
                value: {index: 99, type: Single}
              - key: [128, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 5888, 128]
                speed: 1669.62
                value: {index: 99, type: Single}
              - key: [128, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 6784, 128]
                speed: 1669.06
                value: {index: 99, type: Single}
              - key: [128, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [128, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 4, 128]
                speed: 6.41111
                value: {index: 105, type: Single}
              - key: [256, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [256, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [256, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [256, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [256, 64, 128]
                speed: 68.3835
                value: {index: 99, type: Single}
              - key: [256, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 128, 128]
                speed: 135.784
                value: {index: 99, type: Single}
              - key: [256, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 256, 128]
                speed: 283.107
                value: {index: 99, type: Single}
              - key: [256, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 448, 128]
                speed: 470.726
                value: {index: 99, type: Single}
              - key: [256, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 704, 128]
                speed: 654.245
                value: {index: 99, type: Single}
              - key: [256, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1024, 128]
                speed: 840.405
                value: {index: 101, type: Single}
              - key: [256, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1408, 128]
                speed: 987.075
                value: {index: 101, type: Single}
              - key: [256, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1856, 128]
                speed: 1212.72
                value: {index: 99, type: Single}
              - key: [256, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 2368, 128]
                speed: 1315.95
                value: {index: 101, type: Single}
              - key: [256, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 2944, 128]
                speed: 1611.77
                value: {index: 101, type: Single}
              - key: [256, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 3584, 128]
                speed: 1642.93
                value: {index: 99, type: Single}
              - key: [256, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 4288, 128]
                speed: 1732.28
                value: {index: 101, type: Single}
              - key: [256, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 5056, 128]
                speed: 1870.04
                value: {index: 100, type: Single}
              - key: [256, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 5888, 128]
                speed: 2015.95
                value: {index: 100, type: Single}
              - key: [256, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 6784, 128]
                speed: 2038.7
                value: {index: 101, type: Single}
              - key: [256, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [256, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 4, 128]
                speed: 11.0195
                value: {index: 105, type: Single}
              - key: [448, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [448, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [448, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [448, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [448, 64, 128]
                speed: 119.673
                value: {index: 99, type: Single}
              - key: [448, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 128, 128]
                speed: 254.725
                value: {index: 99, type: Single}
              - key: [448, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 256, 128]
                speed: 510.762
                value: {index: 99, type: Single}
              - key: [448, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 448, 128]
                speed: 862.707
                value: {index: 99, type: Single}
              - key: [448, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 704, 128]
                speed: 1103.21
                value: {index: 99, type: Single}
              - key: [448, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1024, 128]
                speed: 1462.56
                value: {index: 99, type: Single}
              - key: [448, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1408, 128]
                speed: 1600.56
                value: {index: 99, type: Single}
              - key: [448, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1856, 128]
                speed: 1653.37
                value: {index: 103, type: Single}
              - key: [448, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 2368, 128]
                speed: 1791.92
                value: {index: 99, type: Single}
              - key: [448, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 2944, 128]
                speed: 2083.22
                value: {index: 100, type: Single}
              - key: [448, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 3584, 128]
                speed: 2119.54
                value: {index: 100, type: Single}
              - key: [448, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 4288, 128]
                speed: 2484.63
                value: {index: 100, type: Single}
              - key: [448, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 5056, 128]
                speed: 2571.62
                value: {index: 100, type: Single}
              - key: [448, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 5888, 128]
                speed: 2659.32
                value: {index: 100, type: Single}
              - key: [448, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 6784, 128]
                speed: 2872.92
                value: {index: 100, type: Single}
              - key: [448, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [448, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 4, 128]
                speed: 16.551
                value: {index: 105, type: Single}
              - key: [704, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [704, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [704, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [704, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [704, 64, 128]
                speed: 186.703
                value: {index: 99, type: Single}
              - key: [704, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 128, 128]
                speed: 399.257
                value: {index: 99, type: Single}
              - key: [704, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 256, 128]
                speed: 784.435
                value: {index: 99, type: Single}
              - key: [704, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 448, 128]
                speed: 1092.15
                value: {index: 99, type: Single}
              - key: [704, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 704, 128]
                speed: 1499.84
                value: {index: 99, type: Single}
              - key: [704, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1024, 128]
                speed: 1754.49
                value: {index: 99, type: Single}
              - key: [704, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1408, 128]
                speed: 2003.3
                value: {index: 100, type: Single}
              - key: [704, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1856, 128]
                speed: 2142.13
                value: {index: 100, type: Single}
              - key: [704, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 2368, 128]
                speed: 2202.33
                value: {index: 100, type: Single}
              - key: [704, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 2944, 128]
                speed: 2569.12
                value: {index: 100, type: Single}
              - key: [704, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 3584, 128]
                speed: 2773.47
                value: {index: 100, type: Single}
              - key: [704, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 4288, 128]
                speed: 2891.51
                value: {index: 100, type: Single}
              - key: [704, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 5056, 128]
                speed: 2985.71
                value: {index: 100, type: Single}
              - key: [704, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 5888, 128]
                speed: 2780.55
                value: {index: 100, type: Single}
              - key: [704, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 6784, 128]
                speed: 2940.03
                value: {index: 100, type: Single}
              - key: [704, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [704, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 4, 128]
                speed: 24.2389
                value: {index: 105, type: Single}
              - key: [1024, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1024, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1024, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1024, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1024, 64, 128]
                speed: 273.539
                value: {index: 99, type: Single}
              - key: [1024, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 128, 128]
                speed: 537.973
                value: {index: 99, type: Single}
              - key: [1024, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 256, 128]
                speed: 911.421
                value: {index: 99, type: Single}
              - key: [1024, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 448, 128]
                speed: 1174.38
                value: {index: 99, type: Single}
              - key: [1024, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 704, 128]
                speed: 1382.56
                value: {index: 101, type: Single}
              - key: [1024, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1024, 128]
                speed: 1845.12
                value: {index: 103, type: Single}
              - key: [1024, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1408, 128]
                speed: 1838.64
                value: {index: 100, type: Single}
              - key: [1024, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1856, 128]
                speed: 2066.77
                value: {index: 103, type: Single}
              - key: [1024, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 2368, 128]
                speed: 2117.25
                value: {index: 103, type: Single}
              - key: [1024, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 2944, 128]
                speed: 2237.64
                value: {index: 103, type: Single}
              - key: [1024, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 3584, 128]
                speed: 2396.7
                value: {index: 102, type: Single}
              - key: [1024, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 4288, 128]
                speed: 2375.5
                value: {index: 102, type: Single}
              - key: [1024, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 5056, 128]
                speed: 2428.42
                value: {index: 101, type: Single}
              - key: [1024, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 5888, 128]
                speed: 2502.03
                value: {index: 102, type: Single}
              - key: [1024, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 6784, 128]
                speed: 2503.41
                value: {index: 103, type: Single}
              - key: [1024, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1024, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 4, 128]
                speed: 32.9899
                value: {index: 105, type: Single}
              - key: [1408, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1408, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1408, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1408, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1408, 64, 128]
                speed: 372.514
                value: {index: 99, type: Single}
              - key: [1408, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 128, 128]
                speed: 790.402
                value: {index: 99, type: Single}
              - key: [1408, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 256, 128]
                speed: 1221.26
                value: {index: 99, type: Single}
              - key: [1408, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 448, 128]
                speed: 1607.62
                value: {index: 99, type: Single}
              - key: [1408, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 704, 128]
                speed: 1882.22
                value: {index: 101, type: Single}
              - key: [1408, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1024, 128]
                speed: 2091.83
                value: {index: 101, type: Single}
              - key: [1408, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1408, 128]
                speed: 2306.81
                value: {index: 100, type: Single}
              - key: [1408, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1856, 128]
                speed: 2466.2
                value: {index: 101, type: Single}
              - key: [1408, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 2368, 128]
                speed: 2675.94
                value: {index: 100, type: Single}
              - key: [1408, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 2944, 128]
                speed: 2891.68
                value: {index: 100, type: Single}
              - key: [1408, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 3584, 128]
                speed: 2882.58
                value: {index: 100, type: Single}
              - key: [1408, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 4288, 128]
                speed: 3021.32
                value: {index: 100, type: Single}
              - key: [1408, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 5056, 128]
                speed: 3053.15
                value: {index: 100, type: Single}
              - key: [1408, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 5888, 128]
                speed: 3191.22
                value: {index: 100, type: Single}
              - key: [1408, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 6784, 128]
                speed: 3199.95
                value: {index: 100, type: Single}
              - key: [1408, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1408, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 4, 128]
                speed: 43.4857
                value: {index: 105, type: Single}
              - key: [1856, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1856, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1856, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1856, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [1856, 64, 128]
                speed: 492.217
                value: {index: 99, type: Single}
              - key: [1856, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 128, 128]
                speed: 961.388
                value: {index: 99, type: Single}
              - key: [1856, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 256, 128]
                speed: 1484.66
                value: {index: 99, type: Single}
              - key: [1856, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 448, 128]
                speed: 1692.31
                value: {index: 101, type: Single}
              - key: [1856, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 704, 128]
                speed: 2094.45
                value: {index: 100, type: Single}
              - key: [1856, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1024, 128]
                speed: 2454.47
                value: {index: 100, type: Single}
              - key: [1856, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1408, 128]
                speed: 2756.77
                value: {index: 100, type: Single}
              - key: [1856, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1856, 128]
                speed: 2876.94
                value: {index: 100, type: Single}
              - key: [1856, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 2368, 128]
                speed: 3005.32
                value: {index: 100, type: Single}
              - key: [1856, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 2944, 128]
                speed: 3120.2
                value: {index: 100, type: Single}
              - key: [1856, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 3584, 128]
                speed: 3146.53
                value: {index: 100, type: Single}
              - key: [1856, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 4288, 128]
                speed: 3192.21
                value: {index: 100, type: Single}
              - key: [1856, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 5056, 128]
                speed: 3194.47
                value: {index: 100, type: Single}
              - key: [1856, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 5888, 128]
                speed: 3363.04
                value: {index: 100, type: Single}
              - key: [1856, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 6784, 128]
                speed: 3345.17
                value: {index: 100, type: Single}
              - key: [1856, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [1856, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 4, 128]
                speed: 54.377
                value: {index: 105, type: Single}
              - key: [2368, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [2368, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [2368, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [2368, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [2368, 64, 128]
                speed: 561.97
                value: {index: 99, type: Single}
              - key: [2368, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 128, 128]
                speed: 1062.37
                value: {index: 99, type: Single}
              - key: [2368, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 256, 128]
                speed: 1606.61
                value: {index: 99, type: Single}
              - key: [2368, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 448, 128]
                speed: 1798.96
                value: {index: 99, type: Single}
              - key: [2368, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 704, 128]
                speed: 2252.27
                value: {index: 100, type: Single}
              - key: [2368, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1024, 128]
                speed: 2638.57
                value: {index: 100, type: Single}
              - key: [2368, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1408, 128]
                speed: 2734.36
                value: {index: 100, type: Single}
              - key: [2368, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1856, 128]
                speed: 3014.86
                value: {index: 100, type: Single}
              - key: [2368, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 2368, 128]
                speed: 3182.09
                value: {index: 100, type: Single}
              - key: [2368, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 2944, 128]
                speed: 3130.54
                value: {index: 100, type: Single}
              - key: [2368, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 3584, 128]
                speed: 3228.78
                value: {index: 100, type: Single}
              - key: [2368, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 4288, 128]
                speed: 3285.72
                value: {index: 100, type: Single}
              - key: [2368, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 5056, 128]
                speed: 3336.28
                value: {index: 100, type: Single}
              - key: [2368, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 5888, 128]
                speed: 3395.25
                value: {index: 100, type: Single}
              - key: [2368, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 6784, 128]
                speed: 3384.0
                value: {index: 100, type: Single}
              - key: [2368, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2368, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 4, 128]
                speed: 68.0555
                value: {index: 105, type: Single}
              - key: [2944, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [2944, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [2944, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [2944, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [2944, 64, 128]
                speed: 683.983
                value: {index: 99, type: Single}
              - key: [2944, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 128, 128]
                speed: 1249.81
                value: {index: 99, type: Single}
              - key: [2944, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 256, 128]
                speed: 1745.73
                value: {index: 99, type: Single}
              - key: [2944, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 448, 128]
                speed: 2033.04
                value: {index: 100, type: Single}
              - key: [2944, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 704, 128]
                speed: 2318.01
                value: {index: 101, type: Single}
              - key: [2944, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1024, 128]
                speed: 2590.36
                value: {index: 100, type: Single}
              - key: [2944, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1408, 128]
                speed: 2914.03
                value: {index: 100, type: Single}
              - key: [2944, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1856, 128]
                speed: 2905.14
                value: {index: 100, type: Single}
              - key: [2944, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 2368, 128]
                speed: 2992.88
                value: {index: 100, type: Single}
              - key: [2944, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 2944, 128]
                speed: 3151.63
                value: {index: 100, type: Single}
              - key: [2944, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 3584, 128]
                speed: 3168.63
                value: {index: 100, type: Single}
              - key: [2944, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 4288, 128]
                speed: 3317.66
                value: {index: 100, type: Single}
              - key: [2944, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 5056, 128]
                speed: 3313.65
                value: {index: 100, type: Single}
              - key: [2944, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 5888, 128]
                speed: 3314.49
                value: {index: 100, type: Single}
              - key: [2944, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 6784, 128]
                speed: 3402.46
                value: {index: 100, type: Single}
              - key: [2944, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [2944, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 4, 128]
                speed: 82.8502
                value: {index: 105, type: Single}
              - key: [3584, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [3584, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [3584, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [3584, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [3584, 64, 128]
                speed: 808.886
                value: {index: 99, type: Single}
              - key: [3584, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 128, 128]
                speed: 1246.4
                value: {index: 101, type: Single}
              - key: [3584, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 256, 128]
                speed: 1708.42
                value: {index: 103, type: Single}
              - key: [3584, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 448, 128]
                speed: 1945.63
                value: {index: 101, type: Single}
              - key: [3584, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 704, 128]
                speed: 2330.25
                value: {index: 100, type: Single}
              - key: [3584, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1024, 128]
                speed: 2693.99
                value: {index: 100, type: Single}
              - key: [3584, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1408, 128]
                speed: 2729.2
                value: {index: 100, type: Single}
              - key: [3584, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1856, 128]
                speed: 2788.51
                value: {index: 100, type: Single}
              - key: [3584, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 2368, 128]
                speed: 2949.54
                value: {index: 100, type: Single}
              - key: [3584, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 2944, 128]
                speed: 3030.13
                value: {index: 100, type: Single}
              - key: [3584, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 3584, 128]
                speed: 3048.88
                value: {index: 100, type: Single}
              - key: [3584, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 4288, 128]
                speed: 3052.03
                value: {index: 100, type: Single}
              - key: [3584, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 5056, 128]
                speed: 3117.48
                value: {index: 100, type: Single}
              - key: [3584, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 5888, 128]
                speed: 3115.83
                value: {index: 100, type: Single}
              - key: [3584, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 6784, 128]
                speed: 3176.59
                value: {index: 100, type: Single}
              - key: [3584, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [3584, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 4, 128]
                speed: 93.2016
                value: {index: 106, type: Single}
              - key: [4288, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4288, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4288, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4288, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [4288, 64, 128]
                speed: 937.165
                value: {index: 99, type: Single}
              - key: [4288, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 128, 128]
                speed: 1470.41
                value: {index: 99, type: Single}
              - key: [4288, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 256, 128]
                speed: 1850.57
                value: {index: 99, type: Single}
              - key: [4288, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 448, 128]
                speed: 2297.21
                value: {index: 102, type: Single}
              - key: [4288, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 704, 128]
                speed: 2646.52
                value: {index: 102, type: Single}
              - key: [4288, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1024, 128]
                speed: 2968.45
                value: {index: 100, type: Single}
              - key: [4288, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1408, 128]
                speed: 3133.86
                value: {index: 100, type: Single}
              - key: [4288, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1856, 128]
                speed: 3198.16
                value: {index: 100, type: Single}
              - key: [4288, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 2368, 128]
                speed: 3289.42
                value: {index: 100, type: Single}
              - key: [4288, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 2944, 128]
                speed: 3384.58
                value: {index: 100, type: Single}
              - key: [4288, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 3584, 128]
                speed: 3370.87
                value: {index: 100, type: Single}
              - key: [4288, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 4288, 128]
                speed: 3411.58
                value: {index: 100, type: Single}
              - key: [4288, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 5056, 128]
                speed: 3423.43
                value: {index: 100, type: Single}
              - key: [4288, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 5888, 128]
                speed: 3481.27
                value: {index: 100, type: Single}
              - key: [4288, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 6784, 128]
                speed: 3468.07
                value: {index: 100, type: Single}
              - key: [4288, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [4288, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 4, 128]
                speed: 104.945
                value: {index: 106, type: Single}
              - key: [5056, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [5056, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [5056, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [5056, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [5056, 64, 128]
                speed: 1118.29
                value: {index: 99, type: Single}
              - key: [5056, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 128, 128]
                speed: 1681.64
                value: {index: 99, type: Single}
              - key: [5056, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 256, 128]
                speed: 2092.21
                value: {index: 99, type: Single}
              - key: [5056, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 448, 128]
                speed: 2432.57
                value: {index: 100, type: Single}
              - key: [5056, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 704, 128]
                speed: 2775.53
                value: {index: 100, type: Single}
              - key: [5056, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1024, 128]
                speed: 3173.56
                value: {index: 100, type: Single}
              - key: [5056, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1408, 128]
                speed: 3192.61
                value: {index: 100, type: Single}
              - key: [5056, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1856, 128]
                speed: 3252.13
                value: {index: 100, type: Single}
              - key: [5056, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 2368, 128]
                speed: 3217.96
                value: {index: 100, type: Single}
              - key: [5056, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 2944, 128]
                speed: 3338.16
                value: {index: 100, type: Single}
              - key: [5056, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 3584, 128]
                speed: 3375.96
                value: {index: 100, type: Single}
              - key: [5056, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 4288, 128]
                speed: 3410.96
                value: {index: 100, type: Single}
              - key: [5056, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 5056, 128]
                speed: 3462.05
                value: {index: 100, type: Single}
              - key: [5056, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 5888, 128]
                speed: 3497.49
                value: {index: 100, type: Single}
              - key: [5056, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 6784, 128]
                speed: 3455.32
                value: {index: 100, type: Single}
              - key: [5056, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5056, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 4, 128]
                speed: 121.485
                value: {index: 106, type: Single}
              - key: [5888, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [5888, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [5888, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [5888, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [5888, 64, 128]
                speed: 1177.5
                value: {index: 99, type: Single}
              - key: [5888, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 128, 128]
                speed: 1686.93
                value: {index: 101, type: Single}
              - key: [5888, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 256, 128]
                speed: 2039.64
                value: {index: 101, type: Single}
              - key: [5888, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 448, 128]
                speed: 2221.29
                value: {index: 102, type: Single}
              - key: [5888, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 704, 128]
                speed: 2574.65
                value: {index: 100, type: Single}
              - key: [5888, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1024, 128]
                speed: 2784.19
                value: {index: 100, type: Single}
              - key: [5888, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1408, 128]
                speed: 2921.16
                value: {index: 100, type: Single}
              - key: [5888, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1856, 128]
                speed: 2990.25
                value: {index: 100, type: Single}
              - key: [5888, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 2368, 128]
                speed: 3087.62
                value: {index: 100, type: Single}
              - key: [5888, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 2944, 128]
                speed: 3162.28
                value: {index: 100, type: Single}
              - key: [5888, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 3584, 128]
                speed: 3211.89
                value: {index: 100, type: Single}
              - key: [5888, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 4288, 128]
                speed: 3150.67
                value: {index: 100, type: Single}
              - key: [5888, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 5056, 128]
                speed: 3205.65
                value: {index: 100, type: Single}
              - key: [5888, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 5888, 128]
                speed: 3225.44
                value: {index: 100, type: Single}
              - key: [5888, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 6784, 128]
                speed: 3240.63
                value: {index: 100, type: Single}
              - key: [5888, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [5888, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 4, 128]
                speed: 136.705
                value: {index: 106, type: Single}
              - key: [6784, 4, 256]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [6784, 4, 768]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [6784, 4, 1792]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [6784, 4, 3328]
                speed: 0.0
                value: {index: 107, type: Single}
              - key: [6784, 64, 128]
                speed: 1300.25
                value: {index: 101, type: Single}
              - key: [6784, 64, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 64, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 64, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 64, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 128, 128]
                speed: 1728.67
                value: {index: 100, type: Single}
              - key: [6784, 128, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 128, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 128, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 128, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 256, 128]
                speed: 2268.31
                value: {index: 101, type: Single}
              - key: [6784, 256, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 256, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 256, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 256, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 448, 128]
                speed: 2509.17
                value: {index: 102, type: Single}
              - key: [6784, 448, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 448, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 448, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 448, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 704, 128]
                speed: 2882.52
                value: {index: 100, type: Single}
              - key: [6784, 704, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 704, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 704, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 704, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1024, 128]
                speed: 3007.74
                value: {index: 100, type: Single}
              - key: [6784, 1024, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1024, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1024, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1024, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1408, 128]
                speed: 3188.82
                value: {index: 100, type: Single}
              - key: [6784, 1408, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1408, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1408, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1408, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1856, 128]
                speed: 3204.75
                value: {index: 100, type: Single}
              - key: [6784, 1856, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1856, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1856, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 1856, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 2368, 128]
                speed: 3321.64
                value: {index: 100, type: Single}
              - key: [6784, 2368, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 2368, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 2368, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 2368, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 2944, 128]
                speed: 3388.1
                value: {index: 100, type: Single}
              - key: [6784, 2944, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 2944, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 2944, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 2944, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 3584, 128]
                speed: 3448.25
                value: {index: 100, type: Single}
              - key: [6784, 3584, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 3584, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 3584, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 3584, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 4288, 128]
                speed: 3462.81
                value: {index: 100, type: Single}
              - key: [6784, 4288, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 4288, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 4288, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 4288, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 5056, 128]
                speed: 3484.37
                value: {index: 100, type: Single}
              - key: [6784, 5056, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 5056, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 5056, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 5056, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 5888, 128]
                speed: 3504.74
                value: {index: 100, type: Single}
              - key: [6784, 5888, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 5888, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 5888, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 5888, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 6784, 128]
                speed: 3534.16
                value: {index: 100, type: Single}
              - key: [6784, 6784, 256]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 6784, 768]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 6784, 1792]
                speed: 0.0
                value: {index: 104, type: Single}
              - key: [6784, 6784, 3328]
                speed: 0.0
                value: {index: 104, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
      property: {type: OperationIdentifier}
      type: ProblemMap
    predicate:
      type: AMDGPU
      value: {type: Processor, value: gfx900}
  - library:
      map:
        Contraction_l_Ailk_Bjlk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.0988441
                value: {index: 122, type: Single}
              - key: [4, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 64, 128]
                speed: 1.66508
                value: {index: 121, type: Single}
              - key: [4, 64, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 64, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 64, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 64, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 128, 128]
                speed: 3.37119
                value: {index: 122, type: Single}
              - key: [4, 128, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 128, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 128, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 128, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 256, 128]
                speed: 6.9721
                value: {index: 122, type: Single}
              - key: [4, 256, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 256, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 256, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 256, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 448, 128]
                speed: 11.3331
                value: {index: 122, type: Single}
              - key: [4, 448, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 448, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 448, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 448, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 704, 128]
                speed: 18.3159
                value: {index: 121, type: Single}
              - key: [4, 704, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 704, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 704, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 704, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1024, 128]
                speed: 26.3203
                value: {index: 122, type: Single}
              - key: [4, 1024, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1024, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1024, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1024, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1408, 128]
                speed: 35.478
                value: {index: 122, type: Single}
              - key: [4, 1408, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1408, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1408, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1408, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1856, 128]
                speed: 47.3255
                value: {index: 122, type: Single}
              - key: [4, 1856, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1856, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1856, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 1856, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 2368, 128]
                speed: 60.6223
                value: {index: 122, type: Single}
              - key: [4, 2368, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 2368, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 2368, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 2368, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 2944, 128]
                speed: 73.6018
                value: {index: 122, type: Single}
              - key: [4, 2944, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 2944, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 2944, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 2944, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 3584, 128]
                speed: 90.6647
                value: {index: 122, type: Single}
              - key: [4, 3584, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 3584, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 3584, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 3584, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 4288, 128]
                speed: 105.961
                value: {index: 122, type: Single}
              - key: [4, 4288, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 4288, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 4288, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 4288, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 5056, 128]
                speed: 123.508
                value: {index: 122, type: Single}
              - key: [4, 5056, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 5056, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 5056, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 5056, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 5888, 128]
                speed: 141.669
                value: {index: 121, type: Single}
              - key: [4, 5888, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 5888, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 5888, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 5888, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 6784, 128]
                speed: 160.806
                value: {index: 122, type: Single}
              - key: [4, 6784, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 6784, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 6784, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4, 6784, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [64, 4, 128]
                speed: 1.80441
                value: {index: 122, type: Single}
              - key: [64, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [64, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [64, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [64, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [64, 64, 128]
                speed: 22.9147
                value: {index: 116, type: Single}
              - key: [64, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 128, 128]
                speed: 42.2821
                value: {index: 116, type: Single}
              - key: [64, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 256, 128]
                speed: 85.668
                value: {index: 116, type: Single}
              - key: [64, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 448, 128]
                speed: 177.129
                value: {index: 117, type: Single}
              - key: [64, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 704, 128]
                speed: 266.999
                value: {index: 116, type: Single}
              - key: [64, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1024, 128]
                speed: 389.805
                value: {index: 116, type: Single}
              - key: [64, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1408, 128]
                speed: 532.027
                value: {index: 116, type: Single}
              - key: [64, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1856, 128]
                speed: 657.628
                value: {index: 116, type: Single}
              - key: [64, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 2368, 128]
                speed: 777.19
                value: {index: 116, type: Single}
              - key: [64, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 2944, 128]
                speed: 948.005
                value: {index: 116, type: Single}
              - key: [64, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 3584, 128]
                speed: 1132.72
                value: {index: 116, type: Single}
              - key: [64, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 4288, 128]
                speed: 1261.76
                value: {index: 116, type: Single}
              - key: [64, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 5056, 128]
                speed: 1450.24
                value: {index: 116, type: Single}
              - key: [64, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 5888, 128]
                speed: 1607.82
                value: {index: 117, type: Single}
              - key: [64, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 6784, 128]
                speed: 1813.79
                value: {index: 117, type: Single}
              - key: [64, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [64, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 4, 128]
                speed: 3.7578
                value: {index: 121, type: Single}
              - key: [128, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [128, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [128, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [128, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [128, 64, 128]
                speed: 48.7257
                value: {index: 119, type: Single}
              - key: [128, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 128, 128]
                speed: 93.6229
                value: {index: 116, type: Single}
              - key: [128, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 256, 128]
                speed: 195.63
                value: {index: 116, type: Single}
              - key: [128, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 448, 128]
                speed: 339.816
                value: {index: 116, type: Single}
              - key: [128, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 704, 128]
                speed: 539.997
                value: {index: 116, type: Single}
              - key: [128, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1024, 128]
                speed: 735.843
                value: {index: 116, type: Single}
              - key: [128, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1408, 128]
                speed: 930.188
                value: {index: 116, type: Single}
              - key: [128, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1856, 128]
                speed: 1210.54
                value: {index: 116, type: Single}
              - key: [128, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 2368, 128]
                speed: 1377.75
                value: {index: 116, type: Single}
              - key: [128, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 2944, 128]
                speed: 1629.54
                value: {index: 116, type: Single}
              - key: [128, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 3584, 128]
                speed: 1877.25
                value: {index: 116, type: Single}
              - key: [128, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 4288, 128]
                speed: 2023.46
                value: {index: 116, type: Single}
              - key: [128, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 5056, 128]
                speed: 2301.04
                value: {index: 116, type: Single}
              - key: [128, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 5888, 128]
                speed: 2496.61
                value: {index: 116, type: Single}
              - key: [128, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 6784, 128]
                speed: 2735.0
                value: {index: 118, type: Single}
              - key: [128, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [128, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 4, 128]
                speed: 7.31429
                value: {index: 121, type: Single}
              - key: [256, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [256, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [256, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [256, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [256, 64, 128]
                speed: 100.438
                value: {index: 119, type: Single}
              - key: [256, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 128, 128]
                speed: 208.88
                value: {index: 116, type: Single}
              - key: [256, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 256, 128]
                speed: 435.094
                value: {index: 116, type: Single}
              - key: [256, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 448, 128]
                speed: 758.268
                value: {index: 116, type: Single}
              - key: [256, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 704, 128]
                speed: 1029.85
                value: {index: 116, type: Single}
              - key: [256, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1024, 128]
                speed: 1407.48
                value: {index: 116, type: Single}
              - key: [256, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1408, 128]
                speed: 1752.94
                value: {index: 116, type: Single}
              - key: [256, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1856, 128]
                speed: 2141.46
                value: {index: 116, type: Single}
              - key: [256, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 2368, 128]
                speed: 2394.9
                value: {index: 116, type: Single}
              - key: [256, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 2944, 128]
                speed: 2685.66
                value: {index: 116, type: Single}
              - key: [256, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 3584, 128]
                speed: 3058.35
                value: {index: 116, type: Single}
              - key: [256, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 4288, 128]
                speed: 3130.78
                value: {index: 118, type: Single}
              - key: [256, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 5056, 128]
                speed: 3652.49
                value: {index: 118, type: Single}
              - key: [256, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 5888, 128]
                speed: 3822.11
                value: {index: 116, type: Single}
              - key: [256, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 6784, 128]
                speed: 4021.35
                value: {index: 116, type: Single}
              - key: [256, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [256, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 4, 128]
                speed: 11.997
                value: {index: 121, type: Single}
              - key: [448, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [448, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [448, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [448, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [448, 64, 128]
                speed: 207.58
                value: {index: 116, type: Single}
              - key: [448, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 128, 128]
                speed: 434.836
                value: {index: 116, type: Single}
              - key: [448, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 256, 128]
                speed: 873.813
                value: {index: 116, type: Single}
              - key: [448, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 448, 128]
                speed: 1466.33
                value: {index: 116, type: Single}
              - key: [448, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 704, 128]
                speed: 2059.7
                value: {index: 116, type: Single}
              - key: [448, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1024, 128]
                speed: 2749.08
                value: {index: 116, type: Single}
              - key: [448, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1408, 128]
                speed: 3266.2
                value: {index: 116, type: Single}
              - key: [448, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1856, 128]
                speed: 3705.8
                value: {index: 116, type: Single}
              - key: [448, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 2368, 128]
                speed: 3755.27
                value: {index: 116, type: Single}
              - key: [448, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 2944, 128]
                speed: 3872.04
                value: {index: 116, type: Single}
              - key: [448, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 3584, 128]
                speed: 4239.34
                value: {index: 116, type: Single}
              - key: [448, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 4288, 128]
                speed: 5281.22
                value: {index: 116, type: Single}
              - key: [448, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 5056, 128]
                speed: 5290.76
                value: {index: 116, type: Single}
              - key: [448, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 5888, 128]
                speed: 5773.67
                value: {index: 116, type: Single}
              - key: [448, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 6784, 128]
                speed: 5923.03
                value: {index: 116, type: Single}
              - key: [448, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [448, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 4, 128]
                speed: 18.6959
                value: {index: 121, type: Single}
              - key: [704, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [704, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [704, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [704, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [704, 64, 128]
                speed: 333.748
                value: {index: 116, type: Single}
              - key: [704, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 128, 128]
                speed: 699.899
                value: {index: 116, type: Single}
              - key: [704, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 256, 128]
                speed: 1227.06
                value: {index: 116, type: Single}
              - key: [704, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 448, 128]
                speed: 2043.03
                value: {index: 116, type: Single}
              - key: [704, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 704, 128]
                speed: 2715.7
                value: {index: 116, type: Single}
              - key: [704, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1024, 128]
                speed: 3432.84
                value: {index: 116, type: Single}
              - key: [704, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1408, 128]
                speed: 3849.44
                value: {index: 116, type: Single}
              - key: [704, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1856, 128]
                speed: 4067.36
                value: {index: 116, type: Single}
              - key: [704, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 2368, 128]
                speed: 4520.87
                value: {index: 116, type: Single}
              - key: [704, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 2944, 128]
                speed: 4905.55
                value: {index: 116, type: Single}
              - key: [704, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 3584, 128]
                speed: 5545.4
                value: {index: 116, type: Single}
              - key: [704, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 4288, 128]
                speed: 5890.29
                value: {index: 116, type: Single}
              - key: [704, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 5056, 128]
                speed: 6197.08
                value: {index: 116, type: Single}
              - key: [704, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 5888, 128]
                speed: 5985.81
                value: {index: 117, type: Single}
              - key: [704, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 6784, 128]
                speed: 6508.98
                value: {index: 116, type: Single}
              - key: [704, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [704, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 4, 128]
                speed: 26.1106
                value: {index: 122, type: Single}
              - key: [1024, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1024, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1024, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1024, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1024, 64, 128]
                speed: 474.469
                value: {index: 116, type: Single}
              - key: [1024, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 128, 128]
                speed: 1008.25
                value: {index: 116, type: Single}
              - key: [1024, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 256, 128]
                speed: 1784.81
                value: {index: 116, type: Single}
              - key: [1024, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 448, 128]
                speed: 2790.89
                value: {index: 116, type: Single}
              - key: [1024, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 704, 128]
                speed: 3495.25
                value: {index: 116, type: Single}
              - key: [1024, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1024, 128]
                speed: 3562.04
                value: {index: 116, type: Single}
              - key: [1024, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1408, 128]
                speed: 4532.21
                value: {index: 118, type: Single}
              - key: [1024, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1856, 128]
                speed: 5242.94
                value: {index: 115, type: Single}
              - key: [1024, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 2368, 128]
                speed: 5012.61
                value: {index: 116, type: Single}
              - key: [1024, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 2944, 128]
                speed: 4947.16
                value: {index: 118, type: Single}
              - key: [1024, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 3584, 128]
                speed: 5684.47
                value: {index: 115, type: Single}
              - key: [1024, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 4288, 128]
                speed: 5721.09
                value: {index: 118, type: Single}
              - key: [1024, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 5056, 128]
                speed: 6020.19
                value: {index: 118, type: Single}
              - key: [1024, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 5888, 128]
                speed: 6128.93
                value: {index: 118, type: Single}
              - key: [1024, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 6784, 128]
                speed: 6326.12
                value: {index: 118, type: Single}
              - key: [1024, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1024, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 4, 128]
                speed: 36.3364
                value: {index: 121, type: Single}
              - key: [1408, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1408, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1408, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1408, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1408, 64, 128]
                speed: 667.496
                value: {index: 116, type: Single}
              - key: [1408, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 128, 128]
                speed: 1347.47
                value: {index: 116, type: Single}
              - key: [1408, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 256, 128]
                speed: 2344.38
                value: {index: 116, type: Single}
              - key: [1408, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 448, 128]
                speed: 3234.79
                value: {index: 116, type: Single}
              - key: [1408, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 704, 128]
                speed: 3749.34
                value: {index: 116, type: Single}
              - key: [1408, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1024, 128]
                speed: 4717.52
                value: {index: 118, type: Single}
              - key: [1408, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1408, 128]
                speed: 5075.16
                value: {index: 116, type: Single}
              - key: [1408, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1856, 128]
                speed: 5465.66
                value: {index: 116, type: Single}
              - key: [1408, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 2368, 128]
                speed: 5836.62
                value: {index: 116, type: Single}
              - key: [1408, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 2944, 128]
                speed: 6304.45
                value: {index: 116, type: Single}
              - key: [1408, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 3584, 128]
                speed: 6177.59
                value: {index: 116, type: Single}
              - key: [1408, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 4288, 128]
                speed: 6589.39
                value: {index: 116, type: Single}
              - key: [1408, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 5056, 128]
                speed: 6763.78
                value: {index: 116, type: Single}
              - key: [1408, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 5888, 128]
                speed: 6855.05
                value: {index: 118, type: Single}
              - key: [1408, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 6784, 128]
                speed: 6975.39
                value: {index: 116, type: Single}
              - key: [1408, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1408, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 4, 128]
                speed: 46.9514
                value: {index: 121, type: Single}
              - key: [1856, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1856, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1856, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1856, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [1856, 64, 128]
                speed: 791.893
                value: {index: 117, type: Single}
              - key: [1856, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 128, 128]
                speed: 1645.49
                value: {index: 116, type: Single}
              - key: [1856, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 256, 128]
                speed: 2826.09
                value: {index: 116, type: Single}
              - key: [1856, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 448, 128]
                speed: 3705.8
                value: {index: 116, type: Single}
              - key: [1856, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 704, 128]
                speed: 4515.33
                value: {index: 116, type: Single}
              - key: [1856, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1024, 128]
                speed: 5270.2
                value: {index: 115, type: Single}
              - key: [1856, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1408, 128]
                speed: 5783.17
                value: {index: 116, type: Single}
              - key: [1856, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1856, 128]
                speed: 6144.5
                value: {index: 116, type: Single}
              - key: [1856, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 2368, 128]
                speed: 6493.12
                value: {index: 116, type: Single}
              - key: [1856, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 2944, 128]
                speed: 6699.27
                value: {index: 116, type: Single}
              - key: [1856, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 3584, 128]
                speed: 6594.23
                value: {index: 118, type: Single}
              - key: [1856, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 4288, 128]
                speed: 7011.97
                value: {index: 116, type: Single}
              - key: [1856, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 5056, 128]
                speed: 7125.95
                value: {index: 116, type: Single}
              - key: [1856, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 5888, 128]
                speed: 7183.69
                value: {index: 116, type: Single}
              - key: [1856, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 6784, 128]
                speed: 7304.52
                value: {index: 116, type: Single}
              - key: [1856, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [1856, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 4, 128]
                speed: 58.9696
                value: {index: 122, type: Single}
              - key: [2368, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [2368, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [2368, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [2368, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [2368, 64, 128]
                speed: 1097.21
                value: {index: 116, type: Single}
              - key: [2368, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 128, 128]
                speed: 2063.69
                value: {index: 116, type: Single}
              - key: [2368, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 256, 128]
                speed: 3149.13
                value: {index: 116, type: Single}
              - key: [2368, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 448, 128]
                speed: 4051.03
                value: {index: 116, type: Single}
              - key: [2368, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 704, 128]
                speed: 5070.94
                value: {index: 116, type: Single}
              - key: [2368, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1024, 128]
                speed: 5381.09
                value: {index: 118, type: Single}
              - key: [2368, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1408, 128]
                speed: 6131.8
                value: {index: 116, type: Single}
              - key: [2368, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1856, 128]
                speed: 6457.35
                value: {index: 116, type: Single}
              - key: [2368, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 2368, 128]
                speed: 6761.06
                value: {index: 116, type: Single}
              - key: [2368, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 2944, 128]
                speed: 6923.82
                value: {index: 116, type: Single}
              - key: [2368, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 3584, 128]
                speed: 6755.79
                value: {index: 115, type: Single}
              - key: [2368, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 4288, 128]
                speed: 7204.64
                value: {index: 116, type: Single}
              - key: [2368, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 5056, 128]
                speed: 7286.52
                value: {index: 116, type: Single}
              - key: [2368, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 5888, 128]
                speed: 7261.91
                value: {index: 116, type: Single}
              - key: [2368, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 6784, 128]
                speed: 7441.62
                value: {index: 116, type: Single}
              - key: [2368, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2368, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 4, 128]
                speed: 74.4746
                value: {index: 122, type: Single}
              - key: [2944, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [2944, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [2944, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [2944, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [2944, 64, 128]
                speed: 1316.44
                value: {index: 116, type: Single}
              - key: [2944, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 128, 128]
                speed: 2364.44
                value: {index: 116, type: Single}
              - key: [2944, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 256, 128]
                speed: 3276.8
                value: {index: 116, type: Single}
              - key: [2944, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 448, 128]
                speed: 4289.14
                value: {index: 116, type: Single}
              - key: [2944, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 704, 128]
                speed: 5197.68
                value: {index: 116, type: Single}
              - key: [2944, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1024, 128]
                speed: 5341.58
                value: {index: 118, type: Single}
              - key: [2944, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1408, 128]
                speed: 6141.0
                value: {index: 116, type: Single}
              - key: [2944, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1856, 128]
                speed: 6578.29
                value: {index: 116, type: Single}
              - key: [2944, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 2368, 128]
                speed: 6847.31
                value: {index: 116, type: Single}
              - key: [2944, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 2944, 128]
                speed: 6930.29
                value: {index: 116, type: Single}
              - key: [2944, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 3584, 128]
                speed: 7037.17
                value: {index: 115, type: Single}
              - key: [2944, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 4288, 128]
                speed: 7213.69
                value: {index: 116, type: Single}
              - key: [2944, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 5056, 128]
                speed: 7258.74
                value: {index: 116, type: Single}
              - key: [2944, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 5888, 128]
                speed: 7370.44
                value: {index: 115, type: Single}
              - key: [2944, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 6784, 128]
                speed: 7381.74
                value: {index: 115, type: Single}
              - key: [2944, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [2944, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 4, 128]
                speed: 91.3871
                value: {index: 121, type: Single}
              - key: [3584, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [3584, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [3584, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [3584, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [3584, 64, 128]
                speed: 1581.9
                value: {index: 116, type: Single}
              - key: [3584, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 128, 128]
                speed: 2801.54
                value: {index: 116, type: Single}
              - key: [3584, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 256, 128]
                speed: 3853.04
                value: {index: 116, type: Single}
              - key: [3584, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 448, 128]
                speed: 4705.15
                value: {index: 116, type: Single}
              - key: [3584, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 704, 128]
                speed: 5455.43
                value: {index: 116, type: Single}
              - key: [3584, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1024, 128]
                speed: 5779.59
                value: {index: 115, type: Single}
              - key: [3584, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1408, 128]
                speed: 6177.56
                value: {index: 118, type: Single}
              - key: [3584, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1856, 128]
                speed: 6573.86
                value: {index: 115, type: Single}
              - key: [3584, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 2368, 128]
                speed: 6739.03
                value: {index: 115, type: Single}
              - key: [3584, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 2944, 128]
                speed: 7043.04
                value: {index: 115, type: Single}
              - key: [3584, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 3584, 128]
                speed: 7040.83
                value: {index: 118, type: Single}
              - key: [3584, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 4288, 128]
                speed: 7215.15
                value: {index: 115, type: Single}
              - key: [3584, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 5056, 128]
                speed: 7303.09
                value: {index: 115, type: Single}
              - key: [3584, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 5888, 128]
                speed: 7419.1
                value: {index: 115, type: Single}
              - key: [3584, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 6784, 128]
                speed: 7555.33
                value: {index: 115, type: Single}
              - key: [3584, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [3584, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 4, 128]
                speed: 105.961
                value: {index: 122, type: Single}
              - key: [4288, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4288, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4288, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4288, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [4288, 64, 128]
                speed: 1860.56
                value: {index: 116, type: Single}
              - key: [4288, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 128, 128]
                speed: 2927.27
                value: {index: 116, type: Single}
              - key: [4288, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 256, 128]
                speed: 4103.66
                value: {index: 116, type: Single}
              - key: [4288, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 448, 128]
                speed: 5364.12
                value: {index: 116, type: Single}
              - key: [4288, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 704, 128]
                speed: 5948.33
                value: {index: 116, type: Single}
              - key: [4288, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1024, 128]
                speed: 5830.29
                value: {index: 117, type: Single}
              - key: [4288, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1408, 128]
                speed: 6699.06
                value: {index: 116, type: Single}
              - key: [4288, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1856, 128]
                speed: 7023.57
                value: {index: 116, type: Single}
              - key: [4288, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 2368, 128]
                speed: 7191.88
                value: {index: 116, type: Single}
              - key: [4288, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 2944, 128]
                speed: 7304.99
                value: {index: 116, type: Single}
              - key: [4288, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 3584, 128]
                speed: 7285.7
                value: {index: 115, type: Single}
              - key: [4288, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 4288, 128]
                speed: 7480.1
                value: {index: 116, type: Single}
              - key: [4288, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 5056, 128]
                speed: 7547.52
                value: {index: 116, type: Single}
              - key: [4288, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 5888, 128]
                speed: 7462.89
                value: {index: 118, type: Single}
              - key: [4288, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 6784, 128]
                speed: 7626.4
                value: {index: 116, type: Single}
              - key: [4288, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [4288, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 4, 128]
                speed: 123.982
                value: {index: 122, type: Single}
              - key: [5056, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [5056, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [5056, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [5056, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [5056, 64, 128]
                speed: 2148.28
                value: {index: 116, type: Single}
              - key: [5056, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 128, 128]
                speed: 3417.39
                value: {index: 116, type: Single}
              - key: [5056, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 256, 128]
                speed: 4463.23
                value: {index: 116, type: Single}
              - key: [5056, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 448, 128]
                speed: 5516.2
                value: {index: 116, type: Single}
              - key: [5056, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 704, 128]
                speed: 6176.92
                value: {index: 116, type: Single}
              - key: [5056, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1024, 128]
                speed: 6177.32
                value: {index: 118, type: Single}
              - key: [5056, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1408, 128]
                speed: 6915.73
                value: {index: 116, type: Single}
              - key: [5056, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1856, 128]
                speed: 7122.57
                value: {index: 116, type: Single}
              - key: [5056, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 2368, 128]
                speed: 7264.42
                value: {index: 116, type: Single}
              - key: [5056, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 2944, 128]
                speed: 7377.92
                value: {index: 116, type: Single}
              - key: [5056, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 3584, 128]
                speed: 7328.93
                value: {index: 118, type: Single}
              - key: [5056, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 4288, 128]
                speed: 7514.82
                value: {index: 116, type: Single}
              - key: [5056, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 5056, 128]
                speed: 7574.31
                value: {index: 116, type: Single}
              - key: [5056, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 5888, 128]
                speed: 7578.65
                value: {index: 115, type: Single}
              - key: [5056, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 6784, 128]
                speed: 7628.6
                value: {index: 116, type: Single}
              - key: [5056, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5056, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 4, 128]
                speed: 142.204
                value: {index: 122, type: Single}
              - key: [5888, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [5888, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [5888, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [5888, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [5888, 64, 128]
                speed: 2184.53
                value: {index: 116, type: Single}
              - key: [5888, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 128, 128]
                speed: 3416.04
                value: {index: 116, type: Single}
              - key: [5888, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 256, 128]
                speed: 4425.18
                value: {index: 116, type: Single}
              - key: [5888, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 448, 128]
                speed: 5524.28
                value: {index: 116, type: Single}
              - key: [5888, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 704, 128]
                speed: 5953.57
                value: {index: 116, type: Single}
              - key: [5888, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1024, 128]
                speed: 6435.58
                value: {index: 118, type: Single}
              - key: [5888, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1408, 128]
                speed: 6876.4
                value: {index: 118, type: Single}
              - key: [5888, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1856, 128]
                speed: 6919.31
                value: {index: 118, type: Single}
              - key: [5888, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 2368, 128]
                speed: 7002.05
                value: {index: 118, type: Single}
              - key: [5888, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 2944, 128]
                speed: 7370.44
                value: {index: 115, type: Single}
              - key: [5888, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 3584, 128]
                speed: 7448.55
                value: {index: 115, type: Single}
              - key: [5888, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 4288, 128]
                speed: 7350.19
                value: {index: 115, type: Single}
              - key: [5888, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 5056, 128]
                speed: 7579.85
                value: {index: 115, type: Single}
              - key: [5888, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 5888, 128]
                speed: 7644.7
                value: {index: 115, type: Single}
              - key: [5888, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 6784, 128]
                speed: 7742.1
                value: {index: 115, type: Single}
              - key: [5888, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [5888, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 4, 128]
                speed: 159.627
                value: {index: 122, type: Single}
              - key: [6784, 4, 256]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [6784, 4, 768]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [6784, 4, 1792]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [6784, 4, 3328]
                speed: 0.0
                value: {index: 123, type: Single}
              - key: [6784, 64, 128]
                speed: 2481.01
                value: {index: 116, type: Single}
              - key: [6784, 64, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 64, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 64, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 64, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 128, 128]
                speed: 3913.7
                value: {index: 116, type: Single}
              - key: [6784, 128, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 128, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 128, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 128, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 256, 128]
                speed: 4883.53
                value: {index: 115, type: Single}
              - key: [6784, 256, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 256, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 256, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 256, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 448, 128]
                speed: 5809.76
                value: {index: 116, type: Single}
              - key: [6784, 448, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 448, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 448, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 448, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 704, 128]
                speed: 6336.27
                value: {index: 116, type: Single}
              - key: [6784, 704, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 704, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 704, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 704, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1024, 128]
                speed: 6569.12
                value: {index: 118, type: Single}
              - key: [6784, 1024, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1024, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1024, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1024, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1408, 128]
                speed: 6984.96
                value: {index: 115, type: Single}
              - key: [6784, 1408, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1408, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1408, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1408, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1856, 128]
                speed: 6990.23
                value: {index: 116, type: Single}
              - key: [6784, 1856, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1856, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1856, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 1856, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 2368, 128]
                speed: 7240.38
                value: {index: 115, type: Single}
              - key: [6784, 2368, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 2368, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 2368, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 2368, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 2944, 128]
                speed: 7388.56
                value: {index: 115, type: Single}
              - key: [6784, 2944, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 2944, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 2944, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 2944, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 3584, 128]
                speed: 7592.19
                value: {index: 115, type: Single}
              - key: [6784, 3584, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 3584, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 3584, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 3584, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 4288, 128]
                speed: 7424.45
                value: {index: 115, type: Single}
              - key: [6784, 4288, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 4288, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 4288, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 4288, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 5056, 128]
                speed: 7580.13
                value: {index: 115, type: Single}
              - key: [6784, 5056, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 5056, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 5056, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 5056, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 5888, 128]
                speed: 7759.96
                value: {index: 115, type: Single}
              - key: [6784, 5888, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 5888, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 5888, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 5888, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 6784, 128]
                speed: 7827.86
                value: {index: 115, type: Single}
              - key: [6784, 6784, 256]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 6784, 768]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 6784, 1792]
                speed: 0.0
                value: {index: 120, type: Single}
              - key: [6784, 6784, 3328]
                speed: 0.0
                value: {index: 120, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
        Contraction_l_Ailk_Bljk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.105788
                value: {index: 49, type: Single}
              - key: [4, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 64, 128]
                speed: 1.74303
                value: {index: 48, type: Single}
              - key: [4, 64, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 64, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 64, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 64, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 128, 128]
                speed: 3.48605
                value: {index: 48, type: Single}
              - key: [4, 128, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 128, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 128, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 128, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 256, 128]
                speed: 6.94256
                value: {index: 49, type: Single}
              - key: [4, 256, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 256, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 256, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 256, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 448, 128]
                speed: 11.7029
                value: {index: 48, type: Single}
              - key: [4, 448, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 448, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 448, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 448, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 704, 128]
                speed: 18.542
                value: {index: 49, type: Single}
              - key: [4, 704, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 704, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 704, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 704, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1024, 128]
                speed: 27.6523
                value: {index: 49, type: Single}
              - key: [4, 1024, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1024, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1024, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1024, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1408, 128]
                speed: 38.0219
                value: {index: 49, type: Single}
              - key: [4, 1408, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1408, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1408, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1408, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1856, 128]
                speed: 49.9106
                value: {index: 49, type: Single}
              - key: [4, 1856, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1856, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1856, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 1856, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 2368, 128]
                speed: 63.6773
                value: {index: 48, type: Single}
              - key: [4, 2368, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 2368, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 2368, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 2368, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 2944, 128]
                speed: 74.7683
                value: {index: 48, type: Single}
              - key: [4, 2944, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 2944, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 2944, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 2944, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 3584, 128]
                speed: 93.2423
                value: {index: 49, type: Single}
              - key: [4, 3584, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 3584, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 3584, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 3584, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 4288, 128]
                speed: 108.471
                value: {index: 49, type: Single}
              - key: [4, 4288, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 4288, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 4288, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 4288, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 5056, 128]
                speed: 117.667
                value: {index: 49, type: Single}
              - key: [4, 5056, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 5056, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 5056, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 5056, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 5888, 128]
                speed: 130.844
                value: {index: 48, type: Single}
              - key: [4, 5888, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 5888, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 5888, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 5888, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 6784, 128]
                speed: 155.619
                value: {index: 48, type: Single}
              - key: [4, 6784, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 6784, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 6784, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4, 6784, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [64, 4, 128]
                speed: 1.84505
                value: {index: 49, type: Single}
              - key: [64, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [64, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [64, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [64, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [64, 64, 128]
                speed: 22.9147
                value: {index: 46, type: Single}
              - key: [64, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 128, 128]
                speed: 46.9792
                value: {index: 46, type: Single}
              - key: [64, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 256, 128]
                speed: 103.614
                value: {index: 46, type: Single}
              - key: [64, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 448, 128]
                speed: 172.463
                value: {index: 46, type: Single}
              - key: [64, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 704, 128]
                speed: 264.064
                value: {index: 46, type: Single}
              - key: [64, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1024, 128]
                speed: 385.506
                value: {index: 46, type: Single}
              - key: [64, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1408, 128]
                speed: 472.719
                value: {index: 46, type: Single}
              - key: [64, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1856, 128]
                speed: 601.438
                value: {index: 46, type: Single}
              - key: [64, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 2368, 128]
                speed: 757.76
                value: {index: 46, type: Single}
              - key: [64, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 2944, 128]
                speed: 924.741
                value: {index: 46, type: Single}
              - key: [64, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 3584, 128]
                speed: 1112.13
                value: {index: 46, type: Single}
              - key: [64, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 4288, 128]
                speed: 1276.43
                value: {index: 46, type: Single}
              - key: [64, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 5056, 128]
                speed: 1466.67
                value: {index: 46, type: Single}
              - key: [64, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 5888, 128]
                speed: 1590.85
                value: {index: 46, type: Single}
              - key: [64, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 6784, 128]
                speed: 1745.43
                value: {index: 46, type: Single}
              - key: [64, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [64, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 4, 128]
                speed: 3.75791
                value: {index: 48, type: Single}
              - key: [128, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [128, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [128, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [128, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [128, 64, 128]
                speed: 53.0656
                value: {index: 46, type: Single}
              - key: [128, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 128, 128]
                speed: 105.703
                value: {index: 46, type: Single}
              - key: [128, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 256, 128]
                speed: 200.877
                value: {index: 46, type: Single}
              - key: [128, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 448, 128]
                speed: 348.861
                value: {index: 46, type: Single}
              - key: [128, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 704, 128]
                speed: 485.452
                value: {index: 46, type: Single}
              - key: [128, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1024, 128]
                speed: 685.344
                value: {index: 46, type: Single}
              - key: [128, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1408, 128]
                speed: 936.229
                value: {index: 46, type: Single}
              - key: [128, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1856, 128]
                speed: 1121.26
                value: {index: 46, type: Single}
              - key: [128, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 2368, 128]
                speed: 1393.58
                value: {index: 46, type: Single}
              - key: [128, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 2944, 128]
                speed: 1679.47
                value: {index: 46, type: Single}
              - key: [128, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 3584, 128]
                speed: 1941.81
                value: {index: 46, type: Single}
              - key: [128, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 4288, 128]
                speed: 2014.18
                value: {index: 46, type: Single}
              - key: [128, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 5056, 128]
                speed: 2419.32
                value: {index: 46, type: Single}
              - key: [128, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 5888, 128]
                speed: 2346.04
                value: {index: 43, type: Single}
              - key: [128, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 6784, 128]
                speed: 2626.4
                value: {index: 43, type: Single}
              - key: [128, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [128, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 4, 128]
                speed: 7.24956
                value: {index: 48, type: Single}
              - key: [256, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [256, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [256, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [256, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [256, 64, 128]
                speed: 114.975
                value: {index: 46, type: Single}
              - key: [256, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 128, 128]
                speed: 228.947
                value: {index: 46, type: Single}
              - key: [256, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 256, 128]
                speed: 442.437
                value: {index: 46, type: Single}
              - key: [256, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 448, 128]
                speed: 692.456
                value: {index: 46, type: Single}
              - key: [256, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 704, 128]
                speed: 1037.26
                value: {index: 46, type: Single}
              - key: [256, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1024, 128]
                speed: 1366.22
                value: {index: 46, type: Single}
              - key: [256, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1408, 128]
                speed: 1721.54
                value: {index: 46, type: Single}
              - key: [256, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1856, 128]
                speed: 2190.83
                value: {index: 46, type: Single}
              - key: [256, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 2368, 128]
                speed: 2443.16
                value: {index: 46, type: Single}
              - key: [256, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 2944, 128]
                speed: 2554.79
                value: {index: 46, type: Single}
              - key: [256, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 3584, 128]
                speed: 2924.32
                value: {index: 44, type: Single}
              - key: [256, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 4288, 128]
                speed: 3075.95
                value: {index: 44, type: Single}
              - key: [256, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 5056, 128]
                speed: 3684.94
                value: {index: 44, type: Single}
              - key: [256, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 5888, 128]
                speed: 3562.37
                value: {index: 46, type: Single}
              - key: [256, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 6784, 128]
                speed: 3704.97
                value: {index: 45, type: Single}
              - key: [256, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [256, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 4, 128]
                speed: 11.8971
                value: {index: 49, type: Single}
              - key: [448, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [448, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [448, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [448, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [448, 64, 128]
                speed: 224.878
                value: {index: 46, type: Single}
              - key: [448, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 128, 128]
                speed: 461.057
                value: {index: 46, type: Single}
              - key: [448, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 256, 128]
                speed: 869.672
                value: {index: 46, type: Single}
              - key: [448, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 448, 128]
                speed: 1459.67
                value: {index: 46, type: Single}
              - key: [448, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 704, 128]
                speed: 2120.28
                value: {index: 46, type: Single}
              - key: [448, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1024, 128]
                speed: 2749.08
                value: {index: 46, type: Single}
              - key: [448, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1408, 128]
                speed: 3163.81
                value: {index: 46, type: Single}
              - key: [448, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1856, 128]
                speed: 3576.29
                value: {index: 43, type: Single}
              - key: [448, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 2368, 128]
                speed: 3814.34
                value: {index: 46, type: Single}
              - key: [448, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 2944, 128]
                speed: 4203.7
                value: {index: 44, type: Single}
              - key: [448, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 3584, 128]
                speed: 4460.09
                value: {index: 46, type: Single}
              - key: [448, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 4288, 128]
                speed: 4757.95
                value: {index: 44, type: Single}
              - key: [448, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 5056, 128]
                speed: 4944.26
                value: {index: 44, type: Single}
              - key: [448, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 5888, 128]
                speed: 5054.55
                value: {index: 44, type: Single}
              - key: [448, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 6784, 128]
                speed: 5262.78
                value: {index: 46, type: Single}
              - key: [448, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [448, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 4, 128]
                speed: 18.3159
                value: {index: 49, type: Single}
              - key: [704, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [704, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [704, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [704, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [704, 64, 128]
                speed: 364.089
                value: {index: 46, type: Single}
              - key: [704, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 128, 128]
                speed: 667.496
                value: {index: 46, type: Single}
              - key: [704, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 256, 128]
                speed: 1242.92
                value: {index: 46, type: Single}
              - key: [704, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 448, 128]
                speed: 2085.29
                value: {index: 46, type: Single}
              - key: [704, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 704, 128]
                speed: 2583.01
                value: {index: 46, type: Single}
              - key: [704, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1024, 128]
                speed: 3474.2
                value: {index: 46, type: Single}
              - key: [704, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1408, 128]
                speed: 3109.75
                value: {index: 44, type: Single}
              - key: [704, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1856, 128]
                speed: 3760.07
                value: {index: 44, type: Single}
              - key: [704, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 2368, 128]
                speed: 4116.23
                value: {index: 46, type: Single}
              - key: [704, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 2944, 128]
                speed: 4805.97
                value: {index: 46, type: Single}
              - key: [704, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 3584, 128]
                speed: 5090.86
                value: {index: 46, type: Single}
              - key: [704, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 4288, 128]
                speed: 5238.65
                value: {index: 46, type: Single}
              - key: [704, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 5056, 128]
                speed: 5523.87
                value: {index: 44, type: Single}
              - key: [704, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 5888, 128]
                speed: 5817.79
                value: {index: 44, type: Single}
              - key: [704, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 6784, 128]
                speed: 6079.18
                value: {index: 44, type: Single}
              - key: [704, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [704, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 4, 128]
                speed: 26.5328
                value: {index: 48, type: Single}
              - key: [1024, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1024, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1024, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1024, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1024, 64, 128]
                speed: 526.923
                value: {index: 46, type: Single}
              - key: [1024, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 128, 128]
                speed: 961.996
                value: {index: 46, type: Single}
              - key: [1024, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 256, 128]
                speed: 1792.44
                value: {index: 46, type: Single}
              - key: [1024, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 448, 128]
                speed: 2678.84
                value: {index: 46, type: Single}
              - key: [1024, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 704, 128]
                speed: 3314.46
                value: {index: 46, type: Single}
              - key: [1024, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1024, 128]
                speed: 3452.1
                value: {index: 46, type: Single}
              - key: [1024, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1408, 128]
                speed: 4295.84
                value: {index: 44, type: Single}
              - key: [1024, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1856, 128]
                speed: 4904.63
                value: {index: 45, type: Single}
              - key: [1024, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 2368, 128]
                speed: 4640.86
                value: {index: 44, type: Single}
              - key: [1024, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 2944, 128]
                speed: 4942.09
                value: {index: 44, type: Single}
              - key: [1024, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 3584, 128]
                speed: 5467.47
                value: {index: 44, type: Single}
              - key: [1024, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 4288, 128]
                speed: 5584.65
                value: {index: 44, type: Single}
              - key: [1024, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 5056, 128]
                speed: 6024.57
                value: {index: 44, type: Single}
              - key: [1024, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 5888, 128]
                speed: 6014.3
                value: {index: 44, type: Single}
              - key: [1024, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 6784, 128]
                speed: 6103.78
                value: {index: 44, type: Single}
              - key: [1024, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1024, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 4, 128]
                speed: 34.928
                value: {index: 49, type: Single}
              - key: [1408, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1408, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1408, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1408, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1408, 64, 128]
                speed: 649.456
                value: {index: 46, type: Single}
              - key: [1408, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 128, 128]
                speed: 1293.09
                value: {index: 46, type: Single}
              - key: [1408, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 256, 128]
                speed: 2192.84
                value: {index: 46, type: Single}
              - key: [1408, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 448, 128]
                speed: 3039.92
                value: {index: 46, type: Single}
              - key: [1408, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 704, 128]
                speed: 3501.04
                value: {index: 46, type: Single}
              - key: [1408, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1024, 128]
                speed: 4650.94
                value: {index: 44, type: Single}
              - key: [1408, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1408, 128]
                speed: 4664.62
                value: {index: 46, type: Single}
              - key: [1408, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1856, 128]
                speed: 5043.7
                value: {index: 44, type: Single}
              - key: [1408, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 2368, 128]
                speed: 5736.2
                value: {index: 44, type: Single}
              - key: [1408, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 2944, 128]
                speed: 5752.19
                value: {index: 44, type: Single}
              - key: [1408, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 3584, 128]
                speed: 5971.95
                value: {index: 44, type: Single}
              - key: [1408, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 4288, 128]
                speed: 6212.25
                value: {index: 44, type: Single}
              - key: [1408, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 5056, 128]
                speed: 6435.16
                value: {index: 44, type: Single}
              - key: [1408, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 5888, 128]
                speed: 6679.04
                value: {index: 44, type: Single}
              - key: [1408, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 6784, 128]
                speed: 6630.4
                value: {index: 44, type: Single}
              - key: [1408, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1408, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 4, 128]
                speed: 46.2206
                value: {index: 49, type: Single}
              - key: [1856, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1856, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1856, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1856, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [1856, 64, 128]
                speed: 837.244
                value: {index: 46, type: Single}
              - key: [1856, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 128, 128]
                speed: 1712.2
                value: {index: 46, type: Single}
              - key: [1856, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 256, 128]
                speed: 2923.91
                value: {index: 46, type: Single}
              - key: [1856, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 448, 128]
                speed: 3644.88
                value: {index: 43, type: Single}
              - key: [1856, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 704, 128]
                speed: 4284.01
                value: {index: 44, type: Single}
              - key: [1856, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1024, 128]
                speed: 4993.22
                value: {index: 45, type: Single}
              - key: [1856, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1408, 128]
                speed: 5194.07
                value: {index: 46, type: Single}
              - key: [1856, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1856, 128]
                speed: 5506.11
                value: {index: 46, type: Single}
              - key: [1856, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 2368, 128]
                speed: 5735.77
                value: {index: 46, type: Single}
              - key: [1856, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 2944, 128]
                speed: 6021.03
                value: {index: 44, type: Single}
              - key: [1856, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 3584, 128]
                speed: 6342.72
                value: {index: 44, type: Single}
              - key: [1856, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 4288, 128]
                speed: 6460.52
                value: {index: 44, type: Single}
              - key: [1856, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 5056, 128]
                speed: 6545.06
                value: {index: 44, type: Single}
              - key: [1856, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 5888, 128]
                speed: 6666.06
                value: {index: 44, type: Single}
              - key: [1856, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 6784, 128]
                speed: 6852.33
                value: {index: 44, type: Single}
              - key: [1856, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [1856, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 4, 128]
                speed: 59.2
                value: {index: 49, type: Single}
              - key: [2368, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [2368, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [2368, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [2368, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [2368, 64, 128]
                speed: 1072.93
                value: {index: 46, type: Single}
              - key: [2368, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 128, 128]
                speed: 2029.15
                value: {index: 46, type: Single}
              - key: [2368, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 256, 128]
                speed: 3201.1
                value: {index: 46, type: Single}
              - key: [2368, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 448, 128]
                speed: 3920.05
                value: {index: 46, type: Single}
              - key: [2368, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 704, 128]
                speed: 4630.76
                value: {index: 46, type: Single}
              - key: [2368, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1024, 128]
                speed: 5373.59
                value: {index: 44, type: Single}
              - key: [2368, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1408, 128]
                speed: 5645.15
                value: {index: 44, type: Single}
              - key: [2368, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1856, 128]
                speed: 5763.97
                value: {index: 46, type: Single}
              - key: [2368, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 2368, 128]
                speed: 6132.55
                value: {index: 44, type: Single}
              - key: [2368, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 2944, 128]
                speed: 6221.01
                value: {index: 44, type: Single}
              - key: [2368, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 3584, 128]
                speed: 6450.9
                value: {index: 44, type: Single}
              - key: [2368, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 4288, 128]
                speed: 6721.75
                value: {index: 44, type: Single}
              - key: [2368, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 5056, 128]
                speed: 6733.31
                value: {index: 44, type: Single}
              - key: [2368, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 5888, 128]
                speed: 6801.38
                value: {index: 44, type: Single}
              - key: [2368, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 6784, 128]
                speed: 6905.79
                value: {index: 44, type: Single}
              - key: [2368, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2368, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 4, 128]
                speed: 72.7475
                value: {index: 49, type: Single}
              - key: [2944, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [2944, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [2944, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [2944, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [2944, 64, 128]
                speed: 1357.95
                value: {index: 46, type: Single}
              - key: [2944, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 128, 128]
                speed: 2249.74
                value: {index: 46, type: Single}
              - key: [2944, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 256, 128]
                speed: 3084.05
                value: {index: 43, type: Single}
              - key: [2944, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 448, 128]
                speed: 4081.74
                value: {index: 46, type: Single}
              - key: [2944, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 704, 128]
                speed: 4792.08
                value: {index: 46, type: Single}
              - key: [2944, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1024, 128]
                speed: 5180.97
                value: {index: 46, type: Single}
              - key: [2944, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1408, 128]
                speed: 5757.19
                value: {index: 44, type: Single}
              - key: [2944, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1856, 128]
                speed: 6004.49
                value: {index: 44, type: Single}
              - key: [2944, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 2368, 128]
                speed: 6266.44
                value: {index: 44, type: Single}
              - key: [2944, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 2944, 128]
                speed: 6532.03
                value: {index: 44, type: Single}
              - key: [2944, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 3584, 128]
                speed: 6597.17
                value: {index: 45, type: Single}
              - key: [2944, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 4288, 128]
                speed: 6361.66
                value: {index: 45, type: Single}
              - key: [2944, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 5056, 128]
                speed: 6789.03
                value: {index: 44, type: Single}
              - key: [2944, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 5888, 128]
                speed: 6899.24
                value: {index: 45, type: Single}
              - key: [2944, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 6784, 128]
                speed: 6925.77
                value: {index: 44, type: Single}
              - key: [2944, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [2944, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 4, 128]
                speed: 88.2237
                value: {index: 48, type: Single}
              - key: [3584, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [3584, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [3584, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [3584, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [3584, 64, 128]
                speed: 1645.75
                value: {index: 46, type: Single}
              - key: [3584, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 128, 128]
                speed: 2749.08
                value: {index: 46, type: Single}
              - key: [3584, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 256, 128]
                speed: 3773.8
                value: {index: 43, type: Single}
              - key: [3584, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 448, 128]
                speed: 4303.2
                value: {index: 45, type: Single}
              - key: [3584, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 704, 128]
                speed: 4965.62
                value: {index: 44, type: Single}
              - key: [3584, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1024, 128]
                speed: 5624.58
                value: {index: 44, type: Single}
              - key: [3584, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1408, 128]
                speed: 5872.05
                value: {index: 44, type: Single}
              - key: [3584, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1856, 128]
                speed: 6260.64
                value: {index: 44, type: Single}
              - key: [3584, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 2368, 128]
                speed: 6354.28
                value: {index: 44, type: Single}
              - key: [3584, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 2944, 128]
                speed: 6551.09
                value: {index: 45, type: Single}
              - key: [3584, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 3584, 128]
                speed: 6551.54
                value: {index: 44, type: Single}
              - key: [3584, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 4288, 128]
                speed: 6562.38
                value: {index: 45, type: Single}
              - key: [3584, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 5056, 128]
                speed: 6813.93
                value: {index: 45, type: Single}
              - key: [3584, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 5888, 128]
                speed: 6876.64
                value: {index: 45, type: Single}
              - key: [3584, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 6784, 128]
                speed: 7005.64
                value: {index: 45, type: Single}
              - key: [3584, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [3584, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 4, 128]
                speed: 105.149
                value: {index: 49, type: Single}
              - key: [4288, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4288, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4288, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4288, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [4288, 64, 128]
                speed: 1876.46
                value: {index: 46, type: Single}
              - key: [4288, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 128, 128]
                speed: 2946.92
                value: {index: 46, type: Single}
              - key: [4288, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 256, 128]
                speed: 4019.14
                value: {index: 46, type: Single}
              - key: [4288, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 448, 128]
                speed: 4840.38
                value: {index: 46, type: Single}
              - key: [4288, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 704, 128]
                speed: 5439.19
                value: {index: 46, type: Single}
              - key: [4288, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1024, 128]
                speed: 5938.71
                value: {index: 44, type: Single}
              - key: [4288, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1408, 128]
                speed: 6075.5
                value: {index: 46, type: Single}
              - key: [4288, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1856, 128]
                speed: 6254.27
                value: {index: 44, type: Single}
              - key: [4288, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 2368, 128]
                speed: 6454.69
                value: {index: 45, type: Single}
              - key: [4288, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 2944, 128]
                speed: 6605.06
                value: {index: 44, type: Single}
              - key: [4288, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 3584, 128]
                speed: 6834.14
                value: {index: 45, type: Single}
              - key: [4288, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 4288, 128]
                speed: 6713.66
                value: {index: 44, type: Single}
              - key: [4288, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 5056, 128]
                speed: 6890.82
                value: {index: 45, type: Single}
              - key: [4288, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 5888, 128]
                speed: 6908.94
                value: {index: 45, type: Single}
              - key: [4288, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 6784, 128]
                speed: 6898.46
                value: {index: 45, type: Single}
              - key: [4288, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [4288, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 4, 128]
                speed: 120.294
                value: {index: 48, type: Single}
              - key: [5056, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [5056, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [5056, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [5056, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [5056, 64, 128]
                speed: 2166.25
                value: {index: 46, type: Single}
              - key: [5056, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 128, 128]
                speed: 3361.91
                value: {index: 46, type: Single}
              - key: [5056, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 256, 128]
                speed: 4166.88
                value: {index: 46, type: Single}
              - key: [5056, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 448, 128]
                speed: 5033.53
                value: {index: 46, type: Single}
              - key: [5056, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 704, 128]
                speed: 5545.39
                value: {index: 46, type: Single}
              - key: [5056, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1024, 128]
                speed: 5870.86
                value: {index: 44, type: Single}
              - key: [5056, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1408, 128]
                speed: 6156.86
                value: {index: 44, type: Single}
              - key: [5056, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1856, 128]
                speed: 6482.87
                value: {index: 45, type: Single}
              - key: [5056, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 2368, 128]
                speed: 6526.83
                value: {index: 45, type: Single}
              - key: [5056, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 2944, 128]
                speed: 6667.39
                value: {index: 45, type: Single}
              - key: [5056, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 3584, 128]
                speed: 6896.59
                value: {index: 45, type: Single}
              - key: [5056, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 4288, 128]
                speed: 6900.41
                value: {index: 45, type: Single}
              - key: [5056, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 5056, 128]
                speed: 6996.44
                value: {index: 45, type: Single}
              - key: [5056, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 5888, 128]
                speed: 7100.74
                value: {index: 45, type: Single}
              - key: [5056, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 6784, 128]
                speed: 7083.13
                value: {index: 45, type: Single}
              - key: [5056, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5056, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 4, 128]
                speed: 139.571
                value: {index: 49, type: Single}
              - key: [5888, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [5888, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [5888, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [5888, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [5888, 64, 128]
                speed: 2512.21
                value: {index: 46, type: Single}
              - key: [5888, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 128, 128]
                speed: 3340.34
                value: {index: 43, type: Single}
              - key: [5888, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 256, 128]
                speed: 4129.67
                value: {index: 46, type: Single}
              - key: [5888, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 448, 128]
                speed: 4768.98
                value: {index: 46, type: Single}
              - key: [5888, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 704, 128]
                speed: 5340.0
                value: {index: 45, type: Single}
              - key: [5888, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1024, 128]
                speed: 5911.11
                value: {index: 44, type: Single}
              - key: [5888, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1408, 128]
                speed: 6349.72
                value: {index: 44, type: Single}
              - key: [5888, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1856, 128]
                speed: 6421.26
                value: {index: 45, type: Single}
              - key: [5888, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 2368, 128]
                speed: 6617.78
                value: {index: 45, type: Single}
              - key: [5888, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 2944, 128]
                speed: 6911.28
                value: {index: 45, type: Single}
              - key: [5888, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 3584, 128]
                speed: 6930.28
                value: {index: 45, type: Single}
              - key: [5888, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 4288, 128]
                speed: 6845.71
                value: {index: 45, type: Single}
              - key: [5888, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 5056, 128]
                speed: 7070.18
                value: {index: 45, type: Single}
              - key: [5888, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 5888, 128]
                speed: 7096.06
                value: {index: 45, type: Single}
              - key: [5888, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 6784, 128]
                speed: 7209.37
                value: {index: 45, type: Single}
              - key: [5888, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [5888, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 4, 128]
                speed: 159.627
                value: {index: 48, type: Single}
              - key: [6784, 4, 256]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [6784, 4, 768]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [6784, 4, 1792]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [6784, 4, 3328]
                speed: 0.0
                value: {index: 50, type: Single}
              - key: [6784, 64, 128]
                speed: 2778.73
                value: {index: 46, type: Single}
              - key: [6784, 64, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 64, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 64, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 64, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 128, 128]
                speed: 3656.22
                value: {index: 43, type: Single}
              - key: [6784, 128, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 128, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 128, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 128, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 256, 128]
                speed: 4540.4
                value: {index: 45, type: Single}
              - key: [6784, 256, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 256, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 256, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 256, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 448, 128]
                speed: 5075.99
                value: {index: 46, type: Single}
              - key: [6784, 448, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 448, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 448, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 448, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 704, 128]
                speed: 5549.41
                value: {index: 44, type: Single}
              - key: [6784, 704, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 704, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 704, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 704, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1024, 128]
                speed: 5972.56
                value: {index: 44, type: Single}
              - key: [6784, 1024, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1024, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1024, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1024, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1408, 128]
                speed: 6475.88
                value: {index: 45, type: Single}
              - key: [6784, 1408, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1408, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1408, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1408, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1856, 128]
                speed: 6395.51
                value: {index: 45, type: Single}
              - key: [6784, 1856, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1856, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1856, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 1856, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 2368, 128]
                speed: 6758.7
                value: {index: 45, type: Single}
              - key: [6784, 2368, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 2368, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 2368, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 2368, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 2944, 128]
                speed: 6906.31
                value: {index: 45, type: Single}
              - key: [6784, 2944, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 2944, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 2944, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 2944, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 3584, 128]
                speed: 7165.66
                value: {index: 45, type: Single}
              - key: [6784, 3584, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 3584, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 3584, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 3584, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 4288, 128]
                speed: 6938.56
                value: {index: 45, type: Single}
              - key: [6784, 4288, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 4288, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 4288, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 4288, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 5056, 128]
                speed: 7069.45
                value: {index: 45, type: Single}
              - key: [6784, 5056, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 5056, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 5056, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 5056, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 5888, 128]
                speed: 7232.2
                value: {index: 45, type: Single}
              - key: [6784, 5888, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 5888, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 5888, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 5888, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 6784, 128]
                speed: 7323.38
                value: {index: 45, type: Single}
              - key: [6784, 6784, 256]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 6784, 768]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 6784, 1792]
                speed: 0.0
                value: {index: 47, type: Single}
              - key: [6784, 6784, 3328]
                speed: 0.0
                value: {index: 47, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
        Contraction_l_Alik_Bjlk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.106227
                value: {index: 33, type: Single}
              - key: [4, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 64, 128]
                speed: 1.69963
                value: {index: 32, type: Single}
              - key: [4, 64, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 64, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 64, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 64, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 128, 128]
                speed: 3.39926
                value: {index: 33, type: Single}
              - key: [4, 128, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 128, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 128, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 128, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 256, 128]
                speed: 6.77042
                value: {index: 33, type: Single}
              - key: [4, 256, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 256, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 256, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 256, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 448, 128]
                speed: 11.4691
                value: {index: 33, type: Single}
              - key: [4, 448, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 448, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 448, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 448, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 704, 128]
                speed: 17.0671
                value: {index: 33, type: Single}
              - key: [4, 704, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 704, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 704, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 704, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1024, 128]
                speed: 26.3203
                value: {index: 33, type: Single}
              - key: [4, 1024, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1024, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1024, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1024, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1408, 128]
                speed: 35.7596
                value: {index: 32, type: Single}
              - key: [4, 1408, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1408, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1408, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1408, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1856, 128]
                speed: 46.7665
                value: {index: 33, type: Single}
              - key: [4, 1856, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1856, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1856, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 1856, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 2368, 128]
                speed: 59.6676
                value: {index: 33, type: Single}
              - key: [4, 2368, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 2368, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 2368, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 2368, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 2944, 128]
                speed: 72.1918
                value: {index: 33, type: Single}
              - key: [4, 2944, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 2944, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 2944, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 2944, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 3584, 128]
                speed: 91.7527
                value: {index: 33, type: Single}
              - key: [4, 3584, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 3584, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 3584, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 3584, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 4288, 128]
                speed: 107.623
                value: {index: 33, type: Single}
              - key: [4, 4288, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 4288, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 4288, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 4288, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 5056, 128]
                speed: 124.458
                value: {index: 33, type: Single}
              - key: [4, 5056, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 5056, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 5056, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 5056, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 5888, 128]
                speed: 142.743
                value: {index: 33, type: Single}
              - key: [4, 5888, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 5888, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 5888, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 5888, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 6784, 128]
                speed: 159.627
                value: {index: 33, type: Single}
              - key: [4, 6784, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 6784, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 6784, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4, 6784, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [64, 4, 128]
                speed: 1.91407
                value: {index: 33, type: Single}
              - key: [64, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [64, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [64, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [64, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [64, 64, 128]
                speed: 19.6808
                value: {index: 28, type: Single}
              - key: [64, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 128, 128]
                speed: 45.9902
                value: {index: 27, type: Single}
              - key: [64, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 256, 128]
                speed: 92.6324
                value: {index: 27, type: Single}
              - key: [64, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 448, 128]
                speed: 163.844
                value: {index: 27, type: Single}
              - key: [64, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 704, 128]
                speed: 257.469
                value: {index: 27, type: Single}
              - key: [64, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1024, 128]
                speed: 373.167
                value: {index: 27, type: Single}
              - key: [64, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1408, 128]
                speed: 522.4
                value: {index: 27, type: Single}
              - key: [64, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1856, 128]
                speed: 678.781
                value: {index: 27, type: Single}
              - key: [64, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 2368, 128]
                speed: 789.864
                value: {index: 27, type: Single}
              - key: [64, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 2944, 128]
                speed: 960.101
                value: {index: 27, type: Single}
              - key: [64, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 3584, 128]
                speed: 1146.9
                value: {index: 27, type: Single}
              - key: [64, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 4288, 128]
                speed: 1322.59
                value: {index: 27, type: Single}
              - key: [64, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 5056, 128]
                speed: 1446.21
                value: {index: 27, type: Single}
              - key: [64, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 5888, 128]
                speed: 1629.54
                value: {index: 27, type: Single}
              - key: [64, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 6784, 128]
                speed: 1776.68
                value: {index: 27, type: Single}
              - key: [64, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [64, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 4, 128]
                speed: 3.99622
                value: {index: 32, type: Single}
              - key: [128, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [128, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [128, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [128, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [128, 64, 128]
                speed: 47.8365
                value: {index: 30, type: Single}
              - key: [128, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 128, 128]
                speed: 92.6324
                value: {index: 27, type: Single}
              - key: [128, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 256, 128]
                speed: 195.634
                value: {index: 27, type: Single}
              - key: [128, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 448, 128]
                speed: 332.429
                value: {index: 27, type: Single}
              - key: [128, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 704, 128]
                speed: 533.997
                value: {index: 27, type: Single}
              - key: [128, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1024, 128]
                speed: 776.723
                value: {index: 27, type: Single}
              - key: [128, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1408, 128]
                speed: 961.195
                value: {index: 27, type: Single}
              - key: [128, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1856, 128]
                speed: 1176.81
                value: {index: 27, type: Single}
              - key: [128, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 2368, 128]
                speed: 1409.79
                value: {index: 27, type: Single}
              - key: [128, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 2944, 128]
                speed: 1647.35
                value: {index: 27, type: Single}
              - key: [128, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 3584, 128]
                speed: 1886.9
                value: {index: 27, type: Single}
              - key: [128, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 4288, 128]
                speed: 2173.75
                value: {index: 27, type: Single}
              - key: [128, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 5056, 128]
                speed: 2430.71
                value: {index: 27, type: Single}
              - key: [128, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 5888, 128]
                speed: 2544.05
                value: {index: 27, type: Single}
              - key: [128, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 6784, 128]
                speed: 2703.07
                value: {index: 29, type: Single}
              - key: [128, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [128, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 4, 128]
                speed: 8.27501
                value: {index: 32, type: Single}
              - key: [256, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [256, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [256, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [256, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [256, 64, 128]
                speed: 104.858
                value: {index: 30, type: Single}
              - key: [256, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 128, 128]
                speed: 211.406
                value: {index: 27, type: Single}
              - key: [256, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 256, 128]
                speed: 419.43
                value: {index: 27, type: Single}
              - key: [256, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 448, 128]
                speed: 739.941
                value: {index: 27, type: Single}
              - key: [256, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 704, 128]
                speed: 1026.19
                value: {index: 27, type: Single}
              - key: [256, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1024, 128]
                speed: 1402.78
                value: {index: 27, type: Single}
              - key: [256, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1408, 128]
                speed: 1802.24
                value: {index: 27, type: Single}
              - key: [256, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1856, 128]
                speed: 2172.05
                value: {index: 27, type: Single}
              - key: [256, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 2368, 128]
                speed: 2406.78
                value: {index: 27, type: Single}
              - key: [256, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 2944, 128]
                speed: 2679.73
                value: {index: 29, type: Single}
              - key: [256, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 3584, 128]
                speed: 3084.09
                value: {index: 29, type: Single}
              - key: [256, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 4288, 128]
                speed: 3119.69
                value: {index: 29, type: Single}
              - key: [256, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 5056, 128]
                speed: 3738.2
                value: {index: 29, type: Single}
              - key: [256, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 5888, 128]
                speed: 3475.14
                value: {index: 27, type: Single}
              - key: [256, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 6784, 128]
                speed: 3680.49
                value: {index: 27, type: Single}
              - key: [256, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [256, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 4, 128]
                speed: 14.8564
                value: {index: 33, type: Single}
              - key: [448, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [448, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [448, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [448, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [448, 64, 128]
                speed: 210.437
                value: {index: 27, type: Single}
              - key: [448, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 128, 128]
                speed: 426.746
                value: {index: 28, type: Single}
              - key: [448, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 256, 128]
                speed: 878.021
                value: {index: 27, type: Single}
              - key: [448, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 448, 128]
                speed: 1459.71
                value: {index: 27, type: Single}
              - key: [448, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 704, 128]
                speed: 2129.23
                value: {index: 27, type: Single}
              - key: [448, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1024, 128]
                speed: 2790.89
                value: {index: 27, type: Single}
              - key: [448, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1408, 128]
                speed: 3214.19
                value: {index: 27, type: Single}
              - key: [448, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1856, 128]
                speed: 3446.58
                value: {index: 27, type: Single}
              - key: [448, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 2368, 128]
                speed: 3788.8
                value: {index: 27, type: Single}
              - key: [448, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 2944, 128]
                speed: 4387.29
                value: {index: 29, type: Single}
              - key: [448, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 3584, 128]
                speed: 4361.7
                value: {index: 28, type: Single}
              - key: [448, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 4288, 128]
                speed: 4728.72
                value: {index: 27, type: Single}
              - key: [448, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 5056, 128]
                speed: 5170.0
                value: {index: 29, type: Single}
              - key: [448, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 5888, 128]
                speed: 5275.73
                value: {index: 29, type: Single}
              - key: [448, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 6784, 128]
                speed: 5427.28
                value: {index: 29, type: Single}
              - key: [448, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [448, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 4, 128]
                speed: 23.3458
                value: {index: 32, type: Single}
              - key: [704, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [704, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [704, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [704, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [704, 64, 128]
                speed: 326.197
                value: {index: 27, type: Single}
              - key: [704, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 128, 128]
                speed: 670.601
                value: {index: 27, type: Single}
              - key: [704, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 256, 128]
                speed: 1353.8
                value: {index: 27, type: Single}
              - key: [704, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 448, 128]
                speed: 2093.89
                value: {index: 27, type: Single}
              - key: [704, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 704, 128]
                speed: 2669.99
                value: {index: 27, type: Single}
              - key: [704, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1024, 128]
                speed: 3324.02
                value: {index: 27, type: Single}
              - key: [704, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1408, 128]
                speed: 3679.8
                value: {index: 27, type: Single}
              - key: [704, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1856, 128]
                speed: 3871.52
                value: {index: 29, type: Single}
              - key: [704, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 2368, 128]
                speed: 4167.72
                value: {index: 28, type: Single}
              - key: [704, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 2944, 128]
                speed: 4764.59
                value: {index: 29, type: Single}
              - key: [704, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 3584, 128]
                speed: 5103.77
                value: {index: 29, type: Single}
              - key: [704, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 4288, 128]
                speed: 5408.78
                value: {index: 29, type: Single}
              - key: [704, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 5056, 128]
                speed: 5741.08
                value: {index: 29, type: Single}
              - key: [704, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 5888, 128]
                speed: 6062.45
                value: {index: 29, type: Single}
              - key: [704, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 6784, 128]
                speed: 6357.39
                value: {index: 29, type: Single}
              - key: [704, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [704, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 4, 128]
                speed: 33.1
                value: {index: 32, type: Single}
              - key: [1024, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1024, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1024, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1024, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1024, 64, 128]
                speed: 480.998
                value: {index: 27, type: Single}
              - key: [1024, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 128, 128]
                speed: 1018.03
                value: {index: 27, type: Single}
              - key: [1024, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 256, 128]
                speed: 1800.13
                value: {index: 27, type: Single}
              - key: [1024, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 448, 128]
                speed: 2769.82
                value: {index: 27, type: Single}
              - key: [1024, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 704, 128]
                speed: 3432.9
                value: {index: 27, type: Single}
              - key: [1024, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1024, 128]
                speed: 3473.54
                value: {index: 29, type: Single}
              - key: [1024, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1408, 128]
                speed: 4766.32
                value: {index: 29, type: Single}
              - key: [1024, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1856, 128]
                speed: 4819.18
                value: {index: 29, type: Single}
              - key: [1024, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 2368, 128]
                speed: 4904.92
                value: {index: 29, type: Single}
              - key: [1024, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 2944, 128]
                speed: 5115.07
                value: {index: 29, type: Single}
              - key: [1024, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 3584, 128]
                speed: 5734.47
                value: {index: 29, type: Single}
              - key: [1024, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 4288, 128]
                speed: 5787.09
                value: {index: 29, type: Single}
              - key: [1024, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 5056, 128]
                speed: 6275.63
                value: {index: 29, type: Single}
              - key: [1024, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 5888, 128]
                speed: 6268.37
                value: {index: 29, type: Single}
              - key: [1024, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 6784, 128]
                speed: 6458.47
                value: {index: 29, type: Single}
              - key: [1024, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1024, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 4, 128]
                speed: 45.7436
                value: {index: 33, type: Single}
              - key: [1408, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1408, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1408, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1408, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1408, 64, 128]
                speed: 673.735
                value: {index: 27, type: Single}
              - key: [1408, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 128, 128]
                speed: 1334.99
                value: {index: 27, type: Single}
              - key: [1408, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 256, 128]
                speed: 2244.03
                value: {index: 27, type: Single}
              - key: [1408, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 448, 128]
                speed: 3058.35
                value: {index: 27, type: Single}
              - key: [1408, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 704, 128]
                speed: 3516.61
                value: {index: 27, type: Single}
              - key: [1408, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1024, 128]
                speed: 4846.42
                value: {index: 29, type: Single}
              - key: [1408, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1408, 128]
                speed: 4657.81
                value: {index: 27, type: Single}
              - key: [1408, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1856, 128]
                speed: 5272.71
                value: {index: 29, type: Single}
              - key: [1408, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 2368, 128]
                speed: 5967.23
                value: {index: 29, type: Single}
              - key: [1408, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 2944, 128]
                speed: 6056.91
                value: {index: 29, type: Single}
              - key: [1408, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 3584, 128]
                speed: 6158.74
                value: {index: 29, type: Single}
              - key: [1408, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 4288, 128]
                speed: 6452.96
                value: {index: 29, type: Single}
              - key: [1408, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 5056, 128]
                speed: 6680.52
                value: {index: 29, type: Single}
              - key: [1408, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 5888, 128]
                speed: 6948.46
                value: {index: 29, type: Single}
              - key: [1408, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 6784, 128]
                speed: 6890.52
                value: {index: 29, type: Single}
              - key: [1408, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1408, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 4, 128]
                speed: 60.2964
                value: {index: 32, type: Single}
              - key: [1856, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1856, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1856, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1856, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [1856, 64, 128]
                speed: 871.809
                value: {index: 27, type: Single}
              - key: [1856, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 128, 128]
                speed: 1743.62
                value: {index: 27, type: Single}
              - key: [1856, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 256, 128]
                speed: 2901.59
                value: {index: 27, type: Single}
              - key: [1856, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 448, 128]
                speed: 3501.0
                value: {index: 27, type: Single}
              - key: [1856, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 704, 128]
                speed: 4419.93
                value: {index: 29, type: Single}
              - key: [1856, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1024, 128]
                speed: 4976.93
                value: {index: 29, type: Single}
              - key: [1856, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1408, 128]
                speed: 5272.71
                value: {index: 29, type: Single}
              - key: [1856, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1856, 128]
                speed: 5606.97
                value: {index: 29, type: Single}
              - key: [1856, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 2368, 128]
                speed: 5899.4
                value: {index: 29, type: Single}
              - key: [1856, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 2944, 128]
                speed: 6231.35
                value: {index: 29, type: Single}
              - key: [1856, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 3584, 128]
                speed: 6557.71
                value: {index: 29, type: Single}
              - key: [1856, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 4288, 128]
                speed: 6680.89
                value: {index: 29, type: Single}
              - key: [1856, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 5056, 128]
                speed: 6787.73
                value: {index: 29, type: Single}
              - key: [1856, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 5888, 128]
                speed: 6935.81
                value: {index: 29, type: Single}
              - key: [1856, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 6784, 128]
                speed: 7118.72
                value: {index: 29, type: Single}
              - key: [1856, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [1856, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 4, 128]
                speed: 72.1676
                value: {index: 32, type: Single}
              - key: [2368, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [2368, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [2368, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [2368, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [2368, 64, 128]
                speed: 1063.52
                value: {index: 27, type: Single}
              - key: [2368, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 128, 128]
                speed: 2099.42
                value: {index: 27, type: Single}
              - key: [2368, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 256, 128]
                speed: 3159.45
                value: {index: 27, type: Single}
              - key: [2368, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 448, 128]
                speed: 3911.08
                value: {index: 27, type: Single}
              - key: [2368, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 704, 128]
                speed: 4614.78
                value: {index: 27, type: Single}
              - key: [2368, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1024, 128]
                speed: 5518.87
                value: {index: 29, type: Single}
              - key: [2368, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1408, 128]
                speed: 5875.22
                value: {index: 29, type: Single}
              - key: [2368, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1856, 128]
                speed: 5894.46
                value: {index: 29, type: Single}
              - key: [2368, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 2368, 128]
                speed: 6385.74
                value: {index: 29, type: Single}
              - key: [2368, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 2944, 128]
                speed: 6519.2
                value: {index: 29, type: Single}
              - key: [2368, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 3584, 128]
                speed: 6695.85
                value: {index: 29, type: Single}
              - key: [2368, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 4288, 128]
                speed: 6978.76
                value: {index: 29, type: Single}
              - key: [2368, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 5056, 128]
                speed: 6983.72
                value: {index: 29, type: Single}
              - key: [2368, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 5888, 128]
                speed: 7075.38
                value: {index: 29, type: Single}
              - key: [2368, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 6784, 128]
                speed: 7218.04
                value: {index: 29, type: Single}
              - key: [2368, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2368, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 4, 128]
                speed: 89.7246
                value: {index: 33, type: Single}
              - key: [2944, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [2944, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [2944, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [2944, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [2944, 64, 128]
                speed: 1328.04
                value: {index: 27, type: Single}
              - key: [2944, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 128, 128]
                speed: 2421.41
                value: {index: 27, type: Single}
              - key: [2944, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 256, 128]
                speed: 3173.32
                value: {index: 29, type: Single}
              - key: [2944, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 448, 128]
                speed: 4004.33
                value: {index: 27, type: Single}
              - key: [2944, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 704, 128]
                speed: 4819.99
                value: {index: 29, type: Single}
              - key: [2944, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1024, 128]
                speed: 5242.95
                value: {index: 29, type: Single}
              - key: [2944, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1408, 128]
                speed: 5985.85
                value: {index: 29, type: Single}
              - key: [2944, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1856, 128]
                speed: 6222.48
                value: {index: 29, type: Single}
              - key: [2944, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 2368, 128]
                speed: 6481.32
                value: {index: 29, type: Single}
              - key: [2944, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 2944, 128]
                speed: 6811.17
                value: {index: 29, type: Single}
              - key: [2944, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 3584, 128]
                speed: 6862.7
                value: {index: 29, type: Single}
              - key: [2944, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 4288, 128]
                speed: 6884.24
                value: {index: 29, type: Single}
              - key: [2944, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 5056, 128]
                speed: 7048.24
                value: {index: 29, type: Single}
              - key: [2944, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 5888, 128]
                speed: 7115.21
                value: {index: 29, type: Single}
              - key: [2944, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 6784, 128]
                speed: 7241.26
                value: {index: 29, type: Single}
              - key: [2944, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [2944, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 4, 128]
                speed: 109.753
                value: {index: 32, type: Single}
              - key: [3584, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [3584, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [3584, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [3584, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [3584, 64, 128]
                speed: 1595.66
                value: {index: 27, type: Single}
              - key: [3584, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 128, 128]
                speed: 2801.54
                value: {index: 27, type: Single}
              - key: [3584, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 256, 128]
                speed: 3764.12
                value: {index: 29, type: Single}
              - key: [3584, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 448, 128]
                speed: 4339.59
                value: {index: 29, type: Single}
              - key: [3584, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 704, 128]
                speed: 5071.71
                value: {index: 29, type: Single}
              - key: [3584, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1024, 128]
                speed: 5706.57
                value: {index: 29, type: Single}
              - key: [3584, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1408, 128]
                speed: 6093.67
                value: {index: 29, type: Single}
              - key: [3584, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1856, 128]
                speed: 6509.58
                value: {index: 29, type: Single}
              - key: [3584, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 2368, 128]
                speed: 6630.46
                value: {index: 29, type: Single}
              - key: [3584, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 2944, 128]
                speed: 6840.46
                value: {index: 29, type: Single}
              - key: [3584, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 3584, 128]
                speed: 6846.2
                value: {index: 29, type: Single}
              - key: [3584, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 4288, 128]
                speed: 6987.6
                value: {index: 29, type: Single}
              - key: [3584, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 5056, 128]
                speed: 7020.19
                value: {index: 29, type: Single}
              - key: [3584, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 5888, 128]
                speed: 7203.85
                value: {index: 29, type: Single}
              - key: [3584, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 6784, 128]
                speed: 7196.18
                value: {index: 29, type: Single}
              - key: [3584, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [3584, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 4, 128]
                speed: 119.843
                value: {index: 33, type: Single}
              - key: [4288, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4288, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4288, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4288, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [4288, 64, 128]
                speed: 1868.52
                value: {index: 27, type: Single}
              - key: [4288, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 128, 128]
                speed: 2937.06
                value: {index: 27, type: Single}
              - key: [4288, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 256, 128]
                speed: 3894.38
                value: {index: 27, type: Single}
              - key: [4288, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 448, 128]
                speed: 4795.11
                value: {index: 27, type: Single}
              - key: [4288, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 704, 128]
                speed: 5348.88
                value: {index: 29, type: Single}
              - key: [4288, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1024, 128]
                speed: 6046.07
                value: {index: 29, type: Single}
              - key: [4288, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1408, 128]
                speed: 6297.34
                value: {index: 29, type: Single}
              - key: [4288, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1856, 128]
                speed: 6506.78
                value: {index: 29, type: Single}
              - key: [4288, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 2368, 128]
                speed: 6593.56
                value: {index: 29, type: Single}
              - key: [4288, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 2944, 128]
                speed: 6933.87
                value: {index: 29, type: Single}
              - key: [4288, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 3584, 128]
                speed: 6948.11
                value: {index: 29, type: Single}
              - key: [4288, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 4288, 128]
                speed: 7048.26
                value: {index: 29, type: Single}
              - key: [4288, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 5056, 128]
                speed: 7070.64
                value: {index: 29, type: Single}
              - key: [4288, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 5888, 128]
                speed: 7153.67
                value: {index: 29, type: Single}
              - key: [4288, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 6784, 128]
                speed: 7174.98
                value: {index: 29, type: Single}
              - key: [4288, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [4288, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 4, 128]
                speed: 137.116
                value: {index: 33, type: Single}
              - key: [5056, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [5056, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [5056, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [5056, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [5056, 64, 128]
                speed: 2157.23
                value: {index: 27, type: Single}
              - key: [5056, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 128, 128]
                speed: 3287.2
                value: {index: 27, type: Single}
              - key: [5056, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 256, 128]
                speed: 4378.36
                value: {index: 29, type: Single}
              - key: [5056, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 448, 128]
                speed: 4904.16
                value: {index: 27, type: Single}
              - key: [5056, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 704, 128]
                speed: 5605.46
                value: {index: 29, type: Single}
              - key: [5056, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1024, 128]
                speed: 6064.29
                value: {index: 29, type: Single}
              - key: [5056, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1408, 128]
                speed: 6479.11
                value: {index: 29, type: Single}
              - key: [5056, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1856, 128]
                speed: 6605.55
                value: {index: 29, type: Single}
              - key: [5056, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 2368, 128]
                speed: 6646.91
                value: {index: 29, type: Single}
              - key: [5056, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 2944, 128]
                speed: 6917.22
                value: {index: 29, type: Single}
              - key: [5056, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 3584, 128]
                speed: 7073.28
                value: {index: 29, type: Single}
              - key: [5056, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 4288, 128]
                speed: 7059.13
                value: {index: 29, type: Single}
              - key: [5056, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 5056, 128]
                speed: 7102.17
                value: {index: 29, type: Single}
              - key: [5056, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 5888, 128]
                speed: 7185.4
                value: {index: 29, type: Single}
              - key: [5056, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 6784, 128]
                speed: 7254.51
                value: {index: 29, type: Single}
              - key: [5056, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5056, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 4, 128]
                speed: 155.72
                value: {index: 32, type: Single}
              - key: [5888, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [5888, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [5888, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [5888, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [5888, 64, 128]
                speed: 2176.65
                value: {index: 27, type: Single}
              - key: [5888, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 128, 128]
                speed: 3132.11
                value: {index: 27, type: Single}
              - key: [5888, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 256, 128]
                speed: 4033.03
                value: {index: 29, type: Single}
              - key: [5888, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 448, 128]
                speed: 4758.26
                value: {index: 28, type: Single}
              - key: [5888, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 704, 128]
                speed: 5540.78
                value: {index: 29, type: Single}
              - key: [5888, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1024, 128]
                speed: 6113.44
                value: {index: 29, type: Single}
              - key: [5888, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1408, 128]
                speed: 6716.26
                value: {index: 29, type: Single}
              - key: [5888, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1856, 128]
                speed: 6712.16
                value: {index: 29, type: Single}
              - key: [5888, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 2368, 128]
                speed: 6725.55
                value: {index: 29, type: Single}
              - key: [5888, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 2944, 128]
                speed: 6972.12
                value: {index: 29, type: Single}
              - key: [5888, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 3584, 128]
                speed: 7115.8
                value: {index: 29, type: Single}
              - key: [5888, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 4288, 128]
                speed: 7010.9
                value: {index: 29, type: Single}
              - key: [5888, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 5056, 128]
                speed: 7076.51
                value: {index: 29, type: Single}
              - key: [5888, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 5888, 128]
                speed: 7192.71
                value: {index: 29, type: Single}
              - key: [5888, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 6784, 128]
                speed: 7194.79
                value: {index: 29, type: Single}
              - key: [5888, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [5888, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 4, 128]
                speed: 175.075
                value: {index: 33, type: Single}
              - key: [6784, 4, 256]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [6784, 4, 768]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [6784, 4, 1792]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [6784, 4, 3328]
                speed: 0.0
                value: {index: 34, type: Single}
              - key: [6784, 64, 128]
                speed: 2454.71
                value: {index: 28, type: Single}
              - key: [6784, 64, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 64, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 64, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 64, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 128, 128]
                speed: 3608.74
                value: {index: 27, type: Single}
              - key: [6784, 128, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 128, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 128, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 128, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 256, 128]
                speed: 4577.85
                value: {index: 29, type: Single}
              - key: [6784, 256, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 256, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 256, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 256, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 448, 128]
                speed: 5108.02
                value: {index: 28, type: Single}
              - key: [6784, 448, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 448, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 448, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 448, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 704, 128]
                speed: 5793.46
                value: {index: 29, type: Single}
              - key: [6784, 704, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 704, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 704, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 704, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1024, 128]
                speed: 6209.51
                value: {index: 29, type: Single}
              - key: [6784, 1024, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1024, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1024, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1024, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1408, 128]
                speed: 6659.31
                value: {index: 29, type: Single}
              - key: [6784, 1408, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1408, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1408, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1408, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1856, 128]
                speed: 6662.01
                value: {index: 29, type: Single}
              - key: [6784, 1856, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1856, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1856, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 1856, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 2368, 128]
                speed: 6823.33
                value: {index: 29, type: Single}
              - key: [6784, 2368, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 2368, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 2368, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 2368, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 2944, 128]
                speed: 7020.14
                value: {index: 29, type: Single}
              - key: [6784, 2944, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 2944, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 2944, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 2944, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 3584, 128]
                speed: 7097.71
                value: {index: 29, type: Single}
              - key: [6784, 3584, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 3584, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 3584, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 3584, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 4288, 128]
                speed: 7058.55
                value: {index: 29, type: Single}
              - key: [6784, 4288, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 4288, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 4288, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 4288, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 5056, 128]
                speed: 7114.39
                value: {index: 29, type: Single}
              - key: [6784, 5056, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 5056, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 5056, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 5056, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 5888, 128]
                speed: 7172.98
                value: {index: 29, type: Single}
              - key: [6784, 5888, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 5888, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 5888, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 5888, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 6784, 128]
                speed: 7231.36
                value: {index: 29, type: Single}
              - key: [6784, 6784, 256]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 6784, 768]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 6784, 1792]
                speed: 0.0
                value: {index: 31, type: Single}
              - key: [6784, 6784, 3328]
                speed: 0.0
                value: {index: 31, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
        Contraction_l_Alik_Bljk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.111307
                value: {index: 58, type: Single}
              - key: [4, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 64, 128]
                speed: 2.10058
                value: {index: 57, type: Single}
              - key: [4, 64, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 64, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 64, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 64, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 128, 128]
                speed: 4.11671
                value: {index: 57, type: Single}
              - key: [4, 128, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 128, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 128, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 128, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 256, 128]
                speed: 8.31675
                value: {index: 58, type: Single}
              - key: [4, 256, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 256, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 256, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 256, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 448, 128]
                speed: 13.3362
                value: {index: 57, type: Single}
              - key: [4, 448, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 448, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 448, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 448, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 704, 128]
                speed: 20.8599
                value: {index: 57, type: Single}
              - key: [4, 704, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 704, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 704, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 704, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1024, 128]
                speed: 31.6609
                value: {index: 58, type: Single}
              - key: [4, 1024, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1024, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1024, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1024, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1408, 128]
                speed: 44.6113
                value: {index: 57, type: Single}
              - key: [4, 1408, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1408, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1408, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1408, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1856, 128]
                speed: 55.7688
                value: {index: 58, type: Single}
              - key: [4, 1856, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1856, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1856, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 1856, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 2368, 128]
                speed: 71.1533
                value: {index: 57, type: Single}
              - key: [4, 2368, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 2368, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 2368, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 2368, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 2944, 128]
                speed: 87.2322
                value: {index: 58, type: Single}
              - key: [4, 2944, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 2944, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 2944, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 2944, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 3584, 128]
                speed: 100.606
                value: {index: 57, type: Single}
              - key: [4, 3584, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 3584, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 3584, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 3584, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 4288, 128]
                speed: 112.475
                value: {index: 58, type: Single}
              - key: [4, 4288, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 4288, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 4288, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 4288, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 5056, 128]
                speed: 128.41
                value: {index: 57, type: Single}
              - key: [4, 5056, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 5056, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 5056, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 5056, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 5888, 128]
                speed: 138.544
                value: {index: 58, type: Single}
              - key: [4, 5888, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 5888, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 5888, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 5888, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 6784, 128]
                speed: 151.284
                value: {index: 57, type: Single}
              - key: [4, 6784, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 6784, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 6784, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4, 6784, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [64, 4, 128]
                speed: 2.27563
                value: {index: 58, type: Single}
              - key: [64, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [64, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [64, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [64, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [64, 64, 128]
                speed: 19.6216
                value: {index: 53, type: Single}
              - key: [64, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 128, 128]
                speed: 46.9803
                value: {index: 51, type: Single}
              - key: [64, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 256, 128]
                speed: 93.6249
                value: {index: 51, type: Single}
              - key: [64, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 448, 128]
                speed: 168.045
                value: {index: 51, type: Single}
              - key: [64, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 704, 128]
                speed: 253.837
                value: {index: 51, type: Single}
              - key: [64, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1024, 128]
                speed: 375.842
                value: {index: 53, type: Single}
              - key: [64, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1408, 128]
                speed: 520.514
                value: {index: 51, type: Single}
              - key: [64, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1856, 128]
                speed: 639.927
                value: {index: 51, type: Single}
              - key: [64, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 2368, 128]
                speed: 792.445
                value: {index: 51, type: Single}
              - key: [64, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 2944, 128]
                speed: 954.024
                value: {index: 51, type: Single}
              - key: [64, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 3584, 128]
                speed: 1102.13
                value: {index: 51, type: Single}
              - key: [64, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 4288, 128]
                speed: 1229.97
                value: {index: 51, type: Single}
              - key: [64, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 5056, 128]
                speed: 1395.53
                value: {index: 51, type: Single}
              - key: [64, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 5888, 128]
                speed: 1477.8
                value: {index: 51, type: Single}
              - key: [64, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 6784, 128]
                speed: 1638.42
                value: {index: 53, type: Single}
              - key: [64, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [64, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 4, 128]
                speed: 4.73543
                value: {index: 57, type: Single}
              - key: [128, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [128, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [128, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [128, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [128, 64, 128]
                speed: 48.1893
                value: {index: 51, type: Single}
              - key: [128, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 128, 128]
                speed: 93.2918
                value: {index: 51, type: Single}
              - key: [128, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 256, 128]
                speed: 190.655
                value: {index: 51, type: Single}
              - key: [128, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 448, 128]
                speed: 343.643
                value: {index: 51, type: Single}
              - key: [128, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 704, 128]
                speed: 514.937
                value: {index: 51, type: Single}
              - key: [128, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1024, 128]
                speed: 710.914
                value: {index: 51, type: Single}
              - key: [128, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1408, 128]
                speed: 930.207
                value: {index: 51, type: Single}
              - key: [128, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1856, 128]
                speed: 1144.93
                value: {index: 51, type: Single}
              - key: [128, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 2368, 128]
                speed: 1377.77
                value: {index: 51, type: Single}
              - key: [128, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 2944, 128]
                speed: 1616.46
                value: {index: 51, type: Single}
              - key: [128, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 3584, 128]
                speed: 1848.9
                value: {index: 51, type: Single}
              - key: [128, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 4288, 128]
                speed: 2056.66
                value: {index: 51, type: Single}
              - key: [128, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 5056, 128]
                speed: 2321.71
                value: {index: 51, type: Single}
              - key: [128, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 5888, 128]
                speed: 2310.11
                value: {index: 53, type: Single}
              - key: [128, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 6784, 128]
                speed: 2601.83
                value: {index: 53, type: Single}
              - key: [128, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [128, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 4, 128]
                speed: 9.10254
                value: {index: 57, type: Single}
              - key: [256, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [256, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [256, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [256, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [256, 64, 128]
                speed: 95.3251
                value: {index: 51, type: Single}
              - key: [256, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 128, 128]
                speed: 206.418
                value: {index: 53, type: Single}
              - key: [256, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 256, 128]
                speed: 411.206
                value: {index: 53, type: Single}
              - key: [256, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 448, 128]
                speed: 731.097
                value: {index: 51, type: Single}
              - key: [256, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 704, 128]
                speed: 1011.81
                value: {index: 53, type: Single}
              - key: [256, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1024, 128]
                speed: 1314.85
                value: {index: 51, type: Single}
              - key: [256, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1408, 128]
                speed: 1742.38
                value: {index: 51, type: Single}
              - key: [256, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1856, 128]
                speed: 2088.55
                value: {index: 51, type: Single}
              - key: [256, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 2368, 128]
                speed: 2276.87
                value: {index: 51, type: Single}
              - key: [256, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 2944, 128]
                speed: 2406.94
                value: {index: 53, type: Single}
              - key: [256, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 3584, 128]
                speed: 2839.51
                value: {index: 53, type: Single}
              - key: [256, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 4288, 128]
                speed: 2981.98
                value: {index: 51, type: Single}
              - key: [256, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 5056, 128]
                speed: 3240.94
                value: {index: 53, type: Single}
              - key: [256, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 5888, 128]
                speed: 3387.28
                value: {index: 53, type: Single}
              - key: [256, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 6784, 128]
                speed: 3405.33
                value: {index: 53, type: Single}
              - key: [256, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [256, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 4, 128]
                speed: 14.7794
                value: {index: 57, type: Single}
              - key: [448, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [448, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [448, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [448, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [448, 64, 128]
                speed: 182.049
                value: {index: 51, type: Single}
              - key: [448, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 128, 128]
                speed: 422.825
                value: {index: 51, type: Single}
              - key: [448, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 256, 128]
                speed: 845.65
                value: {index: 51, type: Single}
              - key: [448, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 448, 128]
                speed: 1300.14
                value: {index: 51, type: Single}
              - key: [448, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 704, 128]
                speed: 2051.38
                value: {index: 51, type: Single}
              - key: [448, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1024, 128]
                speed: 2584.58
                value: {index: 51, type: Single}
              - key: [448, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1408, 128]
                speed: 2819.2
                value: {index: 53, type: Single}
              - key: [448, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1856, 128]
                speed: 3309.46
                value: {index: 52, type: Single}
              - key: [448, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 2368, 128]
                speed: 3394.76
                value: {index: 52, type: Single}
              - key: [448, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 2944, 128]
                speed: 3638.42
                value: {index: 51, type: Single}
              - key: [448, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 3584, 128]
                speed: 3794.73
                value: {index: 53, type: Single}
              - key: [448, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 4288, 128]
                speed: 4159.22
                value: {index: 55, type: Single}
              - key: [448, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 5056, 128]
                speed: 4682.39
                value: {index: 52, type: Single}
              - key: [448, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 5888, 128]
                speed: 4942.13
                value: {index: 52, type: Single}
              - key: [448, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 6784, 128]
                speed: 4772.13
                value: {index: 53, type: Single}
              - key: [448, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [448, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 4, 128]
                speed: 23.2247
                value: {index: 57, type: Single}
              - key: [704, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [704, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [704, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [704, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [704, 64, 128]
                speed: 324.737
                value: {index: 51, type: Single}
              - key: [704, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 128, 128]
                speed: 670.62
                value: {index: 51, type: Single}
              - key: [704, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 256, 128]
                speed: 1275.96
                value: {index: 51, type: Single}
              - key: [704, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 448, 128]
                speed: 2018.56
                value: {index: 51, type: Single}
              - key: [704, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 704, 128]
                speed: 2381.38
                value: {index: 51, type: Single}
              - key: [704, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1024, 128]
                speed: 3142.92
                value: {index: 53, type: Single}
              - key: [704, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1408, 128]
                speed: 3178.3
                value: {index: 51, type: Single}
              - key: [704, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1856, 128]
                speed: 4091.19
                value: {index: 52, type: Single}
              - key: [704, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 2368, 128]
                speed: 3899.62
                value: {index: 53, type: Single}
              - key: [704, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 2944, 128]
                speed: 4058.93
                value: {index: 53, type: Single}
              - key: [704, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 3584, 128]
                speed: 4571.97
                value: {index: 53, type: Single}
              - key: [704, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 4288, 128]
                speed: 4873.93
                value: {index: 52, type: Single}
              - key: [704, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 5056, 128]
                speed: 5317.6
                value: {index: 52, type: Single}
              - key: [704, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 5888, 128]
                speed: 5153.31
                value: {index: 53, type: Single}
              - key: [704, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 6784, 128]
                speed: 5732.61
                value: {index: 52, type: Single}
              - key: [704, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [704, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 4, 128]
                speed: 33.4367
                value: {index: 57, type: Single}
              - key: [1024, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1024, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1024, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1024, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1024, 64, 128]
                speed: 474.482
                value: {index: 51, type: Single}
              - key: [1024, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 128, 128]
                speed: 975.448
                value: {index: 51, type: Single}
              - key: [1024, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 256, 128]
                speed: 1733.23
                value: {index: 51, type: Single}
              - key: [1024, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 448, 128]
                speed: 2548.68
                value: {index: 51, type: Single}
              - key: [1024, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 704, 128]
                speed: 2834.03
                value: {index: 51, type: Single}
              - key: [1024, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1024, 128]
                speed: 3165.55
                value: {index: 51, type: Single}
              - key: [1024, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1408, 128]
                speed: 3463.8
                value: {index: 51, type: Single}
              - key: [1024, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1856, 128]
                speed: 3763.48
                value: {index: 55, type: Single}
              - key: [1024, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 2368, 128]
                speed: 3872.04
                value: {index: 55, type: Single}
              - key: [1024, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 2944, 128]
                speed: 4070.46
                value: {index: 53, type: Single}
              - key: [1024, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 3584, 128]
                speed: 4503.13
                value: {index: 53, type: Single}
              - key: [1024, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 4288, 128]
                speed: 4512.23
                value: {index: 53, type: Single}
              - key: [1024, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 5056, 128]
                speed: 4782.82
                value: {index: 53, type: Single}
              - key: [1024, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 5888, 128]
                speed: 4855.05
                value: {index: 53, type: Single}
              - key: [1024, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 6784, 128]
                speed: 4926.86
                value: {index: 53, type: Single}
              - key: [1024, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1024, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 4, 128]
                speed: 45.056
                value: {index: 57, type: Single}
              - key: [1408, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1408, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1408, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1408, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1408, 64, 128]
                speed: 637.979
                value: {index: 51, type: Single}
              - key: [1408, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 128, 128]
                speed: 1253.77
                value: {index: 51, type: Single}
              - key: [1408, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 256, 128]
                speed: 2151.98
                value: {index: 51, type: Single}
              - key: [1408, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 448, 128]
                speed: 2908.51
                value: {index: 51, type: Single}
              - key: [1408, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 704, 128]
                speed: 3128.19
                value: {index: 53, type: Single}
              - key: [1408, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1024, 128]
                speed: 4402.47
                value: {index: 52, type: Single}
              - key: [1408, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1408, 128]
                speed: 4179.14
                value: {index: 53, type: Single}
              - key: [1408, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1856, 128]
                speed: 4645.81
                value: {index: 52, type: Single}
              - key: [1408, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 2368, 128]
                speed: 5013.81
                value: {index: 52, type: Single}
              - key: [1408, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 2944, 128]
                speed: 5288.92
                value: {index: 52, type: Single}
              - key: [1408, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 3584, 128]
                speed: 5297.99
                value: {index: 52, type: Single}
              - key: [1408, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 4288, 128]
                speed: 5328.24
                value: {index: 53, type: Single}
              - key: [1408, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 5056, 128]
                speed: 5669.62
                value: {index: 52, type: Single}
              - key: [1408, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 5888, 128]
                speed: 5916.43
                value: {index: 52, type: Single}
              - key: [1408, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 6784, 128]
                speed: 6096.19
                value: {index: 52, type: Single}
              - key: [1408, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1408, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 4, 128]
                speed: 57.6639
                value: {index: 57, type: Single}
              - key: [1856, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1856, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1856, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1856, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [1856, 64, 128]
                speed: 844.686
                value: {index: 51, type: Single}
              - key: [1856, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 128, 128]
                speed: 1638.4
                value: {index: 51, type: Single}
              - key: [1856, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 256, 128]
                speed: 2705.46
                value: {index: 51, type: Single}
              - key: [1856, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 448, 128]
                speed: 3309.46
                value: {index: 52, type: Single}
              - key: [1856, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 704, 128]
                speed: 4131.67
                value: {index: 52, type: Single}
              - key: [1856, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1024, 128]
                speed: 4621.43
                value: {index: 52, type: Single}
              - key: [1856, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1408, 128]
                speed: 4936.51
                value: {index: 52, type: Single}
              - key: [1856, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1856, 128]
                speed: 5204.57
                value: {index: 52, type: Single}
              - key: [1856, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 2368, 128]
                speed: 5384.44
                value: {index: 52, type: Single}
              - key: [1856, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 2944, 128]
                speed: 5536.78
                value: {index: 54, type: Single}
              - key: [1856, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 3584, 128]
                speed: 5831.87
                value: {index: 54, type: Single}
              - key: [1856, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 4288, 128]
                speed: 5983.91
                value: {index: 52, type: Single}
              - key: [1856, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 5056, 128]
                speed: 6158.51
                value: {index: 52, type: Single}
              - key: [1856, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 5888, 128]
                speed: 6233.57
                value: {index: 52, type: Single}
              - key: [1856, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 6784, 128]
                speed: 6287.75
                value: {index: 52, type: Single}
              - key: [1856, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [1856, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 4, 128]
                speed: 72.8615
                value: {index: 57, type: Single}
              - key: [2368, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [2368, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [2368, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [2368, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [2368, 64, 128]
                speed: 1068.21
                value: {index: 51, type: Single}
              - key: [2368, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 128, 128]
                speed: 2003.99
                value: {index: 51, type: Single}
              - key: [2368, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 256, 128]
                speed: 2975.25
                value: {index: 51, type: Single}
              - key: [2368, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 448, 128]
                speed: 3464.09
                value: {index: 51, type: Single}
              - key: [2368, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 704, 128]
                speed: 4295.24
                value: {index: 52, type: Single}
              - key: [2368, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1024, 128]
                speed: 5071.59
                value: {index: 52, type: Single}
              - key: [2368, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1408, 128]
                speed: 5460.25
                value: {index: 52, type: Single}
              - key: [2368, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1856, 128]
                speed: 5351.66
                value: {index: 52, type: Single}
              - key: [2368, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 2368, 128]
                speed: 5799.58
                value: {index: 52, type: Single}
              - key: [2368, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 2944, 128]
                speed: 5830.81
                value: {index: 52, type: Single}
              - key: [2368, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 3584, 128]
                speed: 6051.32
                value: {index: 52, type: Single}
              - key: [2368, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 4288, 128]
                speed: 6107.72
                value: {index: 52, type: Single}
              - key: [2368, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 5056, 128]
                speed: 6199.47
                value: {index: 52, type: Single}
              - key: [2368, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 5888, 128]
                speed: 6399.5
                value: {index: 52, type: Single}
              - key: [2368, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 6784, 128]
                speed: 6329.34
                value: {index: 52, type: Single}
              - key: [2368, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2368, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 4, 128]
                speed: 88.4582
                value: {index: 57, type: Single}
              - key: [2944, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [2944, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [2944, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [2944, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [2944, 64, 128]
                speed: 1240.6
                value: {index: 51, type: Single}
              - key: [2944, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 128, 128]
                speed: 2200.53
                value: {index: 51, type: Single}
              - key: [2944, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 256, 128]
                speed: 2926.9
                value: {index: 55, type: Single}
              - key: [2944, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 448, 128]
                speed: 3715.29
                value: {index: 53, type: Single}
              - key: [2944, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 704, 128]
                speed: 4451.21
                value: {index: 52, type: Single}
              - key: [2944, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1024, 128]
                speed: 4828.34
                value: {index: 52, type: Single}
              - key: [2944, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1408, 128]
                speed: 5226.41
                value: {index: 52, type: Single}
              - key: [2944, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1856, 128]
                speed: 5481.24
                value: {index: 52, type: Single}
              - key: [2944, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 2368, 128]
                speed: 5630.66
                value: {index: 52, type: Single}
              - key: [2944, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 2944, 128]
                speed: 6042.5
                value: {index: 52, type: Single}
              - key: [2944, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 3584, 128]
                speed: 6042.31
                value: {index: 52, type: Single}
              - key: [2944, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 4288, 128]
                speed: 6051.04
                value: {index: 52, type: Single}
              - key: [2944, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 5056, 128]
                speed: 6166.76
                value: {index: 52, type: Single}
              - key: [2944, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 5888, 128]
                speed: 6148.33
                value: {index: 52, type: Single}
              - key: [2944, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 6784, 128]
                speed: 6335.38
                value: {index: 52, type: Single}
              - key: [2944, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [2944, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 4, 128]
                speed: 106.193
                value: {index: 57, type: Single}
              - key: [3584, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [3584, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [3584, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [3584, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [3584, 64, 128]
                speed: 1504.1
                value: {index: 51, type: Single}
              - key: [3584, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 128, 128]
                speed: 2612.11
                value: {index: 51, type: Single}
              - key: [3584, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 256, 128]
                speed: 3390.36
                value: {index: 55, type: Single}
              - key: [3584, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 448, 128]
                speed: 3946.29
                value: {index: 53, type: Single}
              - key: [3584, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 704, 128]
                speed: 4505.63
                value: {index: 52, type: Single}
              - key: [3584, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1024, 128]
                speed: 4881.2
                value: {index: 52, type: Single}
              - key: [3584, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1408, 128]
                speed: 5270.32
                value: {index: 52, type: Single}
              - key: [3584, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1856, 128]
                speed: 5308.3
                value: {index: 52, type: Single}
              - key: [3584, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 2368, 128]
                speed: 5569.81
                value: {index: 52, type: Single}
              - key: [3584, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 2944, 128]
                speed: 5720.85
                value: {index: 52, type: Single}
              - key: [3584, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 3584, 128]
                speed: 5800.81
                value: {index: 52, type: Single}
              - key: [3584, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 4288, 128]
                speed: 5746.52
                value: {index: 52, type: Single}
              - key: [3584, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 5056, 128]
                speed: 5857.25
                value: {index: 52, type: Single}
              - key: [3584, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 5888, 128]
                speed: 5960.18
                value: {index: 52, type: Single}
              - key: [3584, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 6784, 128]
                speed: 6018.34
                value: {index: 52, type: Single}
              - key: [3584, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [3584, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 4, 128]
                speed: 122.514
                value: {index: 57, type: Single}
              - key: [4288, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4288, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4288, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4288, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [4288, 64, 128]
                speed: 1770.53
                value: {index: 51, type: Single}
              - key: [4288, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 128, 128]
                speed: 2770.29
                value: {index: 51, type: Single}
              - key: [4288, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 256, 128]
                speed: 3555.44
                value: {index: 51, type: Single}
              - key: [4288, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 448, 128]
                speed: 4397.23
                value: {index: 53, type: Single}
              - key: [4288, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 704, 128]
                speed: 5047.06
                value: {index: 52, type: Single}
              - key: [4288, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1024, 128]
                speed: 5796.64
                value: {index: 52, type: Single}
              - key: [4288, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1408, 128]
                speed: 5750.05
                value: {index: 52, type: Single}
              - key: [4288, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1856, 128]
                speed: 5998.0
                value: {index: 52, type: Single}
              - key: [4288, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 2368, 128]
                speed: 6041.85
                value: {index: 52, type: Single}
              - key: [4288, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 2944, 128]
                speed: 6232.15
                value: {index: 52, type: Single}
              - key: [4288, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 3584, 128]
                speed: 6410.15
                value: {index: 52, type: Single}
              - key: [4288, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 4288, 128]
                speed: 6307.76
                value: {index: 52, type: Single}
              - key: [4288, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 5056, 128]
                speed: 6324.26
                value: {index: 52, type: Single}
              - key: [4288, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 5888, 128]
                speed: 6468.66
                value: {index: 52, type: Single}
              - key: [4288, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 6784, 128]
                speed: 6451.02
                value: {index: 52, type: Single}
              - key: [4288, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [4288, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 4, 128]
                speed: 135.96
                value: {index: 58, type: Single}
              - key: [5056, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [5056, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [5056, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [5056, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [5056, 64, 128]
                speed: 2054.5
                value: {index: 51, type: Single}
              - key: [5056, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 128, 128]
                speed: 3090.95
                value: {index: 51, type: Single}
              - key: [5056, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 256, 128]
                speed: 4192.23
                value: {index: 52, type: Single}
              - key: [5056, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 448, 128]
                speed: 4468.77
                value: {index: 53, type: Single}
              - key: [5056, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 704, 128]
                speed: 5357.62
                value: {index: 52, type: Single}
              - key: [5056, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1024, 128]
                speed: 5772.7
                value: {index: 52, type: Single}
              - key: [5056, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1408, 128]
                speed: 5988.57
                value: {index: 52, type: Single}
              - key: [5056, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1856, 128]
                speed: 6081.19
                value: {index: 52, type: Single}
              - key: [5056, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 2368, 128]
                speed: 6177.48
                value: {index: 52, type: Single}
              - key: [5056, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 2944, 128]
                speed: 6410.77
                value: {index: 52, type: Single}
              - key: [5056, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 3584, 128]
                speed: 6418.73
                value: {index: 52, type: Single}
              - key: [5056, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 4288, 128]
                speed: 6363.7
                value: {index: 52, type: Single}
              - key: [5056, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 5056, 128]
                speed: 6489.2
                value: {index: 52, type: Single}
              - key: [5056, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 5888, 128]
                speed: 6484.07
                value: {index: 52, type: Single}
              - key: [5056, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 6784, 128]
                speed: 6559.14
                value: {index: 52, type: Single}
              - key: [5056, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5056, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 4, 128]
                speed: 155.079
                value: {index: 57, type: Single}
              - key: [5888, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [5888, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [5888, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [5888, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [5888, 64, 128]
                speed: 2079.12
                value: {index: 51, type: Single}
              - key: [5888, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 128, 128]
                speed: 2970.15
                value: {index: 55, type: Single}
              - key: [5888, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 256, 128]
                speed: 3852.63
                value: {index: 53, type: Single}
              - key: [5888, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 448, 128]
                speed: 4518.82
                value: {index: 53, type: Single}
              - key: [5888, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 704, 128]
                speed: 4891.08
                value: {index: 53, type: Single}
              - key: [5888, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1024, 128]
                speed: 5350.53
                value: {index: 52, type: Single}
              - key: [5888, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1408, 128]
                speed: 5668.64
                value: {index: 52, type: Single}
              - key: [5888, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1856, 128]
                speed: 5738.49
                value: {index: 52, type: Single}
              - key: [5888, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 2368, 128]
                speed: 5915.85
                value: {index: 52, type: Single}
              - key: [5888, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 2944, 128]
                speed: 6021.51
                value: {index: 52, type: Single}
              - key: [5888, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 3584, 128]
                speed: 6204.42
                value: {index: 52, type: Single}
              - key: [5888, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 4288, 128]
                speed: 6162.74
                value: {index: 52, type: Single}
              - key: [5888, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 5056, 128]
                speed: 6194.02
                value: {index: 52, type: Single}
              - key: [5888, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 5888, 128]
                speed: 6256.51
                value: {index: 52, type: Single}
              - key: [5888, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 6784, 128]
                speed: 6263.97
                value: {index: 52, type: Single}
              - key: [5888, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [5888, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 4, 128]
                speed: 172.296
                value: {index: 57, type: Single}
              - key: [6784, 4, 256]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [6784, 4, 768]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [6784, 4, 1792]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [6784, 4, 3328]
                speed: 0.0
                value: {index: 59, type: Single}
              - key: [6784, 64, 128]
                speed: 2370.98
                value: {index: 51, type: Single}
              - key: [6784, 64, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 64, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 64, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 64, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 128, 128]
                speed: 3464.8
                value: {index: 55, type: Single}
              - key: [6784, 128, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 128, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 128, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 128, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 256, 128]
                speed: 4261.89
                value: {index: 52, type: Single}
              - key: [6784, 256, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 256, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 256, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 256, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 448, 128]
                speed: 4809.92
                value: {index: 53, type: Single}
              - key: [6784, 448, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 448, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 448, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 448, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 704, 128]
                speed: 5314.02
                value: {index: 52, type: Single}
              - key: [6784, 704, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 704, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 704, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 704, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1024, 128]
                speed: 5729.39
                value: {index: 52, type: Single}
              - key: [6784, 1024, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1024, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1024, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1024, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1408, 128]
                speed: 5898.55
                value: {index: 52, type: Single}
              - key: [6784, 1408, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1408, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1408, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1408, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1856, 128]
                speed: 6017.31
                value: {index: 52, type: Single}
              - key: [6784, 1856, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1856, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1856, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 1856, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 2368, 128]
                speed: 6135.94
                value: {index: 52, type: Single}
              - key: [6784, 2368, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 2368, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 2368, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 2368, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 2944, 128]
                speed: 6386.03
                value: {index: 52, type: Single}
              - key: [6784, 2944, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 2944, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 2944, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 2944, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 3584, 128]
                speed: 6408.98
                value: {index: 52, type: Single}
              - key: [6784, 3584, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 3584, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 3584, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 3584, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 4288, 128]
                speed: 6299.11
                value: {index: 52, type: Single}
              - key: [6784, 4288, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 4288, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 4288, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 4288, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 5056, 128]
                speed: 6436.83
                value: {index: 52, type: Single}
              - key: [6784, 5056, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 5056, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 5056, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 5056, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 5888, 128]
                speed: 6536.91
                value: {index: 52, type: Single}
              - key: [6784, 5888, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 5888, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 5888, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 5888, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 6784, 128]
                speed: 6591.8
                value: {index: 52, type: Single}
              - key: [6784, 6784, 256]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 6784, 768]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 6784, 1792]
                speed: 0.0
                value: {index: 56, type: Single}
              - key: [6784, 6784, 3328]
                speed: 0.0
                value: {index: 56, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
      property: {type: OperationIdentifier}
      type: ProblemMap
    predicate:
      type: AMDGPU
      value: {type: Processor, value: gfx906}
  - library:
      map:
        Contraction_l_Ailk_Bjlk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.0345949
                value: {index: 179, type: Single}
              - key: [4, 4, 256]
                speed: 0.0992248
                value: {index: 181, type: Single}
              - key: [4, 4, 768]
                speed: 0.265744
                value: {index: 182, type: Single}
              - key: [4, 4, 1792]
                speed: 0.483019
                value: {index: 182, type: Single}
              - key: [4, 4, 3328]
                speed: 0.664939
                value: {index: 182, type: Single}
              - key: [4, 64, 128]
                speed: 0.548331
                value: {index: 179, type: Single}
              - key: [4, 64, 256]
                speed: 1.66504
                value: {index: 185, type: Single}
              - key: [4, 64, 768]
                speed: 4.2965
                value: {index: 182, type: Single}
              - key: [4, 64, 1792]
                speed: 7.7913
                value: {index: 182, type: Single}
              - key: [4, 64, 3328]
                speed: 10.779
                value: {index: 182, type: Single}
              - key: [4, 128, 128]
                speed: 1.14255
                value: {index: 179, type: Single}
              - key: [4, 128, 256]
                speed: 3.33686
                value: {index: 181, type: Single}
              - key: [4, 128, 768]
                speed: 7.94055
                value: {index: 185, type: Single}
              - key: [4, 128, 1792]
                speed: 14.4991
                value: {index: 182, type: Single}
              - key: [4, 128, 3328]
                speed: 20.4211
                value: {index: 182, type: Single}
              - key: [4, 256, 128]
                speed: 2.30114
                value: {index: 179, type: Single}
              - key: [4, 256, 256]
                speed: 5.70871
                value: {index: 185, type: Single}
              - key: [4, 256, 768]
                speed: 15.1237
                value: {index: 182, type: Single}
              - key: [4, 256, 1792]
                speed: 28.0411
                value: {index: 182, type: Single}
              - key: [4, 256, 3328]
                speed: 40.1495
                value: {index: 182, type: Single}
              - key: [4, 448, 128]
                speed: 4.11367
                value: {index: 179, type: Single}
              - key: [4, 448, 256]
                speed: 9.36993
                value: {index: 184, type: Single}
              - key: [4, 448, 768]
                speed: 24.4364
                value: {index: 182, type: Single}
              - key: [4, 448, 1792]
                speed: 46.1919
                value: {index: 182, type: Single}
              - key: [4, 448, 3328]
                speed: 66.5006
                value: {index: 182, type: Single}
              - key: [4, 704, 128]
                speed: 6.32815
                value: {index: 179, type: Single}
              - key: [4, 704, 256]
                speed: 13.3499
                value: {index: 181, type: Single}
              - key: [4, 704, 768]
                speed: 35.338
                value: {index: 182, type: Single}
              - key: [4, 704, 1792]
                speed: 67.4635
                value: {index: 185, type: Single}
              - key: [4, 704, 3328]
                speed: 98.525
                value: {index: 182, type: Single}
              - key: [4, 1024, 128]
                speed: 9.1023
                value: {index: 178, type: Single}
              - key: [4, 1024, 256]
                speed: 18.3061
                value: {index: 181, type: Single}
              - key: [4, 1024, 768]
                speed: 47.7784
                value: {index: 182, type: Single}
              - key: [4, 1024, 1792]
                speed: 92.6772
                value: {index: 182, type: Single}
              - key: [4, 1024, 3328]
                speed: 133.853
                value: {index: 182, type: Single}
              - key: [4, 1408, 128]
                speed: 12.3105
                value: {index: 179, type: Single}
              - key: [4, 1408, 256]
                speed: 24.756
                value: {index: 181, type: Single}
              - key: [4, 1408, 768]
                speed: 64.3657
                value: {index: 182, type: Single}
              - key: [4, 1408, 1792]
                speed: 122.009
                value: {index: 185, type: Single}
              - key: [4, 1408, 3328]
                speed: 178.849
                value: {index: 182, type: Single}
              - key: [4, 1856, 128]
                speed: 16.9209
                value: {index: 179, type: Single}
              - key: [4, 1856, 256]
                speed: 32.4546
                value: {index: 181, type: Single}
              - key: [4, 1856, 768]
                speed: 82.6803
                value: {index: 182, type: Single}
              - key: [4, 1856, 1792]
                speed: 157.033
                value: {index: 182, type: Single}
              - key: [4, 1856, 3328]
                speed: 225.76
                value: {index: 182, type: Single}
              - key: [4, 2368, 128]
                speed: 21.6196
                value: {index: 179, type: Single}
              - key: [4, 2368, 256]
                speed: 40.0931
                value: {index: 181, type: Single}
              - key: [4, 2368, 768]
                speed: 99.8147
                value: {index: 182, type: Single}
              - key: [4, 2368, 1792]
                speed: 184.339
                value: {index: 182, type: Single}
              - key: [4, 2368, 3328]
                speed: 260.606
                value: {index: 182, type: Single}
              - key: [4, 2944, 128]
                speed: 26.8401
                value: {index: 179, type: Single}
              - key: [4, 2944, 256]
                speed: 49.1948
                value: {index: 181, type: Single}
              - key: [4, 2944, 768]
                speed: 118.501
                value: {index: 181, type: Single}
              - key: [4, 2944, 1792]
                speed: 205.439
                value: {index: 182, type: Single}
              - key: [4, 2944, 3328]
                speed: 282.028
                value: {index: 182, type: Single}
              - key: [4, 3584, 128]
                speed: 32.3068
                value: {index: 178, type: Single}
              - key: [4, 3584, 256]
                speed: 59.0414
                value: {index: 184, type: Single}
              - key: [4, 3584, 768]
                speed: 139.297
                value: {index: 181, type: Single}
              - key: [4, 3584, 1792]
                speed: 230.861
                value: {index: 181, type: Single}
              - key: [4, 3584, 3328]
                speed: 299.839
                value: {index: 181, type: Single}
              - key: [4, 4288, 128]
                speed: 38.4362
                value: {index: 179, type: Single}
              - key: [4, 4288, 256]
                speed: 67.1804
                value: {index: 181, type: Single}
              - key: [4, 4288, 768]
                speed: 158.022
                value: {index: 181, type: Single}
              - key: [4, 4288, 1792]
                speed: 262.078
                value: {index: 181, type: Single}
              - key: [4, 4288, 3328]
                speed: 336.41
                value: {index: 181, type: Single}
              - key: [4, 5056, 128]
                speed: 45.7044
                value: {index: 179, type: Single}
              - key: [4, 5056, 256]
                speed: 77.4124
                value: {index: 184, type: Single}
              - key: [4, 5056, 768]
                speed: 176.822
                value: {index: 181, type: Single}
              - key: [4, 5056, 1792]
                speed: 281.204
                value: {index: 181, type: Single}
              - key: [4, 5056, 3328]
                speed: 354.839
                value: {index: 181, type: Single}
              - key: [4, 5888, 128]
                speed: 53.3006
                value: {index: 179, type: Single}
              - key: [4, 5888, 256]
                speed: 89.4026
                value: {index: 180, type: Single}
              - key: [4, 5888, 768]
                speed: 195.758
                value: {index: 181, type: Single}
              - key: [4, 5888, 1792]
                speed: 299.244
                value: {index: 181, type: Single}
              - key: [4, 5888, 3328]
                speed: 371.686
                value: {index: 181, type: Single}
              - key: [4, 6784, 128]
                speed: 60.7244
                value: {index: 178, type: Single}
              - key: [4, 6784, 256]
                speed: 99.3538
                value: {index: 183, type: Single}
              - key: [4, 6784, 768]
                speed: 205.608
                value: {index: 180, type: Single}
              - key: [4, 6784, 1792]
                speed: 293.93
                value: {index: 180, type: Single}
              - key: [4, 6784, 3328]
                speed: 343.851
                value: {index: 180, type: Single}
              - key: [64, 4, 128]
                speed: 0.615946
                value: {index: 179, type: Single}
              - key: [64, 4, 256]
                speed: 1.77701
                value: {index: 184, type: Single}
              - key: [64, 4, 768]
                speed: 4.39642
                value: {index: 182, type: Single}
              - key: [64, 4, 1792]
                speed: 7.88776
                value: {index: 182, type: Single}
              - key: [64, 4, 3328]
                speed: 11.0818
                value: {index: 182, type: Single}
              - key: [64, 64, 128]
                speed: 6.32587
                value: {index: 157, type: Single}
              - key: [64, 64, 256]
                speed: 22.2533
                value: {index: 161, type: Single}
              - key: [64, 64, 768]
                speed: 42.2813
                value: {index: 168, type: Single}
              - key: [64, 64, 1792]
                speed: 87.6317
                value: {index: 166, type: Single}
              - key: [64, 64, 3328]
                speed: 134.063
                value: {index: 166, type: Single}
              - key: [64, 128, 128]
                speed: 13.2396
                value: {index: 157, type: Single}
              - key: [64, 128, 256]
                speed: 51.7049
                value: {index: 169, type: Single}
              - key: [64, 128, 768]
                speed: 78.408
                value: {index: 168, type: Single}
              - key: [64, 128, 1792]
                speed: 150.657
                value: {index: 166, type: Single}
              - key: [64, 128, 3328]
                speed: 243.942
                value: {index: 166, type: Single}
              - key: [64, 256, 128]
                speed: 26.2669
                value: {index: 157, type: Single}
              - key: [64, 256, 256]
                speed: 106.131
                value: {index: 161, type: Single}
              - key: [64, 256, 768]
                speed: 150.657
                value: {index: 161, type: Single}
              - key: [64, 256, 1792]
                speed: 264.41
                value: {index: 168, type: Single}
              - key: [64, 256, 3328]
                speed: 415.341
                value: {index: 159, type: Single}
              - key: [64, 448, 128]
                speed: 45.466
                value: {index: 157, type: Single}
              - key: [64, 448, 256]
                speed: 182.044
                value: {index: 169, type: Single}
              - key: [64, 448, 768]
                speed: 266.2
                value: {index: 158, type: Single}
              - key: [64, 448, 1792]
                speed: 433.369
                value: {index: 168, type: Single}
              - key: [64, 448, 3328]
                speed: 687.467
                value: {index: 170, type: Single}
              - key: [64, 704, 128]
                speed: 69.7866
                value: {index: 157, type: Single}
              - key: [64, 704, 256]
                speed: 277.268
                value: {index: 169, type: Single}
              - key: [64, 704, 768]
                speed: 417.911
                value: {index: 161, type: Single}
              - key: [64, 704, 1792]
                speed: 603.621
                value: {index: 170, type: Single}
              - key: [64, 704, 3328]
                speed: 961.688
                value: {index: 159, type: Single}
              - key: [64, 1024, 128]
                speed: 110.145
                value: {index: 157, type: Single}
              - key: [64, 1024, 256]
                speed: 395.689
                value: {index: 169, type: Single}
              - key: [64, 1024, 768]
                speed: 604.367
                value: {index: 161, type: Single}
              - key: [64, 1024, 1792]
                speed: 804.387
                value: {index: 173, type: Single}
              - key: [64, 1024, 3328]
                speed: 1117.34
                value: {index: 168, type: Single}
              - key: [64, 1408, 128]
                speed: 151.131
                value: {index: 157, type: Single}
              - key: [64, 1408, 256]
                speed: 533.997
                value: {index: 161, type: Single}
              - key: [64, 1408, 768]
                speed: 834.209
                value: {index: 161, type: Single}
              - key: [64, 1408, 1792]
                speed: 1081.73
                value: {index: 173, type: Single}
              - key: [64, 1408, 3328]
                speed: 1456.36
                value: {index: 173, type: Single}
              - key: [64, 1856, 128]
                speed: 200.903
                value: {index: 157, type: Single}
              - key: [64, 1856, 256]
                speed: 684.881
                value: {index: 161, type: Single}
              - key: [64, 1856, 768]
                speed: 1093.31
                value: {index: 161, type: Single}
              - key: [64, 1856, 1792]
                speed: 1369.41
                value: {index: 173, type: Single}
              - key: [64, 1856, 3328]
                speed: 1870.33
                value: {index: 173, type: Single}
              - key: [64, 2368, 128]
                speed: 250.241
                value: {index: 157, type: Single}
              - key: [64, 2368, 256]
                speed: 861.397
                value: {index: 161, type: Single}
              - key: [64, 2368, 768]
                speed: 1372.55
                value: {index: 161, type: Single}
              - key: [64, 2368, 1792]
                speed: 1646.35
                value: {index: 161, type: Single}
              - key: [64, 2368, 3328]
                speed: 1832.19
                value: {index: 163, type: Single}
              - key: [64, 2944, 128]
                speed: 309.831
                value: {index: 157, type: Single}
              - key: [64, 2944, 256]
                speed: 1032.42
                value: {index: 169, type: Single}
              - key: [64, 2944, 768]
                speed: 1673.26
                value: {index: 158, type: Single}
              - key: [64, 2944, 1792]
                speed: 2034.97
                value: {index: 161, type: Single}
              - key: [64, 2944, 3328]
                speed: 2198.01
                value: {index: 161, type: Single}
              - key: [64, 3584, 128]
                speed: 366.635
                value: {index: 157, type: Single}
              - key: [64, 3584, 256]
                speed: 1229.49
                value: {index: 161, type: Single}
              - key: [64, 3584, 768]
                speed: 1980.22
                value: {index: 158, type: Single}
              - key: [64, 3584, 1792]
                speed: 2445.51
                value: {index: 161, type: Single}
              - key: [64, 3584, 3328]
                speed: 2616.41
                value: {index: 161, type: Single}
              - key: [64, 4288, 128]
                speed: 411.519
                value: {index: 157, type: Single}
              - key: [64, 4288, 256]
                speed: 1423.31
                value: {index: 169, type: Single}
              - key: [64, 4288, 768]
                speed: 1961.69
                value: {index: 161, type: Single}
              - key: [64, 4288, 1792]
                speed: 2232.13
                value: {index: 161, type: Single}
              - key: [64, 4288, 3328]
                speed: 2403.45
                value: {index: 163, type: Single}
              - key: [64, 5056, 128]
                speed: 468.962
                value: {index: 157, type: Single}
              - key: [64, 5056, 256]
                speed: 1607.87
                value: {index: 161, type: Single}
              - key: [64, 5056, 768]
                speed: 2282.44
                value: {index: 161, type: Single}
              - key: [64, 5056, 1792]
                speed: 2613.88
                value: {index: 161, type: Single}
              - key: [64, 5056, 3328]
                speed: 2745.48
                value: {index: 158, type: Single}
              - key: [64, 5888, 128]
                speed: 523.833
                value: {index: 157, type: Single}
              - key: [64, 5888, 256]
                speed: 1838.2
                value: {index: 161, type: Single}
              - key: [64, 5888, 768]
                speed: 2658.04
                value: {index: 161, type: Single}
              - key: [64, 5888, 1792]
                speed: 3035.25
                value: {index: 158, type: Single}
              - key: [64, 5888, 3328]
                speed: 3203.15
                value: {index: 161, type: Single}
              - key: [64, 6784, 128]
                speed: 593.238
                value: {index: 157, type: Single}
              - key: [64, 6784, 256]
                speed: 2121.17
                value: {index: 161, type: Single}
              - key: [64, 6784, 768]
                speed: 3046.85
                value: {index: 161, type: Single}
              - key: [64, 6784, 1792]
                speed: 3450.0
                value: {index: 161, type: Single}
              - key: [64, 6784, 3328]
                speed: 3678.56
                value: {index: 158, type: Single}
              - key: [128, 4, 128]
                speed: 1.2282
                value: {index: 179, type: Single}
              - key: [128, 4, 256]
                speed: 3.30323
                value: {index: 184, type: Single}
              - key: [128, 4, 768]
                speed: 7.9534
                value: {index: 185, type: Single}
              - key: [128, 4, 1792]
                speed: 14.9139
                value: {index: 182, type: Single}
              - key: [128, 4, 3328]
                speed: 21.0051
                value: {index: 182, type: Single}
              - key: [128, 64, 128]
                speed: 14.1394
                value: {index: 157, type: Single}
              - key: [128, 64, 256]
                speed: 53.3898
                value: {index: 169, type: Single}
              - key: [128, 64, 768]
                speed: 80.0847
                value: {index: 168, type: Single}
              - key: [128, 64, 1792]
                speed: 156.437
                value: {index: 166, type: Single}
              - key: [128, 64, 3328]
                speed: 248.026
                value: {index: 166, type: Single}
              - key: [128, 128, 128]
                speed: 26.8041
                value: {index: 157, type: Single}
              - key: [128, 128, 256]
                speed: 107.657
                value: {index: 169, type: Single}
              - key: [128, 128, 768]
                speed: 151.968
                value: {index: 161, type: Single}
              - key: [128, 128, 1792]
                speed: 273.678
                value: {index: 170, type: Single}
              - key: [128, 128, 3328]
                speed: 419.43
                value: {index: 170, type: Single}
              - key: [128, 256, 128]
                speed: 56.0137
                value: {index: 157, type: Single}
              - key: [128, 256, 256]
                speed: 205.201
                value: {index: 169, type: Single}
              - key: [128, 256, 768]
                speed: 306.601
                value: {index: 161, type: Single}
              - key: [128, 256, 1792]
                speed: 490.644
                value: {index: 159, type: Single}
              - key: [128, 256, 3328]
                speed: 775.397
                value: {index: 159, type: Single}
              - key: [128, 448, 128]
                speed: 98.4446
                value: {index: 157, type: Single}
              - key: [128, 448, 256]
                speed: 350.192
                value: {index: 169, type: Single}
              - key: [128, 448, 768]
                speed: 532.401
                value: {index: 158, type: Single}
              - key: [128, 448, 1792]
                speed: 751.612
                value: {index: 159, type: Single}
              - key: [128, 448, 3328]
                speed: 1195.15
                value: {index: 159, type: Single}
              - key: [128, 704, 128]
                speed: 153.545
                value: {index: 157, type: Single}
              - key: [128, 704, 256]
                speed: 530.071
                value: {index: 161, type: Single}
              - key: [128, 704, 768]
                speed: 837.44
                value: {index: 161, type: Single}
              - key: [128, 704, 1792]
                speed: 1106.03
                value: {index: 160, type: Single}
              - key: [128, 704, 3328]
                speed: 1522.61
                value: {index: 168, type: Single}
              - key: [128, 1024, 128]
                speed: 220.058
                value: {index: 157, type: Single}
              - key: [128, 1024, 256]
                speed: 754.371
                value: {index: 161, type: Single}
              - key: [128, 1024, 768]
                speed: 1198.37
                value: {index: 161, type: Single}
              - key: [128, 1024, 1792]
                speed: 1435.7
                value: {index: 161, type: Single}
              - key: [128, 1024, 3328]
                speed: 1598.53
                value: {index: 163, type: Single}
              - key: [128, 1408, 128]
                speed: 306.438
                value: {index: 157, type: Single}
              - key: [128, 1408, 256]
                speed: 996.057
                value: {index: 169, type: Single}
              - key: [128, 1408, 768]
                speed: 1623.03
                value: {index: 161, type: Single}
              - key: [128, 1408, 1792]
                speed: 1959.72
                value: {index: 161, type: Single}
              - key: [128, 1408, 3328]
                speed: 2152.55
                value: {index: 163, type: Single}
              - key: [128, 1856, 128]
                speed: 369.396
                value: {index: 157, type: Single}
              - key: [128, 1856, 256]
                speed: 1281.99
                value: {index: 169, type: Single}
              - key: [128, 1856, 768]
                speed: 2088.51
                value: {index: 161, type: Single}
              - key: [128, 1856, 1792]
                speed: 2542.53
                value: {index: 161, type: Single}
              - key: [128, 1856, 3328]
                speed: 2752.11
                value: {index: 161, type: Single}
              - key: [128, 2368, 128]
                speed: 449.459
                value: {index: 157, type: Single}
              - key: [128, 2368, 256]
                speed: 1556.87
                value: {index: 169, type: Single}
              - key: [128, 2368, 768]
                speed: 2139.56
                value: {index: 161, type: Single}
              - key: [128, 2368, 1792]
                speed: 2464.44
                value: {index: 158, type: Single}
              - key: [128, 2368, 3328]
                speed: 2680.52
                value: {index: 163, type: Single}
              - key: [128, 2944, 128]
                speed: 523.833
                value: {index: 157, type: Single}
              - key: [128, 2944, 256]
                speed: 1841.01
                value: {index: 158, type: Single}
              - key: [128, 2944, 768]
                speed: 2652.19
                value: {index: 161, type: Single}
              - key: [128, 2944, 1792]
                speed: 3049.51
                value: {index: 158, type: Single}
              - key: [128, 2944, 3328]
                speed: 3206.43
                value: {index: 161, type: Single}
              - key: [128, 3584, 128]
                speed: 609.637
                value: {index: 157, type: Single}
              - key: [128, 3584, 256]
                speed: 2168.4
                value: {index: 161, type: Single}
              - key: [128, 3584, 768]
                speed: 3161.54
                value: {index: 158, type: Single}
              - key: [128, 3584, 1792]
                speed: 3683.17
                value: {index: 158, type: Single}
              - key: [128, 3584, 3328]
                speed: 3882.04
                value: {index: 158, type: Single}
              - key: [128, 4288, 128]
                speed: 679.708
                value: {index: 157, type: Single}
              - key: [128, 4288, 256]
                speed: 1735.54
                value: {index: 161, type: Single}
              - key: [128, 4288, 768]
                speed: 2374.54
                value: {index: 158, type: Single}
              - key: [128, 4288, 1792]
                speed: 2662.89
                value: {index: 158, type: Single}
              - key: [128, 4288, 3328]
                speed: 3031.84
                value: {index: 163, type: Single}
              - key: [128, 5056, 128]
                speed: 786.233
                value: {index: 157, type: Single}
              - key: [128, 5056, 256]
                speed: 2044.36
                value: {index: 158, type: Single}
              - key: [128, 5056, 768]
                speed: 2797.3
                value: {index: 158, type: Single}
              - key: [128, 5056, 1792]
                speed: 3113.52
                value: {index: 161, type: Single}
              - key: [128, 5056, 3328]
                speed: 3248.34
                value: {index: 161, type: Single}
              - key: [128, 5888, 128]
                speed: 891.91
                value: {index: 155, type: Single}
              - key: [128, 5888, 256]
                speed: 2270.93
                value: {index: 172, type: Single}
              - key: [128, 5888, 768]
                speed: 2825.14
                value: {index: 158, type: Single}
              - key: [128, 5888, 1792]
                speed: 3142.02
                value: {index: 158, type: Single}
              - key: [128, 5888, 3328]
                speed: 3251.99
                value: {index: 158, type: Single}
              - key: [128, 6784, 128]
                speed: 998.823
                value: {index: 155, type: Single}
              - key: [128, 6784, 256]
                speed: 2542.29
                value: {index: 172, type: Single}
              - key: [128, 6784, 768]
                speed: 3237.35
                value: {index: 161, type: Single}
              - key: [128, 6784, 1792]
                speed: 3595.4
                value: {index: 158, type: Single}
              - key: [128, 6784, 3328]
                speed: 3748.81
                value: {index: 158, type: Single}
              - key: [256, 4, 128]
                speed: 2.47495
                value: {index: 179, type: Single}
              - key: [256, 4, 256]
                speed: 5.841
                value: {index: 185, type: Single}
              - key: [256, 4, 768]
                speed: 15.4809
                value: {index: 182, type: Single}
              - key: [256, 4, 1792]
                speed: 28.4941
                value: {index: 182, type: Single}
              - key: [256, 4, 3328]
                speed: 40.6862
                value: {index: 182, type: Single}
              - key: [256, 64, 128]
                speed: 27.2783
                value: {index: 157, type: Single}
              - key: [256, 64, 256]
                speed: 103.819
                value: {index: 169, type: Single}
              - key: [256, 64, 768]
                speed: 150.802
                value: {index: 158, type: Single}
              - key: [256, 64, 1792]
                speed: 267.105
                value: {index: 168, type: Single}
              - key: [256, 64, 3328]
                speed: 402.109
                value: {index: 159, type: Single}
              - key: [256, 128, 128]
                speed: 54.4432
                value: {index: 157, type: Single}
              - key: [256, 128, 256]
                speed: 212.262
                value: {index: 169, type: Single}
              - key: [256, 128, 768]
                speed: 302.474
                value: {index: 161, type: Single}
              - key: [256, 128, 1792]
                speed: 497.629
                value: {index: 168, type: Single}
              - key: [256, 128, 3328]
                speed: 761.11
                value: {index: 170, type: Single}
              - key: [256, 256, 128]
                speed: 110.609
                value: {index: 157, type: Single}
              - key: [256, 256, 256]
                speed: 397.942
                value: {index: 169, type: Single}
              - key: [256, 256, 768]
                speed: 604.948
                value: {index: 158, type: Single}
              - key: [256, 256, 1792]
                speed: 817.831
                value: {index: 160, type: Single}
              - key: [256, 256, 3328]
                speed: 1190.0
                value: {index: 168, type: Single}
              - key: [256, 448, 128]
                speed: 195.63
                value: {index: 157, type: Single}
              - key: [256, 448, 256]
                speed: 672.164
                value: {index: 161, type: Single}
              - key: [256, 448, 768]
                speed: 1056.63
                value: {index: 161, type: Single}
              - key: [256, 448, 1792]
                speed: 1342.92
                value: {index: 160, type: Single}
              - key: [256, 448, 3328]
                speed: 1832.89
                value: {index: 160, type: Single}
              - key: [256, 704, 128]
                speed: 295.752
                value: {index: 157, type: Single}
              - key: [256, 704, 256]
                speed: 996.057
                value: {index: 169, type: Single}
              - key: [256, 704, 768]
                speed: 1601.99
                value: {index: 158, type: Single}
              - key: [256, 704, 1792]
                speed: 1946.49
                value: {index: 158, type: Single}
              - key: [256, 704, 3328]
                speed: 2122.08
                value: {index: 163, type: Single}
              - key: [256, 1024, 128]
                speed: 361.266
                value: {index: 155, type: Single}
              - key: [256, 1024, 256]
                speed: 1350.82
                value: {index: 169, type: Single}
              - key: [256, 1024, 768]
                speed: 1857.26
                value: {index: 158, type: Single}
              - key: [256, 1024, 1792]
                speed: 2131.41
                value: {index: 158, type: Single}
              - key: [256, 1024, 3328]
                speed: 2242.02
                value: {index: 158, type: Single}
              - key: [256, 1408, 128]
                speed: 482.205
                value: {index: 155, type: Single}
              - key: [256, 1408, 256]
                speed: 1763.66
                value: {index: 169, type: Single}
              - key: [256, 1408, 768]
                speed: 2553.73
                value: {index: 161, type: Single}
              - key: [256, 1408, 1792]
                speed: 2930.68
                value: {index: 161, type: Single}
              - key: [256, 1408, 3328]
                speed: 3078.35
                value: {index: 158, type: Single}
              - key: [256, 1856, 128]
                speed: 618.566
                value: {index: 155, type: Single}
              - key: [256, 1856, 256]
                speed: 2300.2
                value: {index: 161, type: Single}
              - key: [256, 1856, 768]
                speed: 3310.09
                value: {index: 158, type: Single}
              - key: [256, 1856, 1792]
                speed: 3831.19
                value: {index: 158, type: Single}
              - key: [256, 1856, 3328]
                speed: 4030.52
                value: {index: 158, type: Single}
              - key: [256, 2368, 128]
                speed: 732.025
                value: {index: 155, type: Single}
              - key: [256, 2368, 256]
                speed: 1907.44
                value: {index: 161, type: Single}
              - key: [256, 2368, 768]
                speed: 2615.55
                value: {index: 158, type: Single}
              - key: [256, 2368, 1792]
                speed: 2924.63
                value: {index: 161, type: Single}
              - key: [256, 2368, 3328]
                speed: 3056.02
                value: {index: 158, type: Single}
              - key: [256, 2944, 128]
                speed: 901.917
                value: {index: 155, type: Single}
              - key: [256, 2944, 256]
                speed: 2286.0
                value: {index: 172, type: Single}
              - key: [256, 2944, 768]
                speed: 2827.34
                value: {index: 158, type: Single}
              - key: [256, 2944, 1792]
                speed: 3143.19
                value: {index: 158, type: Single}
              - key: [256, 2944, 3328]
                speed: 3266.22
                value: {index: 158, type: Single}
              - key: [256, 3584, 128]
                speed: 1038.93
                value: {index: 155, type: Single}
              - key: [256, 3584, 256]
                speed: 2711.0
                value: {index: 172, type: Single}
              - key: [256, 3584, 768]
                speed: 3395.54
                value: {index: 158, type: Single}
              - key: [256, 3584, 1792]
                speed: 3815.84
                value: {index: 158, type: Single}
              - key: [256, 3584, 3328]
                speed: 3970.89
                value: {index: 158, type: Single}
              - key: [256, 4288, 128]
                speed: 1059.97
                value: {index: 155, type: Single}
              - key: [256, 4288, 256]
                speed: 2549.15
                value: {index: 172, type: Single}
              - key: [256, 4288, 768]
                speed: 3105.86
                value: {index: 158, type: Single}
              - key: [256, 4288, 1792]
                speed: 3408.06
                value: {index: 158, type: Single}
              - key: [256, 4288, 3328]
                speed: 3530.93
                value: {index: 158, type: Single}
              - key: [256, 5056, 128]
                speed: 1252.08
                value: {index: 155, type: Single}
              - key: [256, 5056, 256]
                speed: 2927.12
                value: {index: 172, type: Single}
              - key: [256, 5056, 768]
                speed: 3390.35
                value: {index: 172, type: Single}
              - key: [256, 5056, 1792]
                speed: 3639.16
                value: {index: 158, type: Single}
              - key: [256, 5056, 3328]
                speed: 3768.51
                value: {index: 158, type: Single}
              - key: [256, 5888, 128]
                speed: 1294.54
                value: {index: 155, type: Single}
              - key: [256, 5888, 256]
                speed: 2693.16
                value: {index: 172, type: Single}
              - key: [256, 5888, 768]
                speed: 3157.4
                value: {index: 158, type: Single}
              - key: [256, 5888, 1792]
                speed: 3444.97
                value: {index: 158, type: Single}
              - key: [256, 5888, 3328]
                speed: 3565.61
                value: {index: 158, type: Single}
              - key: [256, 6784, 128]
                speed: 1435.29
                value: {index: 155, type: Single}
              - key: [256, 6784, 256]
                speed: 3082.34
                value: {index: 172, type: Single}
              - key: [256, 6784, 768]
                speed: 3413.67
                value: {index: 172, type: Single}
              - key: [256, 6784, 1792]
                speed: 3695.82
                value: {index: 158, type: Single}
              - key: [256, 6784, 3328]
                speed: 3809.69
                value: {index: 158, type: Single}
              - key: [448, 4, 128]
                speed: 4.26037
                value: {index: 179, type: Single}
              - key: [448, 4, 256]
                speed: 9.50978
                value: {index: 185, type: Single}
              - key: [448, 4, 768]
                speed: 24.9322
                value: {index: 185, type: Single}
              - key: [448, 4, 1792]
                speed: 46.2985
                value: {index: 182, type: Single}
              - key: [448, 4, 3328]
                speed: 67.3416
                value: {index: 182, type: Single}
              - key: [448, 64, 128]
                speed: 52.6696
                value: {index: 157, type: Single}
              - key: [448, 64, 256]
                speed: 181.325
                value: {index: 169, type: Single}
              - key: [448, 64, 768]
                speed: 265.43
                value: {index: 161, type: Single}
              - key: [448, 64, 1792]
                speed: 452.291
                value: {index: 159, type: Single}
              - key: [448, 64, 3328]
                speed: 698.744
                value: {index: 159, type: Single}
              - key: [448, 128, 128]
                speed: 96.0737
                value: {index: 157, type: Single}
              - key: [448, 128, 256]
                speed: 354.249
                value: {index: 169, type: Single}
              - key: [448, 128, 768]
                speed: 531.373
                value: {index: 161, type: Single}
              - key: [448, 128, 1792]
                speed: 765.042
                value: {index: 159, type: Single}
              - key: [448, 128, 3328]
                speed: 1235.38
                value: {index: 159, type: Single}
              - key: [448, 256, 128]
                speed: 194.181
                value: {index: 157, type: Single}
              - key: [448, 256, 256]
                speed: 662.458
                value: {index: 161, type: Single}
              - key: [448, 256, 768]
                speed: 1064.8
                value: {index: 161, type: Single}
              - key: [448, 256, 1792]
                speed: 1383.42
                value: {index: 173, type: Single}
              - key: [448, 256, 3328]
                speed: 1845.66
                value: {index: 173, type: Single}
              - key: [448, 448, 128]
                speed: 340.176
                value: {index: 157, type: Single}
              - key: [448, 448, 256]
                speed: 1105.43
                value: {index: 169, type: Single}
              - key: [448, 448, 768]
                speed: 1769.29
                value: {index: 161, type: Single}
              - key: [448, 448, 1792]
                speed: 2158.31
                value: {index: 161, type: Single}
              - key: [448, 448, 3328]
                speed: 2334.16
                value: {index: 161, type: Single}
              - key: [448, 704, 128]
                speed: 501.617
                value: {index: 157, type: Single}
              - key: [448, 704, 256]
                speed: 1617.39
                value: {index: 169, type: Single}
              - key: [448, 704, 768]
                speed: 2232.86
                value: {index: 158, type: Single}
              - key: [448, 704, 1792]
                speed: 2558.78
                value: {index: 161, type: Single}
              - key: [448, 704, 3328]
                speed: 2696.88
                value: {index: 161, type: Single}
              - key: [448, 1024, 128]
                speed: 675.878
                value: {index: 157, type: Single}
              - key: [448, 1024, 256]
                speed: 2194.33
                value: {index: 161, type: Single}
              - key: [448, 1024, 768]
                speed: 3184.4
                value: {index: 158, type: Single}
              - key: [448, 1024, 1792]
                speed: 3656.96
                value: {index: 158, type: Single}
              - key: [448, 1024, 3328]
                speed: 3865.52
                value: {index: 158, type: Single}
              - key: [448, 1408, 128]
                speed: 856.752
                value: {index: 157, type: Single}
              - key: [448, 1408, 256]
                speed: 1992.6
                value: {index: 158, type: Single}
              - key: [448, 1408, 768]
                speed: 2743.78
                value: {index: 161, type: Single}
              - key: [448, 1408, 1792]
                speed: 3051.08
                value: {index: 158, type: Single}
              - key: [448, 1408, 3328]
                speed: 3177.6
                value: {index: 158, type: Single}
              - key: [448, 1856, 128]
                speed: 1035.32
                value: {index: 157, type: Single}
              - key: [448, 1856, 256]
                speed: 2529.24
                value: {index: 172, type: Single}
              - key: [448, 1856, 768]
                speed: 3124.18
                value: {index: 161, type: Single}
              - key: [448, 1856, 1792]
                speed: 3463.89
                value: {index: 158, type: Single}
              - key: [448, 1856, 3328]
                speed: 3598.24
                value: {index: 158, type: Single}
              - key: [448, 2368, 128]
                speed: 1054.93
                value: {index: 155, type: Single}
              - key: [448, 2368, 256]
                speed: 2507.21
                value: {index: 172, type: Single}
              - key: [448, 2368, 768]
                speed: 3014.0
                value: {index: 161, type: Single}
              - key: [448, 2368, 1792]
                speed: 3289.5
                value: {index: 158, type: Single}
              - key: [448, 2368, 3328]
                speed: 3410.77
                value: {index: 158, type: Single}
              - key: [448, 2944, 128]
                speed: 1259.1
                value: {index: 155, type: Single}
              - key: [448, 2944, 256]
                speed: 3018.97
                value: {index: 172, type: Single}
              - key: [448, 2944, 768]
                speed: 3447.2
                value: {index: 172, type: Single}
              - key: [448, 2944, 1792]
                speed: 3705.46
                value: {index: 158, type: Single}
              - key: [448, 2944, 3328]
                speed: 3834.69
                value: {index: 158, type: Single}
              - key: [448, 3584, 128]
                speed: 1458.84
                value: {index: 156, type: Single}
              - key: [448, 3584, 256]
                speed: 2731.54
                value: {index: 172, type: Single}
              - key: [448, 3584, 768]
                speed: 3376.58
                value: {index: 161, type: Single}
              - key: [448, 3584, 1792]
                speed: 3420.14
                value: {index: 158, type: Single}
              - key: [448, 3584, 3328]
                speed: 3521.42
                value: {index: 158, type: Single}
              - key: [448, 4288, 128]
                speed: 1632.31
                value: {index: 156, type: Single}
              - key: [448, 4288, 256]
                speed: 3411.36
                value: {index: 172, type: Single}
              - key: [448, 4288, 768]
                speed: 3766.71
                value: {index: 172, type: Single}
              - key: [448, 4288, 1792]
                speed: 4071.82
                value: {index: 158, type: Single}
              - key: [448, 4288, 3328]
                speed: 4202.05
                value: {index: 158, type: Single}
              - key: [448, 5056, 128]
                speed: 1580.52
                value: {index: 155, type: Single}
              - key: [448, 5056, 256]
                speed: 3308.21
                value: {index: 172, type: Single}
              - key: [448, 5056, 768]
                speed: 3625.35
                value: {index: 172, type: Single}
              - key: [448, 5056, 1792]
                speed: 3864.28
                value: {index: 158, type: Single}
              - key: [448, 5056, 3328]
                speed: 3978.54
                value: {index: 158, type: Single}
              - key: [448, 5888, 128]
                speed: 1660.31
                value: {index: 155, type: Single}
              - key: [448, 5888, 256]
                speed: 3352.28
                value: {index: 172, type: Single}
              - key: [448, 5888, 768]
                speed: 3609.34
                value: {index: 172, type: Single}
              - key: [448, 5888, 1792]
                speed: 3770.73
                value: {index: 158, type: Single}
              - key: [448, 5888, 3328]
                speed: 3869.31
                value: {index: 158, type: Single}
              - key: [448, 6784, 128]
                speed: 1737.95
                value: {index: 155, type: Single}
              - key: [448, 6784, 256]
                speed: 3373.41
                value: {index: 172, type: Single}
              - key: [448, 6784, 768]
                speed: 3621.28
                value: {index: 161, type: Single}
              - key: [448, 6784, 1792]
                speed: 3886.67
                value: {index: 158, type: Single}
              - key: [448, 6784, 3328]
                speed: 3986.64
                value: {index: 158, type: Single}
              - key: [704, 4, 128]
                speed: 6.73489
                value: {index: 179, type: Single}
              - key: [704, 4, 256]
                speed: 13.8421
                value: {index: 182, type: Single}
              - key: [704, 4, 768]
                speed: 36.0929
                value: {index: 182, type: Single}
              - key: [704, 4, 1792]
                speed: 68.489
                value: {index: 182, type: Single}
              - key: [704, 4, 3328]
                speed: 99.8689
                value: {index: 182, type: Single}
              - key: [704, 64, 128]
                speed: 79.7451
                value: {index: 157, type: Single}
              - key: [704, 64, 256]
                speed: 280.504
                value: {index: 169, type: Single}
              - key: [704, 64, 768]
                speed: 415.902
                value: {index: 161, type: Single}
              - key: [704, 64, 1792]
                speed: 635.551
                value: {index: 159, type: Single}
              - key: [704, 64, 3328]
                speed: 1010.42
                value: {index: 159, type: Single}
              - key: [704, 128, 128]
                speed: 151.768
                value: {index: 157, type: Single}
              - key: [704, 128, 256]
                speed: 535.982
                value: {index: 161, type: Single}
              - key: [704, 128, 768]
                speed: 831.004
                value: {index: 158, type: Single}
              - key: [704, 128, 1792]
                speed: 1111.51
                value: {index: 173, type: Single}
              - key: [704, 128, 3328]
                speed: 1500.06
                value: {index: 168, type: Single}
              - key: [704, 256, 128]
                speed: 302.262
                value: {index: 157, type: Single}
              - key: [704, 256, 256]
                speed: 996.057
                value: {index: 169, type: Single}
              - key: [704, 256, 768]
                speed: 1616.96
                value: {index: 161, type: Single}
              - key: [704, 256, 1792]
                speed: 1941.81
                value: {index: 161, type: Single}
              - key: [704, 256, 3328]
                speed: 2166.85
                value: {index: 163, type: Single}
              - key: [704, 448, 128]
                speed: 507.163
                value: {index: 157, type: Single}
              - key: [704, 448, 256]
                speed: 1635.74
                value: {index: 169, type: Single}
              - key: [704, 448, 768]
                speed: 2231.22
                value: {index: 161, type: Single}
              - key: [704, 448, 1792]
                speed: 2559.7
                value: {index: 161, type: Single}
              - key: [704, 448, 3328]
                speed: 2693.0
                value: {index: 161, type: Single}
              - key: [704, 704, 128]
                speed: 700.517
                value: {index: 157, type: Single}
              - key: [704, 704, 256]
                speed: 1574.95
                value: {index: 161, type: Single}
              - key: [704, 704, 768]
                speed: 2156.81
                value: {index: 161, type: Single}
              - key: [704, 704, 1792]
                speed: 2409.24
                value: {index: 161, type: Single}
              - key: [704, 704, 3328]
                speed: 2854.84
                value: {index: 163, type: Single}
              - key: [704, 1024, 128]
                speed: 893.442
                value: {index: 157, type: Single}
              - key: [704, 1024, 256]
                speed: 2237.5
                value: {index: 172, type: Single}
              - key: [704, 1024, 768]
                speed: 2757.21
                value: {index: 172, type: Single}
              - key: [704, 1024, 1792]
                speed: 2965.67
                value: {index: 161, type: Single}
              - key: [704, 1024, 3328]
                speed: 3348.51
                value: {index: 165, type: Single}
              - key: [704, 1408, 128]
                speed: 1042.03
                value: {index: 155, type: Single}
              - key: [704, 1408, 256]
                speed: 2323.77
                value: {index: 172, type: Single}
              - key: [704, 1408, 768]
                speed: 2826.2
                value: {index: 161, type: Single}
              - key: [704, 1408, 1792]
                speed: 3090.7
                value: {index: 161, type: Single}
              - key: [704, 1408, 3328]
                speed: 3238.2
                value: {index: 163, type: Single}
              - key: [704, 1856, 128]
                speed: 1255.61
                value: {index: 155, type: Single}
              - key: [704, 1856, 256]
                speed: 3018.91
                value: {index: 172, type: Single}
              - key: [704, 1856, 768]
                speed: 3428.15
                value: {index: 172, type: Single}
              - key: [704, 1856, 1792]
                speed: 3677.4
                value: {index: 161, type: Single}
              - key: [704, 1856, 3328]
                speed: 3799.76
                value: {index: 158, type: Single}
              - key: [704, 2368, 128]
                speed: 1506.11
                value: {index: 156, type: Single}
              - key: [704, 2368, 256]
                speed: 3002.04
                value: {index: 172, type: Single}
              - key: [704, 2368, 768]
                speed: 3294.34
                value: {index: 172, type: Single}
              - key: [704, 2368, 1792]
                speed: 3552.7
                value: {index: 158, type: Single}
              - key: [704, 2368, 3328]
                speed: 3656.94
                value: {index: 158, type: Single}
              - key: [704, 2944, 128]
                speed: 1424.45
                value: {index: 155, type: Single}
              - key: [704, 2944, 256]
                speed: 3021.52
                value: {index: 172, type: Single}
              - key: [704, 2944, 768]
                speed: 3469.96
                value: {index: 158, type: Single}
              - key: [704, 2944, 1792]
                speed: 3754.61
                value: {index: 158, type: Single}
              - key: [704, 2944, 3328]
                speed: 3625.7
                value: {index: 158, type: Single}
              - key: [704, 3584, 128]
                speed: 1618.69
                value: {index: 154, type: Single}
              - key: [704, 3584, 256]
                speed: 3110.18
                value: {index: 164, type: Single}
              - key: [704, 3584, 768]
                speed: 3359.52
                value: {index: 158, type: Single}
              - key: [704, 3584, 1792]
                speed: 3602.42
                value: {index: 158, type: Single}
              - key: [704, 3584, 3328]
                speed: 3666.3
                value: {index: 158, type: Single}
              - key: [704, 4288, 128]
                speed: 1728.71
                value: {index: 155, type: Single}
              - key: [704, 4288, 256]
                speed: 3350.68
                value: {index: 172, type: Single}
              - key: [704, 4288, 768]
                speed: 3613.47
                value: {index: 161, type: Single}
              - key: [704, 4288, 1792]
                speed: 3864.67
                value: {index: 158, type: Single}
              - key: [704, 4288, 3328]
                speed: 3776.96
                value: {index: 158, type: Single}
              - key: [704, 5056, 128]
                speed: 1836.53
                value: {index: 155, type: Single}
              - key: [704, 5056, 256]
                speed: 3478.97
                value: {index: 172, type: Single}
              - key: [704, 5056, 768]
                speed: 3749.64
                value: {index: 174, type: Single}
              - key: [704, 5056, 1792]
                speed: 3949.43
                value: {index: 174, type: Single}
              - key: [704, 5056, 3328]
                speed: 4019.33
                value: {index: 174, type: Single}
              - key: [704, 5888, 128]
                speed: 1948.37
                value: {index: 155, type: Single}
              - key: [704, 5888, 256]
                speed: 3598.61
                value: {index: 172, type: Single}
              - key: [704, 5888, 768]
                speed: 3830.35
                value: {index: 172, type: Single}
              - key: [704, 5888, 1792]
                speed: 3959.55
                value: {index: 158, type: Single}
              - key: [704, 5888, 3328]
                speed: 3950.3
                value: {index: 158, type: Single}
              - key: [704, 6784, 128]
                speed: 2037.74
                value: {index: 155, type: Single}
              - key: [704, 6784, 256]
                speed: 3783.86
                value: {index: 172, type: Single}
              - key: [704, 6784, 768]
                speed: 3982.71
                value: {index: 172, type: Single}
              - key: [704, 6784, 1792]
                speed: 4048.94
                value: {index: 172, type: Single}
              - key: [704, 6784, 3328]
                speed: 4087.96
                value: {index: 158, type: Single}
              - key: [1024, 4, 128]
                speed: 9.55344
                value: {index: 179, type: Single}
              - key: [1024, 4, 256]
                speed: 18.4869
                value: {index: 185, type: Single}
              - key: [1024, 4, 768]
                speed: 48.6052
                value: {index: 185, type: Single}
              - key: [1024, 4, 1792]
                speed: 92.8648
                value: {index: 182, type: Single}
              - key: [1024, 4, 3328]
                speed: 136.643
                value: {index: 182, type: Single}
              - key: [1024, 64, 128]
                speed: 92.3855
                value: {index: 155, type: Single}
              - key: [1024, 64, 256]
                speed: 389.805
                value: {index: 169, type: Single}
              - key: [1024, 64, 768]
                speed: 604.367
                value: {index: 161, type: Single}
              - key: [1024, 64, 1792]
                speed: 807.929
                value: {index: 173, type: Single}
              - key: [1024, 64, 3328]
                speed: 1099.31
                value: {index: 173, type: Single}
              - key: [1024, 128, 128]
                speed: 217.999
                value: {index: 157, type: Single}
              - key: [1024, 128, 256]
                speed: 747.648
                value: {index: 161, type: Single}
              - key: [1024, 128, 768]
                speed: 1192.69
                value: {index: 161, type: Single}
              - key: [1024, 128, 1792]
                speed: 1419.74
                value: {index: 158, type: Single}
              - key: [1024, 128, 3328]
                speed: 1524.35
                value: {index: 161, type: Single}
              - key: [1024, 256, 128]
                speed: 397.188
                value: {index: 157, type: Single}
              - key: [1024, 256, 256]
                speed: 1296.54
                value: {index: 169, type: Single}
              - key: [1024, 256, 768]
                speed: 1871.06
                value: {index: 161, type: Single}
              - key: [1024, 256, 1792]
                speed: 2132.18
                value: {index: 161, type: Single}
              - key: [1024, 256, 3328]
                speed: 2239.72
                value: {index: 161, type: Single}
              - key: [1024, 448, 128]
                speed: 598.698
                value: {index: 155, type: Single}
              - key: [1024, 448, 256]
                speed: 2165.2
                value: {index: 158, type: Single}
              - key: [1024, 448, 768]
                speed: 3161.54
                value: {index: 158, type: Single}
              - key: [1024, 448, 1792]
                speed: 3663.47
                value: {index: 161, type: Single}
              - key: [1024, 448, 3328]
                speed: 3869.44
                value: {index: 161, type: Single}
              - key: [1024, 704, 128]
                speed: 863.348
                value: {index: 155, type: Single}
              - key: [1024, 704, 256]
                speed: 2153.94
                value: {index: 158, type: Single}
              - key: [1024, 704, 768]
                speed: 2698.09
                value: {index: 158, type: Single}
              - key: [1024, 704, 1792]
                speed: 3388.18
                value: {index: 158, type: Single}
              - key: [1024, 704, 3328]
                speed: 3164.76
                value: {index: 175, type: Single}
              - key: [1024, 1024, 128]
                speed: 974.287
                value: {index: 155, type: Single}
              - key: [1024, 1024, 256]
                speed: 2378.06
                value: {index: 172, type: Single}
              - key: [1024, 1024, 768]
                speed: 2733.19
                value: {index: 172, type: Single}
              - key: [1024, 1024, 1792]
                speed: 2847.39
                value: {index: 172, type: Single}
              - key: [1024, 1024, 3328]
                speed: 2883.83
                value: {index: 172, type: Single}
              - key: [1024, 1408, 128]
                speed: 1375.59
                value: {index: 155, type: Single}
              - key: [1024, 1408, 256]
                speed: 3186.28
                value: {index: 172, type: Single}
              - key: [1024, 1408, 768]
                speed: 3710.78
                value: {index: 172, type: Single}
              - key: [1024, 1408, 1792]
                speed: 4006.97
                value: {index: 158, type: Single}
              - key: [1024, 1408, 3328]
                speed: 3964.21
                value: {index: 172, type: Single}
              - key: [1024, 1856, 128]
                speed: 1565.04
                value: {index: 155, type: Single}
              - key: [1024, 1856, 256]
                speed: 3275.04
                value: {index: 172, type: Single}
              - key: [1024, 1856, 768]
                speed: 3703.11
                value: {index: 172, type: Single}
              - key: [1024, 1856, 1792]
                speed: 3998.14
                value: {index: 158, type: Single}
              - key: [1024, 1856, 3328]
                speed: 4119.35
                value: {index: 158, type: Single}
              - key: [1024, 2368, 128]
                speed: 1655.18
                value: {index: 155, type: Single}
              - key: [1024, 2368, 256]
                speed: 3444.06
                value: {index: 172, type: Single}
              - key: [1024, 2368, 768]
                speed: 3858.51
                value: {index: 172, type: Single}
              - key: [1024, 2368, 1792]
                speed: 4048.01
                value: {index: 161, type: Single}
              - key: [1024, 2368, 3328]
                speed: 4100.37
                value: {index: 158, type: Single}
              - key: [1024, 2944, 128]
                speed: 1734.43
                value: {index: 155, type: Single}
              - key: [1024, 2944, 256]
                speed: 3243.75
                value: {index: 172, type: Single}
              - key: [1024, 2944, 768]
                speed: 3542.75
                value: {index: 172, type: Single}
              - key: [1024, 2944, 1792]
                speed: 3682.23
                value: {index: 161, type: Single}
              - key: [1024, 2944, 3328]
                speed: 3714.63
                value: {index: 158, type: Single}
              - key: [1024, 3584, 128]
                speed: 1864.73
                value: {index: 155, type: Single}
              - key: [1024, 3584, 256]
                speed: 3467.39
                value: {index: 174, type: Single}
              - key: [1024, 3584, 768]
                speed: 3925.59
                value: {index: 174, type: Single}
              - key: [1024, 3584, 1792]
                speed: 4095.68
                value: {index: 174, type: Single}
              - key: [1024, 3584, 3328]
                speed: 4163.88
                value: {index: 174, type: Single}
              - key: [1024, 4288, 128]
                speed: 2006.13
                value: {index: 155, type: Single}
              - key: [1024, 4288, 256]
                speed: 3797.55
                value: {index: 172, type: Single}
              - key: [1024, 4288, 768]
                speed: 4043.43
                value: {index: 172, type: Single}
              - key: [1024, 4288, 1792]
                speed: 4117.75
                value: {index: 172, type: Single}
              - key: [1024, 4288, 3328]
                speed: 4119.95
                value: {index: 172, type: Single}
              - key: [1024, 5056, 128]
                speed: 2030.33
                value: {index: 155, type: Single}
              - key: [1024, 5056, 256]
                speed: 3738.15
                value: {index: 172, type: Single}
              - key: [1024, 5056, 768]
                speed: 3940.89
                value: {index: 172, type: Single}
              - key: [1024, 5056, 1792]
                speed: 3991.76
                value: {index: 172, type: Single}
              - key: [1024, 5056, 3328]
                speed: 4015.24
                value: {index: 172, type: Single}
              - key: [1024, 5888, 128]
                speed: 2114.62
                value: {index: 155, type: Single}
              - key: [1024, 5888, 256]
                speed: 3704.65
                value: {index: 172, type: Single}
              - key: [1024, 5888, 768]
                speed: 3895.64
                value: {index: 172, type: Single}
              - key: [1024, 5888, 1792]
                speed: 3944.64
                value: {index: 172, type: Single}
              - key: [1024, 5888, 3328]
                speed: 3948.79
                value: {index: 172, type: Single}
              - key: [1024, 6784, 128]
                speed: 2163.7
                value: {index: 155, type: Single}
              - key: [1024, 6784, 256]
                speed: 3577.38
                value: {index: 172, type: Single}
              - key: [1024, 6784, 768]
                speed: 3883.84
                value: {index: 172, type: Single}
              - key: [1024, 6784, 1792]
                speed: 3944.76
                value: {index: 172, type: Single}
              - key: [1024, 6784, 3328]
                speed: 3960.15
                value: {index: 174, type: Single}
              - key: [1408, 4, 128]
                speed: 12.9846
                value: {index: 179, type: Single}
              - key: [1408, 4, 256]
                speed: 25.3124
                value: {index: 185, type: Single}
              - key: [1408, 4, 768]
                speed: 65.9356
                value: {index: 185, type: Single}
              - key: [1408, 4, 1792]
                speed: 126.918
                value: {index: 182, type: Single}
              - key: [1408, 4, 3328]
                speed: 182.754
                value: {index: 182, type: Single}
              - key: [1408, 64, 128]
                speed: 155.198
                value: {index: 157, type: Single}
              - key: [1408, 64, 256]
                speed: 531.047
                value: {index: 169, type: Single}
              - key: [1408, 64, 768]
                speed: 830.207
                value: {index: 161, type: Single}
              - key: [1408, 64, 1792]
                speed: 1144.93
                value: {index: 173, type: Single}
              - key: [1408, 64, 3328]
                speed: 1539.49
                value: {index: 168, type: Single}
              - key: [1408, 128, 128]
                speed: 304.819
                value: {index: 157, type: Single}
              - key: [1408, 128, 256]
                speed: 1008.25
                value: {index: 169, type: Single}
              - key: [1408, 128, 768]
                speed: 1629.14
                value: {index: 161, type: Single}
              - key: [1408, 128, 1792]
                speed: 1951.19
                value: {index: 161, type: Single}
              - key: [1408, 128, 3328]
                speed: 2229.35
                value: {index: 163, type: Single}
              - key: [1408, 256, 128]
                speed: 570.442
                value: {index: 157, type: Single}
              - key: [1408, 256, 256]
                speed: 1769.07
                value: {index: 161, type: Single}
              - key: [1408, 256, 768]
                speed: 2572.71
                value: {index: 161, type: Single}
              - key: [1408, 256, 1792]
                speed: 2924.32
                value: {index: 161, type: Single}
              - key: [1408, 256, 3328]
                speed: 3075.82
                value: {index: 161, type: Single}
              - key: [1408, 448, 128]
                speed: 856.026
                value: {index: 157, type: Single}
              - key: [1408, 448, 256]
                speed: 2006.47
                value: {index: 161, type: Single}
              - key: [1408, 448, 768]
                speed: 2737.58
                value: {index: 161, type: Single}
              - key: [1408, 448, 1792]
                speed: 3055.04
                value: {index: 161, type: Single}
              - key: [1408, 448, 3328]
                speed: 3183.0
                value: {index: 161, type: Single}
              - key: [1408, 704, 128]
                speed: 1005.05
                value: {index: 155, type: Single}
              - key: [1408, 704, 256]
                speed: 2339.19
                value: {index: 172, type: Single}
              - key: [1408, 704, 768]
                speed: 2823.69
                value: {index: 161, type: Single}
              - key: [1408, 704, 1792]
                speed: 3091.13
                value: {index: 161, type: Single}
              - key: [1408, 704, 3328]
                speed: 3259.19
                value: {index: 163, type: Single}
              - key: [1408, 1024, 128]
                speed: 1363.4
                value: {index: 155, type: Single}
              - key: [1408, 1024, 256]
                speed: 2901.72
                value: {index: 172, type: Single}
              - key: [1408, 1024, 768]
                speed: 3312.88
                value: {index: 172, type: Single}
              - key: [1408, 1024, 1792]
                speed: 3398.52
                value: {index: 172, type: Single}
              - key: [1408, 1024, 3328]
                speed: 3589.81
                value: {index: 176, type: Single}
              - key: [1408, 1408, 128]
                speed: 1424.95
                value: {index: 155, type: Single}
              - key: [1408, 1408, 256]
                speed: 2895.43
                value: {index: 172, type: Single}
              - key: [1408, 1408, 768]
                speed: 3333.04
                value: {index: 158, type: Single}
              - key: [1408, 1408, 1792]
                speed: 3598.35
                value: {index: 158, type: Single}
              - key: [1408, 1408, 3328]
                speed: 3492.59
                value: {index: 177, type: Single}
              - key: [1408, 1856, 128]
                speed: 1688.69
                value: {index: 154, type: Single}
              - key: [1408, 1856, 256]
                speed: 3321.05
                value: {index: 172, type: Single}
              - key: [1408, 1856, 768]
                speed: 3641.63
                value: {index: 158, type: Single}
              - key: [1408, 1856, 1792]
                speed: 3920.22
                value: {index: 161, type: Single}
              - key: [1408, 1856, 3328]
                speed: 3682.38
                value: {index: 161, type: Single}
              - key: [1408, 2368, 128]
                speed: 1845.25
                value: {index: 155, type: Single}
              - key: [1408, 2368, 256]
                speed: 3661.38
                value: {index: 172, type: Single}
              - key: [1408, 2368, 768]
                speed: 3916.28
                value: {index: 172, type: Single}
              - key: [1408, 2368, 1792]
                speed: 4080.47
                value: {index: 161, type: Single}
              - key: [1408, 2368, 3328]
                speed: 4019.02
                value: {index: 172, type: Single}
              - key: [1408, 2944, 128]
                speed: 1924.62
                value: {index: 155, type: Single}
              - key: [1408, 2944, 256]
                speed: 3613.32
                value: {index: 172, type: Single}
              - key: [1408, 2944, 768]
                speed: 3837.0
                value: {index: 172, type: Single}
              - key: [1408, 2944, 1792]
                speed: 3891.51
                value: {index: 172, type: Single}
              - key: [1408, 2944, 3328]
                speed: 3914.16
                value: {index: 172, type: Single}
              - key: [1408, 3584, 128]
                speed: 2021.04
                value: {index: 155, type: Single}
              - key: [1408, 3584, 256]
                speed: 3387.47
                value: {index: 171, type: Single}
              - key: [1408, 3584, 768]
                speed: 3652.59
                value: {index: 161, type: Single}
              - key: [1408, 3584, 1792]
                speed: 3720.27
                value: {index: 161, type: Single}
              - key: [1408, 3584, 3328]
                speed: 3791.52
                value: {index: 175, type: Single}
              - key: [1408, 4288, 128]
                speed: 2123.08
                value: {index: 155, type: Single}
              - key: [1408, 4288, 256]
                speed: 3756.56
                value: {index: 172, type: Single}
              - key: [1408, 4288, 768]
                speed: 3913.84
                value: {index: 172, type: Single}
              - key: [1408, 4288, 1792]
                speed: 3960.64
                value: {index: 172, type: Single}
              - key: [1408, 4288, 3328]
                speed: 3974.62
                value: {index: 172, type: Single}
              - key: [1408, 5056, 128]
                speed: 2168.32
                value: {index: 154, type: Single}
              - key: [1408, 5056, 256]
                speed: 3869.6
                value: {index: 172, type: Single}
              - key: [1408, 5056, 768]
                speed: 4011.8
                value: {index: 172, type: Single}
              - key: [1408, 5056, 1792]
                speed: 4053.85
                value: {index: 172, type: Single}
              - key: [1408, 5056, 3328]
                speed: 4068.92
                value: {index: 172, type: Single}
              - key: [1408, 5888, 128]
                speed: 2287.38
                value: {index: 155, type: Single}
              - key: [1408, 5888, 256]
                speed: 3954.83
                value: {index: 172, type: Single}
              - key: [1408, 5888, 768]
                speed: 4130.53
                value: {index: 172, type: Single}
              - key: [1408, 5888, 1792]
                speed: 4172.63
                value: {index: 172, type: Single}
              - key: [1408, 5888, 3328]
                speed: 4186.47
                value: {index: 172, type: Single}
              - key: [1408, 6784, 128]
                speed: 2379.79
                value: {index: 154, type: Single}
              - key: [1408, 6784, 256]
                speed: 3993.99
                value: {index: 164, type: Single}
              - key: [1408, 6784, 768]
                speed: 4138.18
                value: {index: 164, type: Single}
              - key: [1408, 6784, 1792]
                speed: 4175.93
                value: {index: 164, type: Single}
              - key: [1408, 6784, 3328]
                speed: 4193.89
                value: {index: 171, type: Single}
              - key: [1856, 4, 128]
                speed: 16.8251
                value: {index: 179, type: Single}
              - key: [1856, 4, 256]
                speed: 32.5882
                value: {index: 184, type: Single}
              - key: [1856, 4, 768]
                speed: 84.4436
                value: {index: 182, type: Single}
              - key: [1856, 4, 1792]
                speed: 154.984
                value: {index: 182, type: Single}
              - key: [1856, 4, 3328]
                speed: 211.534
                value: {index: 182, type: Single}
              - key: [1856, 64, 128]
                speed: 200.479
                value: {index: 157, type: Single}
              - key: [1856, 64, 256]
                speed: 691.107
                value: {index: 161, type: Single}
              - key: [1856, 64, 768]
                speed: 1088.1
                value: {index: 161, type: Single}
              - key: [1856, 64, 1792]
                speed: 1489.79
                value: {index: 173, type: Single}
              - key: [1856, 64, 3328]
                speed: 1937.05
                value: {index: 173, type: Single}
              - key: [1856, 128, 128]
                speed: 388.262
                value: {index: 157, type: Single}
              - key: [1856, 128, 256]
                speed: 1290.69
                value: {index: 169, type: Single}
              - key: [1856, 128, 768]
                speed: 2082.79
                value: {index: 161, type: Single}
              - key: [1856, 128, 1792]
                speed: 2534.06
                value: {index: 161, type: Single}
              - key: [1856, 128, 3328]
                speed: 2744.47
                value: {index: 158, type: Single}
              - key: [1856, 256, 128]
                speed: 700.016
                value: {index: 157, type: Single}
              - key: [1856, 256, 256]
                speed: 2245.84
                value: {index: 161, type: Single}
              - key: [1856, 256, 768]
                speed: 3329.42
                value: {index: 161, type: Single}
              - key: [1856, 256, 1792]
                speed: 3818.82
                value: {index: 161, type: Single}
              - key: [1856, 256, 3328]
                speed: 4030.52
                value: {index: 158, type: Single}
              - key: [1856, 448, 128]
                speed: 1056.7
                value: {index: 157, type: Single}
              - key: [1856, 448, 256]
                speed: 2538.89
                value: {index: 172, type: Single}
              - key: [1856, 448, 768]
                speed: 3133.99
                value: {index: 172, type: Single}
              - key: [1856, 448, 1792]
                speed: 3465.82
                value: {index: 161, type: Single}
              - key: [1856, 448, 3328]
                speed: 3601.24
                value: {index: 158, type: Single}
              - key: [1856, 704, 128]
                speed: 1258.64
                value: {index: 155, type: Single}
              - key: [1856, 704, 256]
                speed: 3021.1
                value: {index: 172, type: Single}
              - key: [1856, 704, 768]
                speed: 3427.21
                value: {index: 172, type: Single}
              - key: [1856, 704, 1792]
                speed: 3674.62
                value: {index: 161, type: Single}
              - key: [1856, 704, 3328]
                speed: 3796.58
                value: {index: 161, type: Single}
              - key: [1856, 1024, 128]
                speed: 1544.37
                value: {index: 156, type: Single}
              - key: [1856, 1024, 256]
                speed: 3114.05
                value: {index: 172, type: Single}
              - key: [1856, 1024, 768]
                speed: 3481.25
                value: {index: 172, type: Single}
              - key: [1856, 1024, 1792]
                speed: 3653.64
                value: {index: 172, type: Single}
              - key: [1856, 1024, 3328]
                speed: 3710.99
                value: {index: 172, type: Single}
              - key: [1856, 1408, 128]
                speed: 1681.22
                value: {index: 154, type: Single}
              - key: [1856, 1408, 256]
                speed: 3321.05
                value: {index: 172, type: Single}
              - key: [1856, 1408, 768]
                speed: 3640.04
                value: {index: 158, type: Single}
              - key: [1856, 1408, 1792]
                speed: 3736.07
                value: {index: 161, type: Single}
              - key: [1856, 1408, 3328]
                speed: 3717.89
                value: {index: 161, type: Single}
              - key: [1856, 1856, 128]
                speed: 1826.84
                value: {index: 155, type: Single}
              - key: [1856, 1856, 256]
                speed: 3399.06
                value: {index: 172, type: Single}
              - key: [1856, 1856, 768]
                speed: 3695.33
                value: {index: 174, type: Single}
              - key: [1856, 1856, 1792]
                speed: 3843.69
                value: {index: 174, type: Single}
              - key: [1856, 1856, 3328]
                speed: 3908.07
                value: {index: 161, type: Single}
              - key: [1856, 2368, 128]
                speed: 2019.54
                value: {index: 155, type: Single}
              - key: [1856, 2368, 256]
                speed: 3836.34
                value: {index: 172, type: Single}
              - key: [1856, 2368, 768]
                speed: 4063.18
                value: {index: 172, type: Single}
              - key: [1856, 2368, 1792]
                speed: 4127.46
                value: {index: 172, type: Single}
              - key: [1856, 2368, 3328]
                speed: 4174.92
                value: {index: 161, type: Single}
              - key: [1856, 2944, 128]
                speed: 2090.01
                value: {index: 154, type: Single}
              - key: [1856, 2944, 256]
                speed: 3684.16
                value: {index: 172, type: Single}
              - key: [1856, 2944, 768]
                speed: 3834.15
                value: {index: 164, type: Single}
              - key: [1856, 2944, 1792]
                speed: 3875.96
                value: {index: 172, type: Single}
              - key: [1856, 2944, 3328]
                speed: 3898.96
                value: {index: 161, type: Single}
              - key: [1856, 3584, 128]
                speed: 2189.48
                value: {index: 154, type: Single}
              - key: [1856, 3584, 256]
                speed: 3797.02
                value: {index: 164, type: Single}
              - key: [1856, 3584, 768]
                speed: 4042.43
                value: {index: 164, type: Single}
              - key: [1856, 3584, 1792]
                speed: 4099.34
                value: {index: 171, type: Single}
              - key: [1856, 3584, 3328]
                speed: 4119.44
                value: {index: 171, type: Single}
              - key: [1856, 4288, 128]
                speed: 2232.8
                value: {index: 155, type: Single}
              - key: [1856, 4288, 256]
                speed: 3843.54
                value: {index: 172, type: Single}
              - key: [1856, 4288, 768]
                speed: 3972.85
                value: {index: 172, type: Single}
              - key: [1856, 4288, 1792]
                speed: 4007.98
                value: {index: 172, type: Single}
              - key: [1856, 4288, 3328]
                speed: 4020.58
                value: {index: 172, type: Single}
              - key: [1856, 5056, 128]
                speed: 2302.46
                value: {index: 154, type: Single}
              - key: [1856, 5056, 256]
                speed: 3887.2
                value: {index: 172, type: Single}
              - key: [1856, 5056, 768]
                speed: 4065.98
                value: {index: 171, type: Single}
              - key: [1856, 5056, 1792]
                speed: 4106.76
                value: {index: 164, type: Single}
              - key: [1856, 5056, 3328]
                speed: 4123.63
                value: {index: 171, type: Single}
              - key: [1856, 5888, 128]
                speed: 2349.51
                value: {index: 155, type: Single}
              - key: [1856, 5888, 256]
                speed: 3939.39
                value: {index: 172, type: Single}
              - key: [1856, 5888, 768]
                speed: 4052.77
                value: {index: 172, type: Single}
              - key: [1856, 5888, 1792]
                speed: 4117.44
                value: {index: 174, type: Single}
              - key: [1856, 5888, 3328]
                speed: 4158.91
                value: {index: 174, type: Single}
              - key: [1856, 6784, 128]
                speed: 2409.21
                value: {index: 155, type: Single}
              - key: [1856, 6784, 256]
                speed: 4101.34
                value: {index: 164, type: Single}
              - key: [1856, 6784, 768]
                speed: 4240.62
                value: {index: 164, type: Single}
              - key: [1856, 6784, 1792]
                speed: 4276.65
                value: {index: 164, type: Single}
              - key: [1856, 6784, 3328]
                speed: 4287.21
                value: {index: 164, type: Single}
              - key: [2368, 4, 128]
                speed: 21.5581
                value: {index: 179, type: Single}
              - key: [2368, 4, 256]
                speed: 40.9047
                value: {index: 181, type: Single}
              - key: [2368, 4, 768]
                speed: 104.639
                value: {index: 182, type: Single}
              - key: [2368, 4, 1792]
                speed: 180.727
                value: {index: 182, type: Single}
              - key: [2368, 4, 3328]
                speed: 209.371
                value: {index: 181, type: Single}
              - key: [2368, 64, 128]
                speed: 257.961
                value: {index: 157, type: Single}
              - key: [2368, 64, 256]
                speed: 870.676
                value: {index: 161, type: Single}
              - key: [2368, 64, 768]
                speed: 1368.67
                value: {index: 161, type: Single}
              - key: [2368, 64, 1792]
                speed: 1628.97
                value: {index: 158, type: Single}
              - key: [2368, 64, 3328]
                speed: 1970.18
                value: {index: 163, type: Single}
              - key: [2368, 128, 128]
                speed: 485.452
                value: {index: 157, type: Single}
              - key: [2368, 128, 256]
                speed: 1542.02
                value: {index: 169, type: Single}
              - key: [2368, 128, 768]
                speed: 2155.41
                value: {index: 161, type: Single}
              - key: [2368, 128, 1792]
                speed: 2456.41
                value: {index: 161, type: Single}
              - key: [2368, 128, 3328]
                speed: 2755.49
                value: {index: 163, type: Single}
              - key: [2368, 256, 128]
                speed: 808.277
                value: {index: 157, type: Single}
              - key: [2368, 256, 256]
                speed: 1914.97
                value: {index: 158, type: Single}
              - key: [2368, 256, 768]
                speed: 2619.08
                value: {index: 161, type: Single}
              - key: [2368, 256, 1792]
                speed: 2927.15
                value: {index: 158, type: Single}
              - key: [2368, 256, 3328]
                speed: 3172.11
                value: {index: 177, type: Single}
              - key: [2368, 448, 128]
                speed: 1038.79
                value: {index: 155, type: Single}
              - key: [2368, 448, 256]
                speed: 2496.15
                value: {index: 172, type: Single}
              - key: [2368, 448, 768]
                speed: 3013.1
                value: {index: 161, type: Single}
              - key: [2368, 448, 1792]
                speed: 3300.01
                value: {index: 161, type: Single}
              - key: [2368, 448, 3328]
                speed: 3408.93
                value: {index: 158, type: Single}
              - key: [2368, 704, 128]
                speed: 1443.35
                value: {index: 156, type: Single}
              - key: [2368, 704, 256]
                speed: 3000.35
                value: {index: 172, type: Single}
              - key: [2368, 704, 768]
                speed: 3504.25
                value: {index: 158, type: Single}
              - key: [2368, 704, 1792]
                speed: 3550.0
                value: {index: 161, type: Single}
              - key: [2368, 704, 3328]
                speed: 3647.13
                value: {index: 161, type: Single}
              - key: [2368, 1024, 128]
                speed: 1546.33
                value: {index: 154, type: Single}
              - key: [2368, 1024, 256]
                speed: 2945.89
                value: {index: 171, type: Single}
              - key: [2368, 1024, 768]
                speed: 3243.02
                value: {index: 171, type: Single}
              - key: [2368, 1024, 1792]
                speed: 3334.33
                value: {index: 167, type: Single}
              - key: [2368, 1024, 3328]
                speed: 3654.42
                value: {index: 165, type: Single}
              - key: [2368, 1408, 128]
                speed: 1847.81
                value: {index: 155, type: Single}
              - key: [2368, 1408, 256]
                speed: 3657.61
                value: {index: 172, type: Single}
              - key: [2368, 1408, 768]
                speed: 3916.76
                value: {index: 172, type: Single}
              - key: [2368, 1408, 1792]
                speed: 3990.43
                value: {index: 172, type: Single}
              - key: [2368, 1408, 3328]
                speed: 4020.65
                value: {index: 172, type: Single}
              - key: [2368, 1856, 128]
                speed: 2018.96
                value: {index: 155, type: Single}
              - key: [2368, 1856, 256]
                speed: 3839.48
                value: {index: 172, type: Single}
              - key: [2368, 1856, 768]
                speed: 4061.62
                value: {index: 172, type: Single}
              - key: [2368, 1856, 1792]
                speed: 4128.67
                value: {index: 172, type: Single}
              - key: [2368, 1856, 3328]
                speed: 4149.44
                value: {index: 172, type: Single}
              - key: [2368, 2368, 128]
                speed: 2102.13
                value: {index: 155, type: Single}
              - key: [2368, 2368, 256]
                speed: 3765.74
                value: {index: 172, type: Single}
              - key: [2368, 2368, 768]
                speed: 3927.57
                value: {index: 171, type: Single}
              - key: [2368, 2368, 1792]
                speed: 3980.93
                value: {index: 164, type: Single}
              - key: [2368, 2368, 3328]
                speed: 3993.31
                value: {index: 172, type: Single}
              - key: [2368, 2944, 128]
                speed: 2173.05
                value: {index: 155, type: Single}
              - key: [2368, 2944, 256]
                speed: 3797.83
                value: {index: 172, type: Single}
              - key: [2368, 2944, 768]
                speed: 3930.31
                value: {index: 172, type: Single}
              - key: [2368, 2944, 1792]
                speed: 3974.12
                value: {index: 172, type: Single}
              - key: [2368, 2944, 3328]
                speed: 3985.41
                value: {index: 172, type: Single}
              - key: [2368, 3584, 128]
                speed: 2301.54
                value: {index: 154, type: Single}
              - key: [2368, 3584, 256]
                speed: 3866.47
                value: {index: 171, type: Single}
              - key: [2368, 3584, 768]
                speed: 4046.01
                value: {index: 164, type: Single}
              - key: [2368, 3584, 1792]
                speed: 4095.54
                value: {index: 171, type: Single}
              - key: [2368, 3584, 3328]
                speed: 4111.9
                value: {index: 171, type: Single}
              - key: [2368, 4288, 128]
                speed: 2346.73
                value: {index: 155, type: Single}
              - key: [2368, 4288, 256]
                speed: 3993.7
                value: {index: 172, type: Single}
              - key: [2368, 4288, 768]
                speed: 4112.83
                value: {index: 172, type: Single}
              - key: [2368, 4288, 1792]
                speed: 4149.93
                value: {index: 172, type: Single}
              - key: [2368, 4288, 3328]
                speed: 4160.53
                value: {index: 172, type: Single}
              - key: [2368, 5056, 128]
                speed: 2383.21
                value: {index: 154, type: Single}
              - key: [2368, 5056, 256]
                speed: 3988.79
                value: {index: 172, type: Single}
              - key: [2368, 5056, 768]
                speed: 4089.12
                value: {index: 172, type: Single}
              - key: [2368, 5056, 1792]
                speed: 4118.79
                value: {index: 172, type: Single}
              - key: [2368, 5056, 3328]
                speed: 4129.48
                value: {index: 172, type: Single}
              - key: [2368, 5888, 128]
                speed: 2439.42
                value: {index: 154, type: Single}
              - key: [2368, 5888, 256]
                speed: 4023.53
                value: {index: 172, type: Single}
              - key: [2368, 5888, 768]
                speed: 4111.91
                value: {index: 172, type: Single}
              - key: [2368, 5888, 1792]
                speed: 4137.88
                value: {index: 172, type: Single}
              - key: [2368, 5888, 3328]
                speed: 4149.61
                value: {index: 172, type: Single}
              - key: [2368, 6784, 128]
                speed: 2500.56
                value: {index: 154, type: Single}
              - key: [2368, 6784, 256]
                speed: 4073.09
                value: {index: 172, type: Single}
              - key: [2368, 6784, 768]
                speed: 4178.48
                value: {index: 164, type: Single}
              - key: [2368, 6784, 1792]
                speed: 4204.59
                value: {index: 171, type: Single}
              - key: [2368, 6784, 3328]
                speed: 4218.14
                value: {index: 171, type: Single}
              - key: [2944, 4, 128]
                speed: 26.9168
                value: {index: 179, type: Single}
              - key: [2944, 4, 256]
                speed: 50.786
                value: {index: 181, type: Single}
              - key: [2944, 4, 768]
                speed: 120.394
                value: {index: 182, type: Single}
              - key: [2944, 4, 1792]
                speed: 203.067
                value: {index: 185, type: Single}
              - key: [2944, 4, 3328]
                speed: 253.563
                value: {index: 181, type: Single}
              - key: [2944, 64, 128]
                speed: 317.332
                value: {index: 157, type: Single}
              - key: [2944, 64, 256]
                speed: 1046.76
                value: {index: 161, type: Single}
              - key: [2944, 64, 768]
                speed: 1687.31
                value: {index: 161, type: Single}
              - key: [2944, 64, 1792]
                speed: 2012.65
                value: {index: 158, type: Single}
              - key: [2944, 64, 3328]
                speed: 2181.49
                value: {index: 158, type: Single}
              - key: [2944, 128, 128]
                speed: 581.419
                value: {index: 157, type: Single}
              - key: [2944, 128, 256]
                speed: 1843.83
                value: {index: 161, type: Single}
              - key: [2944, 128, 768]
                speed: 2673.75
                value: {index: 161, type: Single}
              - key: [2944, 128, 1792]
                speed: 3056.13
                value: {index: 161, type: Single}
              - key: [2944, 128, 3328]
                speed: 3194.01
                value: {index: 161, type: Single}
              - key: [2944, 256, 128]
                speed: 942.08
                value: {index: 157, type: Single}
              - key: [2944, 256, 256]
                speed: 2262.41
                value: {index: 172, type: Single}
              - key: [2944, 256, 768]
                speed: 2832.88
                value: {index: 172, type: Single}
              - key: [2944, 256, 1792]
                speed: 3139.1
                value: {index: 158, type: Single}
              - key: [2944, 256, 3328]
                speed: 3264.52
                value: {index: 158, type: Single}
              - key: [2944, 448, 128]
                speed: 1261.36
                value: {index: 155, type: Single}
              - key: [2944, 448, 256]
                speed: 3078.42
                value: {index: 172, type: Single}
              - key: [2944, 448, 768]
                speed: 3467.02
                value: {index: 172, type: Single}
              - key: [2944, 448, 1792]
                speed: 3698.96
                value: {index: 158, type: Single}
              - key: [2944, 448, 3328]
                speed: 3829.87
                value: {index: 161, type: Single}
              - key: [2944, 704, 128]
                speed: 1502.55
                value: {index: 155, type: Single}
              - key: [2944, 704, 256]
                speed: 3029.81
                value: {index: 172, type: Single}
              - key: [2944, 704, 768]
                speed: 3478.45
                value: {index: 161, type: Single}
              - key: [2944, 704, 1792]
                speed: 3542.33
                value: {index: 161, type: Single}
              - key: [2944, 704, 3328]
                speed: 3637.63
                value: {index: 161, type: Single}
              - key: [2944, 1024, 128]
                speed: 1581.98
                value: {index: 155, type: Single}
              - key: [2944, 1024, 256]
                speed: 2908.32
                value: {index: 174, type: Single}
              - key: [2944, 1024, 768]
                speed: 3268.29
                value: {index: 174, type: Single}
              - key: [2944, 1024, 1792]
                speed: 3388.28
                value: {index: 174, type: Single}
              - key: [2944, 1024, 3328]
                speed: 3623.83
                value: {index: 162, type: Single}
              - key: [2944, 1408, 128]
                speed: 1943.8
                value: {index: 155, type: Single}
              - key: [2944, 1408, 256]
                speed: 3632.12
                value: {index: 172, type: Single}
              - key: [2944, 1408, 768]
                speed: 3835.15
                value: {index: 172, type: Single}
              - key: [2944, 1408, 1792]
                speed: 3891.51
                value: {index: 172, type: Single}
              - key: [2944, 1408, 3328]
                speed: 3912.3
                value: {index: 172, type: Single}
              - key: [2944, 1856, 128]
                speed: 2084.03
                value: {index: 154, type: Single}
              - key: [2944, 1856, 256]
                speed: 3676.41
                value: {index: 172, type: Single}
              - key: [2944, 1856, 768]
                speed: 3832.47
                value: {index: 172, type: Single}
              - key: [2944, 1856, 1792]
                speed: 3877.93
                value: {index: 172, type: Single}
              - key: [2944, 1856, 3328]
                speed: 3892.55
                value: {index: 171, type: Single}
              - key: [2944, 2368, 128]
                speed: 2182.4
                value: {index: 155, type: Single}
              - key: [2944, 2368, 256]
                speed: 3792.02
                value: {index: 172, type: Single}
              - key: [2944, 2368, 768]
                speed: 3930.78
                value: {index: 172, type: Single}
              - key: [2944, 2368, 1792]
                speed: 3970.99
                value: {index: 172, type: Single}
              - key: [2944, 2368, 3328]
                speed: 3984.42
                value: {index: 172, type: Single}
              - key: [2944, 2944, 128]
                speed: 2350.01
                value: {index: 154, type: Single}
              - key: [2944, 2944, 256]
                speed: 3973.47
                value: {index: 164, type: Single}
              - key: [2944, 2944, 768]
                speed: 4146.13
                value: {index: 164, type: Single}
              - key: [2944, 2944, 1792]
                speed: 4186.12
                value: {index: 171, type: Single}
              - key: [2944, 2944, 3328]
                speed: 4199.12
                value: {index: 171, type: Single}
              - key: [2944, 3584, 128]
                speed: 2416.56
                value: {index: 154, type: Single}
              - key: [2944, 3584, 256]
                speed: 4007.14
                value: {index: 171, type: Single}
              - key: [2944, 3584, 768]
                speed: 4170.99
                value: {index: 171, type: Single}
              - key: [2944, 3584, 1792]
                speed: 4209.17
                value: {index: 171, type: Single}
              - key: [2944, 3584, 3328]
                speed: 4228.98
                value: {index: 171, type: Single}
              - key: [2944, 4288, 128]
                speed: 2496.38
                value: {index: 154, type: Single}
              - key: [2944, 4288, 256]
                speed: 4100.33
                value: {index: 171, type: Single}
              - key: [2944, 4288, 768]
                speed: 4242.43
                value: {index: 171, type: Single}
              - key: [2944, 4288, 1792]
                speed: 4292.66
                value: {index: 171, type: Single}
              - key: [2944, 4288, 3328]
                speed: 4302.74
                value: {index: 171, type: Single}
              - key: [2944, 5056, 128]
                speed: 2467.45
                value: {index: 154, type: Single}
              - key: [2944, 5056, 256]
                speed: 4018.19
                value: {index: 172, type: Single}
              - key: [2944, 5056, 768]
                speed: 4110.19
                value: {index: 172, type: Single}
              - key: [2944, 5056, 1792]
                speed: 4195.67
                value: {index: 174, type: Single}
              - key: [2944, 5056, 3328]
                speed: 4242.36
                value: {index: 174, type: Single}
              - key: [2944, 5888, 128]
                speed: 2565.43
                value: {index: 154, type: Single}
              - key: [2944, 5888, 256]
                speed: 4115.57
                value: {index: 171, type: Single}
              - key: [2944, 5888, 768]
                speed: 4258.38
                value: {index: 171, type: Single}
              - key: [2944, 5888, 1792]
                speed: 4290.43
                value: {index: 171, type: Single}
              - key: [2944, 5888, 3328]
                speed: 4306.91
                value: {index: 171, type: Single}
              - key: [2944, 6784, 128]
                speed: 2565.87
                value: {index: 154, type: Single}
              - key: [2944, 6784, 256]
                speed: 4112.92
                value: {index: 164, type: Single}
              - key: [2944, 6784, 768]
                speed: 4228.86
                value: {index: 164, type: Single}
              - key: [2944, 6784, 1792]
                speed: 4259.01
                value: {index: 164, type: Single}
              - key: [2944, 6784, 3328]
                speed: 4265.75
                value: {index: 164, type: Single}
              - key: [3584, 4, 128]
                speed: 32.7683
                value: {index: 179, type: Single}
              - key: [3584, 4, 256]
                speed: 59.1175
                value: {index: 184, type: Single}
              - key: [3584, 4, 768]
                speed: 139.438
                value: {index: 181, type: Single}
              - key: [3584, 4, 1792]
                speed: 221.927
                value: {index: 184, type: Single}
              - key: [3584, 4, 3328]
                speed: 283.047
                value: {index: 181, type: Single}
              - key: [3584, 64, 128]
                speed: 356.659
                value: {index: 157, type: Single}
              - key: [3584, 64, 256]
                speed: 1227.43
                value: {index: 169, type: Single}
              - key: [3584, 64, 768]
                speed: 1985.58
                value: {index: 161, type: Single}
              - key: [3584, 64, 1792]
                speed: 2416.76
                value: {index: 158, type: Single}
              - key: [3584, 64, 3328]
                speed: 2631.56
                value: {index: 161, type: Single}
              - key: [3584, 128, 128]
                speed: 619.935
                value: {index: 157, type: Single}
              - key: [3584, 128, 256]
                speed: 2204.21
                value: {index: 161, type: Single}
              - key: [3584, 128, 768]
                speed: 3193.63
                value: {index: 161, type: Single}
              - key: [3584, 128, 1792]
                speed: 3666.09
                value: {index: 161, type: Single}
              - key: [3584, 128, 3328]
                speed: 3874.94
                value: {index: 161, type: Single}
              - key: [3584, 256, 128]
                speed: 1053.85
                value: {index: 155, type: Single}
              - key: [3584, 256, 256]
                speed: 2595.94
                value: {index: 172, type: Single}
              - key: [3584, 256, 768]
                speed: 3396.85
                value: {index: 158, type: Single}
              - key: [3584, 256, 1792]
                speed: 3796.1
                value: {index: 158, type: Single}
              - key: [3584, 256, 3328]
                speed: 3965.53
                value: {index: 158, type: Single}
              - key: [3584, 448, 128]
                speed: 1310.05
                value: {index: 155, type: Single}
              - key: [3584, 448, 256]
                speed: 2868.8
                value: {index: 172, type: Single}
              - key: [3584, 448, 768]
                speed: 3377.32
                value: {index: 158, type: Single}
              - key: [3584, 448, 1792]
                speed: 3668.9
                value: {index: 158, type: Single}
              - key: [3584, 448, 3328]
                speed: 3782.24
                value: {index: 158, type: Single}
              - key: [3584, 704, 128]
                speed: 1617.39
                value: {index: 154, type: Single}
              - key: [3584, 704, 256]
                speed: 3221.88
                value: {index: 172, type: Single}
              - key: [3584, 704, 768]
                speed: 3509.94
                value: {index: 158, type: Single}
              - key: [3584, 704, 1792]
                speed: 3776.44
                value: {index: 158, type: Single}
              - key: [3584, 704, 3328]
                speed: 3695.08
                value: {index: 161, type: Single}
              - key: [3584, 1024, 128]
                speed: 1824.74
                value: {index: 154, type: Single}
              - key: [3584, 1024, 256]
                speed: 3451.09
                value: {index: 174, type: Single}
              - key: [3584, 1024, 768]
                speed: 3930.41
                value: {index: 174, type: Single}
              - key: [3584, 1024, 1792]
                speed: 4101.81
                value: {index: 174, type: Single}
              - key: [3584, 1024, 3328]
                speed: 4157.98
                value: {index: 174, type: Single}
              - key: [3584, 1408, 128]
                speed: 2027.13
                value: {index: 155, type: Single}
              - key: [3584, 1408, 256]
                speed: 3664.19
                value: {index: 172, type: Single}
              - key: [3584, 1408, 768]
                speed: 3843.87
                value: {index: 172, type: Single}
              - key: [3584, 1408, 1792]
                speed: 3892.98
                value: {index: 172, type: Single}
              - key: [3584, 1408, 3328]
                speed: 3911.48
                value: {index: 172, type: Single}
              - key: [3584, 1856, 128]
                speed: 2196.26
                value: {index: 154, type: Single}
              - key: [3584, 1856, 256]
                speed: 3856.87
                value: {index: 172, type: Single}
              - key: [3584, 1856, 768]
                speed: 4012.71
                value: {index: 164, type: Single}
              - key: [3584, 1856, 1792]
                speed: 4075.23
                value: {index: 164, type: Single}
              - key: [3584, 1856, 3328]
                speed: 4102.71
                value: {index: 164, type: Single}
              - key: [3584, 2368, 128]
                speed: 2305.45
                value: {index: 154, type: Single}
              - key: [3584, 2368, 256]
                speed: 3876.41
                value: {index: 172, type: Single}
              - key: [3584, 2368, 768]
                speed: 4021.64
                value: {index: 164, type: Single}
              - key: [3584, 2368, 1792]
                speed: 4095.54
                value: {index: 164, type: Single}
              - key: [3584, 2368, 3328]
                speed: 4106.78
                value: {index: 164, type: Single}
              - key: [3584, 2944, 128]
                speed: 2406.23
                value: {index: 154, type: Single}
              - key: [3584, 2944, 256]
                speed: 3994.34
                value: {index: 164, type: Single}
              - key: [3584, 2944, 768]
                speed: 4169.27
                value: {index: 164, type: Single}
              - key: [3584, 2944, 1792]
                speed: 4208.2
                value: {index: 164, type: Single}
              - key: [3584, 2944, 3328]
                speed: 4226.01
                value: {index: 164, type: Single}
              - key: [3584, 3584, 128]
                speed: 2393.12
                value: {index: 154, type: Single}
              - key: [3584, 3584, 256]
                speed: 3871.18
                value: {index: 164, type: Single}
              - key: [3584, 3584, 768]
                speed: 4019.58
                value: {index: 164, type: Single}
              - key: [3584, 3584, 1792]
                speed: 4040.35
                value: {index: 164, type: Single}
              - key: [3584, 3584, 3328]
                speed: 4071.21
                value: {index: 164, type: Single}
              - key: [3584, 4288, 128]
                speed: 2510.89
                value: {index: 154, type: Single}
              - key: [3584, 4288, 256]
                speed: 4026.38
                value: {index: 164, type: Single}
              - key: [3584, 4288, 768]
                speed: 4202.31
                value: {index: 164, type: Single}
              - key: [3584, 4288, 1792]
                speed: 4328.85
                value: {index: 174, type: Single}
              - key: [3584, 4288, 3328]
                speed: 4380.09
                value: {index: 174, type: Single}
              - key: [3584, 5056, 128]
                speed: 2540.59
                value: {index: 154, type: Single}
              - key: [3584, 5056, 256]
                speed: 4105.8
                value: {index: 172, type: Single}
              - key: [3584, 5056, 768]
                speed: 4207.39
                value: {index: 164, type: Single}
              - key: [3584, 5056, 1792]
                speed: 4249.37
                value: {index: 164, type: Single}
              - key: [3584, 5056, 3328]
                speed: 4263.29
                value: {index: 164, type: Single}
              - key: [3584, 5888, 128]
                speed: 2592.46
                value: {index: 154, type: Single}
              - key: [3584, 5888, 256]
                speed: 4094.36
                value: {index: 172, type: Single}
              - key: [3584, 5888, 768]
                speed: 4234.81
                value: {index: 164, type: Single}
              - key: [3584, 5888, 1792]
                speed: 4275.07
                value: {index: 164, type: Single}
              - key: [3584, 5888, 3328]
                speed: 4293.47
                value: {index: 164, type: Single}
              - key: [3584, 6784, 128]
                speed: 2641.2
                value: {index: 154, type: Single}
              - key: [3584, 6784, 256]
                speed: 4184.16
                value: {index: 164, type: Single}
              - key: [3584, 6784, 768]
                speed: 4326.23
                value: {index: 164, type: Single}
              - key: [3584, 6784, 1792]
                speed: 4355.93
                value: {index: 164, type: Single}
              - key: [3584, 6784, 3328]
                speed: 4370.09
                value: {index: 164, type: Single}
              - key: [4288, 4, 128]
                speed: 38.9822
                value: {index: 179, type: Single}
              - key: [4288, 4, 256]
                speed: 70.0976
                value: {index: 181, type: Single}
              - key: [4288, 4, 768]
                speed: 158.022
                value: {index: 181, type: Single}
              - key: [4288, 4, 1792]
                speed: 245.186
                value: {index: 181, type: Single}
              - key: [4288, 4, 3328]
                speed: 303.241
                value: {index: 184, type: Single}
              - key: [4288, 64, 128]
                speed: 414.237
                value: {index: 157, type: Single}
              - key: [4288, 64, 256]
                speed: 1405.09
                value: {index: 169, type: Single}
              - key: [4288, 64, 768]
                speed: 1948.63
                value: {index: 161, type: Single}
              - key: [4288, 64, 1792]
                speed: 2232.13
                value: {index: 161, type: Single}
              - key: [4288, 64, 3328]
                speed: 2566.05
                value: {index: 163, type: Single}
              - key: [4288, 128, 128]
                speed: 757.707
                value: {index: 157, type: Single}
              - key: [4288, 128, 256]
                speed: 1747.63
                value: {index: 161, type: Single}
              - key: [4288, 128, 768]
                speed: 2378.82
                value: {index: 158, type: Single}
              - key: [4288, 128, 1792]
                speed: 2646.84
                value: {index: 158, type: Single}
              - key: [4288, 128, 3328]
                speed: 3085.51
                value: {index: 163, type: Single}
              - key: [4288, 256, 128]
                speed: 1092.95
                value: {index: 155, type: Single}
              - key: [4288, 256, 256]
                speed: 2575.32
                value: {index: 172, type: Single}
              - key: [4288, 256, 768]
                speed: 3104.03
                value: {index: 158, type: Single}
              - key: [4288, 256, 1792]
                speed: 3403.34
                value: {index: 158, type: Single}
              - key: [4288, 256, 3328]
                speed: 3486.71
                value: {index: 177, type: Single}
              - key: [4288, 448, 128]
                speed: 1651.61
                value: {index: 156, type: Single}
              - key: [4288, 448, 256]
                speed: 3424.67
                value: {index: 172, type: Single}
              - key: [4288, 448, 768]
                speed: 3786.05
                value: {index: 172, type: Single}
              - key: [4288, 448, 1792]
                speed: 4069.89
                value: {index: 158, type: Single}
              - key: [4288, 448, 3328]
                speed: 4200.73
                value: {index: 158, type: Single}
              - key: [4288, 704, 128]
                speed: 1747.47
                value: {index: 155, type: Single}
              - key: [4288, 704, 256]
                speed: 3340.25
                value: {index: 172, type: Single}
              - key: [4288, 704, 768]
                speed: 3602.24
                value: {index: 158, type: Single}
              - key: [4288, 704, 1792]
                speed: 3858.27
                value: {index: 158, type: Single}
              - key: [4288, 704, 3328]
                speed: 3707.38
                value: {index: 161, type: Single}
              - key: [4288, 1024, 128]
                speed: 1930.07
                value: {index: 154, type: Single}
              - key: [4288, 1024, 256]
                speed: 3335.93
                value: {index: 171, type: Single}
              - key: [4288, 1024, 768]
                speed: 3545.23
                value: {index: 171, type: Single}
              - key: [4288, 1024, 1792]
                speed: 3604.78
                value: {index: 171, type: Single}
              - key: [4288, 1024, 3328]
                speed: 3807.84
                value: {index: 167, type: Single}
              - key: [4288, 1408, 128]
                speed: 2130.57
                value: {index: 155, type: Single}
              - key: [4288, 1408, 256]
                speed: 3771.23
                value: {index: 172, type: Single}
              - key: [4288, 1408, 768]
                speed: 3914.63
                value: {index: 172, type: Single}
              - key: [4288, 1408, 1792]
                speed: 3957.28
                value: {index: 172, type: Single}
              - key: [4288, 1408, 3328]
                speed: 3973.05
                value: {index: 172, type: Single}
              - key: [4288, 1856, 128]
                speed: 2206.49
                value: {index: 155, type: Single}
              - key: [4288, 1856, 256]
                speed: 3848.19
                value: {index: 172, type: Single}
              - key: [4288, 1856, 768]
                speed: 3969.34
                value: {index: 172, type: Single}
              - key: [4288, 1856, 1792]
                speed: 4007.26
                value: {index: 172, type: Single}
              - key: [4288, 1856, 3328]
                speed: 4018.68
                value: {index: 172, type: Single}
              - key: [4288, 2368, 128]
                speed: 2350.8
                value: {index: 155, type: Single}
              - key: [4288, 2368, 256]
                speed: 3993.21
                value: {index: 172, type: Single}
              - key: [4288, 2368, 768]
                speed: 4111.79
                value: {index: 172, type: Single}
              - key: [4288, 2368, 1792]
                speed: 4150.08
                value: {index: 172, type: Single}
              - key: [4288, 2368, 3328]
                speed: 4161.31
                value: {index: 172, type: Single}
              - key: [4288, 2944, 128]
                speed: 2408.85
                value: {index: 155, type: Single}
              - key: [4288, 2944, 256]
                speed: 4104.08
                value: {index: 164, type: Single}
              - key: [4288, 2944, 768]
                speed: 4243.62
                value: {index: 164, type: Single}
              - key: [4288, 2944, 1792]
                speed: 4283.69
                value: {index: 164, type: Single}
              - key: [4288, 2944, 3328]
                speed: 4295.21
                value: {index: 164, type: Single}
              - key: [4288, 3584, 128]
                speed: 2519.38
                value: {index: 154, type: Single}
              - key: [4288, 3584, 256]
                speed: 4080.5
                value: {index: 164, type: Single}
              - key: [4288, 3584, 768]
                speed: 4239.5
                value: {index: 174, type: Single}
              - key: [4288, 3584, 1792]
                speed: 4352.28
                value: {index: 174, type: Single}
              - key: [4288, 3584, 3328]
                speed: 4390.34
                value: {index: 174, type: Single}
              - key: [4288, 4288, 128]
                speed: 2574.53
                value: {index: 154, type: Single}
              - key: [4288, 4288, 256]
                speed: 4137.71
                value: {index: 164, type: Single}
              - key: [4288, 4288, 768]
                speed: 4277.59
                value: {index: 164, type: Single}
              - key: [4288, 4288, 1792]
                speed: 4322.53
                value: {index: 171, type: Single}
              - key: [4288, 4288, 3328]
                speed: 4330.78
                value: {index: 171, type: Single}
              - key: [4288, 5056, 128]
                speed: 2562.86
                value: {index: 154, type: Single}
              - key: [4288, 5056, 256]
                speed: 4069.48
                value: {index: 172, type: Single}
              - key: [4288, 5056, 768]
                speed: 4186.7
                value: {index: 171, type: Single}
              - key: [4288, 5056, 1792]
                speed: 4222.14
                value: {index: 171, type: Single}
              - key: [4288, 5056, 3328]
                speed: 4232.24
                value: {index: 164, type: Single}
              - key: [4288, 5888, 128]
                speed: 2579.1
                value: {index: 154, type: Single}
              - key: [4288, 5888, 256]
                speed: 4192.46
                value: {index: 164, type: Single}
              - key: [4288, 5888, 768]
                speed: 4325.87
                value: {index: 164, type: Single}
              - key: [4288, 5888, 1792]
                speed: 4351.82
                value: {index: 164, type: Single}
              - key: [4288, 5888, 3328]
                speed: 4360.42
                value: {index: 164, type: Single}
              - key: [4288, 6784, 128]
                speed: 2601.23
                value: {index: 154, type: Single}
              - key: [4288, 6784, 256]
                speed: 4231.82
                value: {index: 164, type: Single}
              - key: [4288, 6784, 768]
                speed: 4339.4
                value: {index: 164, type: Single}
              - key: [4288, 6784, 1792]
                speed: 4364.3
                value: {index: 164, type: Single}
              - key: [4288, 6784, 3328]
                speed: 4374.0
                value: {index: 164, type: Single}
              - key: [5056, 4, 128]
                speed: 45.5115
                value: {index: 179, type: Single}
              - key: [5056, 4, 256]
                speed: 78.0661
                value: {index: 181, type: Single}
              - key: [5056, 4, 768]
                speed: 173.349
                value: {index: 184, type: Single}
              - key: [5056, 4, 1792]
                speed: 258.72
                value: {index: 184, type: Single}
              - key: [5056, 4, 3328]
                speed: 314.513
                value: {index: 184, type: Single}
              - key: [5056, 64, 128]
                speed: 480.719
                value: {index: 157, type: Single}
              - key: [5056, 64, 256]
                speed: 1638.4
                value: {index: 169, type: Single}
              - key: [5056, 64, 768]
                speed: 2292.55
                value: {index: 158, type: Single}
              - key: [5056, 64, 1792]
                speed: 2620.49
                value: {index: 158, type: Single}
              - key: [5056, 64, 3328]
                speed: 2768.63
                value: {index: 162, type: Single}
              - key: [5056, 128, 128]
                speed: 876.031
                value: {index: 157, type: Single}
              - key: [5056, 128, 256]
                speed: 2040.33
                value: {index: 161, type: Single}
              - key: [5056, 128, 768]
                speed: 2794.79
                value: {index: 161, type: Single}
              - key: [5056, 128, 1792]
                speed: 2726.97
                value: {index: 165, type: Single}
              - key: [5056, 128, 3328]
                speed: 3079.28
                value: {index: 165, type: Single}
              - key: [5056, 256, 128]
                speed: 1234.91
                value: {index: 155, type: Single}
              - key: [5056, 256, 256]
                speed: 2981.91
                value: {index: 172, type: Single}
              - key: [5056, 256, 768]
                speed: 3394.98
                value: {index: 172, type: Single}
              - key: [5056, 256, 1792]
                speed: 3635.96
                value: {index: 158, type: Single}
              - key: [5056, 256, 3328]
                speed: 3759.56
                value: {index: 158, type: Single}
              - key: [5056, 448, 128]
                speed: 1577.08
                value: {index: 155, type: Single}
              - key: [5056, 448, 256]
                speed: 3311.23
                value: {index: 172, type: Single}
              - key: [5056, 448, 768]
                speed: 3636.87
                value: {index: 172, type: Single}
              - key: [5056, 448, 1792]
                speed: 3861.05
                value: {index: 158, type: Single}
              - key: [5056, 448, 3328]
                speed: 3970.16
                value: {index: 158, type: Single}
              - key: [5056, 704, 128]
                speed: 1811.41
                value: {index: 154, type: Single}
              - key: [5056, 704, 256]
                speed: 3502.51
                value: {index: 172, type: Single}
              - key: [5056, 704, 768]
                speed: 3754.17
                value: {index: 174, type: Single}
              - key: [5056, 704, 1792]
                speed: 3946.11
                value: {index: 174, type: Single}
              - key: [5056, 704, 3328]
                speed: 4018.68
                value: {index: 174, type: Single}
              - key: [5056, 1024, 128]
                speed: 1991.29
                value: {index: 154, type: Single}
              - key: [5056, 1024, 256]
                speed: 3404.05
                value: {index: 171, type: Single}
              - key: [5056, 1024, 768]
                speed: 3585.52
                value: {index: 171, type: Single}
              - key: [5056, 1024, 1792]
                speed: 3641.44
                value: {index: 171, type: Single}
              - key: [5056, 1024, 3328]
                speed: 3701.79
                value: {index: 167, type: Single}
              - key: [5056, 1408, 128]
                speed: 2206.11
                value: {index: 155, type: Single}
              - key: [5056, 1408, 256]
                speed: 3864.35
                value: {index: 172, type: Single}
              - key: [5056, 1408, 768]
                speed: 4011.33
                value: {index: 172, type: Single}
              - key: [5056, 1408, 1792]
                speed: 4054.06
                value: {index: 172, type: Single}
              - key: [5056, 1408, 3328]
                speed: 4066.8
                value: {index: 172, type: Single}
              - key: [5056, 1856, 128]
                speed: 2343.06
                value: {index: 154, type: Single}
              - key: [5056, 1856, 256]
                speed: 3882.67
                value: {index: 172, type: Single}
              - key: [5056, 1856, 768]
                speed: 4055.91
                value: {index: 164, type: Single}
              - key: [5056, 1856, 1792]
                speed: 4106.84
                value: {index: 171, type: Single}
              - key: [5056, 1856, 3328]
                speed: 4117.54
                value: {index: 171, type: Single}
              - key: [5056, 2368, 128]
                speed: 2391.83
                value: {index: 154, type: Single}
              - key: [5056, 2368, 256]
                speed: 3987.55
                value: {index: 172, type: Single}
              - key: [5056, 2368, 768]
                speed: 4086.94
                value: {index: 172, type: Single}
              - key: [5056, 2368, 1792]
                speed: 4116.64
                value: {index: 172, type: Single}
              - key: [5056, 2368, 3328]
                speed: 4126.13
                value: {index: 172, type: Single}
              - key: [5056, 2944, 128]
                speed: 2466.94
                value: {index: 154, type: Single}
              - key: [5056, 2944, 256]
                speed: 4017.85
                value: {index: 172, type: Single}
              - key: [5056, 2944, 768]
                speed: 4115.75
                value: {index: 174, type: Single}
              - key: [5056, 2944, 1792]
                speed: 4214.12
                value: {index: 174, type: Single}
              - key: [5056, 2944, 3328]
                speed: 4252.0
                value: {index: 174, type: Single}
              - key: [5056, 3584, 128]
                speed: 2541.48
                value: {index: 154, type: Single}
              - key: [5056, 3584, 256]
                speed: 4087.28
                value: {index: 164, type: Single}
              - key: [5056, 3584, 768]
                speed: 4219.95
                value: {index: 164, type: Single}
              - key: [5056, 3584, 1792]
                speed: 4253.07
                value: {index: 171, type: Single}
              - key: [5056, 3584, 3328]
                speed: 4261.24
                value: {index: 171, type: Single}
              - key: [5056, 4288, 128]
                speed: 2562.86
                value: {index: 154, type: Single}
              - key: [5056, 4288, 256]
                speed: 4073.06
                value: {index: 171, type: Single}
              - key: [5056, 4288, 768]
                speed: 4189.99
                value: {index: 164, type: Single}
              - key: [5056, 4288, 1792]
                speed: 4225.49
                value: {index: 164, type: Single}
              - key: [5056, 4288, 3328]
                speed: 4239.34
                value: {index: 164, type: Single}
              - key: [5056, 5056, 128]
                speed: 2591.14
                value: {index: 154, type: Single}
              - key: [5056, 5056, 256]
                speed: 4106.94
                value: {index: 171, type: Single}
              - key: [5056, 5056, 768]
                speed: 4221.24
                value: {index: 171, type: Single}
              - key: [5056, 5056, 1792]
                speed: 4255.14
                value: {index: 164, type: Single}
              - key: [5056, 5056, 3328]
                speed: 4265.22
                value: {index: 164, type: Single}
              - key: [5056, 5888, 128]
                speed: 2645.76
                value: {index: 154, type: Single}
              - key: [5056, 5888, 256]
                speed: 4186.47
                value: {index: 164, type: Single}
              - key: [5056, 5888, 768]
                speed: 4295.2
                value: {index: 171, type: Single}
              - key: [5056, 5888, 1792]
                speed: 4323.1
                value: {index: 171, type: Single}
              - key: [5056, 5888, 3328]
                speed: 4331.86
                value: {index: 171, type: Single}
              - key: [5056, 6784, 128]
                speed: 2650.05
                value: {index: 154, type: Single}
              - key: [5056, 6784, 256]
                speed: 4285.98
                value: {index: 164, type: Single}
              - key: [5056, 6784, 768]
                speed: 4393.61
                value: {index: 164, type: Single}
              - key: [5056, 6784, 1792]
                speed: 4419.48
                value: {index: 164, type: Single}
              - key: [5056, 6784, 3328]
                speed: 4426.76
                value: {index: 164, type: Single}
              - key: [5888, 4, 128]
                speed: 53.3006
                value: {index: 179, type: Single}
              - key: [5888, 4, 256]
                speed: 89.7219
                value: {index: 180, type: Single}
              - key: [5888, 4, 768]
                speed: 190.48
                value: {index: 184, type: Single}
              - key: [5888, 4, 1792]
                speed: 258.358
                value: {index: 180, type: Single}
              - key: [5888, 4, 3328]
                speed: 303.992
                value: {index: 180, type: Single}
              - key: [5888, 64, 128]
                speed: 551.63
                value: {index: 157, type: Single}
              - key: [5888, 64, 256]
                speed: 1858.03
                value: {index: 161, type: Single}
              - key: [5888, 64, 768]
                speed: 2652.19
                value: {index: 161, type: Single}
              - key: [5888, 64, 1792]
                speed: 3009.28
                value: {index: 161, type: Single}
              - key: [5888, 64, 3328]
                speed: 3192.06
                value: {index: 161, type: Single}
              - key: [5888, 128, 128]
                speed: 888.624
                value: {index: 155, type: Single}
              - key: [5888, 128, 256]
                speed: 2277.36
                value: {index: 172, type: Single}
              - key: [5888, 128, 768]
                speed: 2826.24
                value: {index: 172, type: Single}
              - key: [5888, 128, 1792]
                speed: 3018.97
                value: {index: 172, type: Single}
              - key: [5888, 128, 3328]
                speed: 3262.14
                value: {index: 158, type: Single}
              - key: [5888, 256, 128]
                speed: 1272.01
                value: {index: 155, type: Single}
              - key: [5888, 256, 256]
                speed: 2672.27
                value: {index: 172, type: Single}
              - key: [5888, 256, 768]
                speed: 3182.39
                value: {index: 158, type: Single}
              - key: [5888, 256, 1792]
                speed: 3449.9
                value: {index: 158, type: Single}
              - key: [5888, 256, 3328]
                speed: 3555.3
                value: {index: 158, type: Single}
              - key: [5888, 448, 128]
                speed: 1716.36
                value: {index: 154, type: Single}
              - key: [5888, 448, 256]
                speed: 3357.61
                value: {index: 172, type: Single}
              - key: [5888, 448, 768]
                speed: 3661.0
                value: {index: 158, type: Single}
              - key: [5888, 448, 1792]
                speed: 3950.48
                value: {index: 158, type: Single}
              - key: [5888, 448, 3328]
                speed: 4052.05
                value: {index: 158, type: Single}
              - key: [5888, 704, 128]
                speed: 1953.54
                value: {index: 155, type: Single}
              - key: [5888, 704, 256]
                speed: 3625.17
                value: {index: 172, type: Single}
              - key: [5888, 704, 768]
                speed: 3830.72
                value: {index: 172, type: Single}
              - key: [5888, 704, 1792]
                speed: 3949.11
                value: {index: 161, type: Single}
              - key: [5888, 704, 3328]
                speed: 4025.83
                value: {index: 161, type: Single}
              - key: [5888, 1024, 128]
                speed: 2050.35
                value: {index: 154, type: Single}
              - key: [5888, 1024, 256]
                speed: 3394.41
                value: {index: 171, type: Single}
              - key: [5888, 1024, 768]
                speed: 3621.89
                value: {index: 171, type: Single}
              - key: [5888, 1024, 1792]
                speed: 3679.32
                value: {index: 171, type: Single}
              - key: [5888, 1024, 3328]
                speed: 3788.93
                value: {index: 165, type: Single}
              - key: [5888, 1408, 128]
                speed: 2299.27
                value: {index: 155, type: Single}
              - key: [5888, 1408, 256]
                speed: 3974.97
                value: {index: 172, type: Single}
              - key: [5888, 1408, 768]
                speed: 4125.6
                value: {index: 172, type: Single}
              - key: [5888, 1408, 1792]
                speed: 4171.04
                value: {index: 172, type: Single}
              - key: [5888, 1408, 3328]
                speed: 4185.7
                value: {index: 172, type: Single}
              - key: [5888, 1856, 128]
                speed: 2361.25
                value: {index: 154, type: Single}
              - key: [5888, 1856, 256]
                speed: 3944.73
                value: {index: 172, type: Single}
              - key: [5888, 1856, 768]
                speed: 4050.74
                value: {index: 172, type: Single}
              - key: [5888, 1856, 1792]
                speed: 4114.19
                value: {index: 174, type: Single}
              - key: [5888, 1856, 3328]
                speed: 4151.88
                value: {index: 174, type: Single}
              - key: [5888, 2368, 128]
                speed: 2425.89
                value: {index: 154, type: Single}
              - key: [5888, 2368, 256]
                speed: 4016.29
                value: {index: 172, type: Single}
              - key: [5888, 2368, 768]
                speed: 4108.37
                value: {index: 172, type: Single}
              - key: [5888, 2368, 1792]
                speed: 4162.42
                value: {index: 161, type: Single}
              - key: [5888, 2368, 3328]
                speed: 4146.85
                value: {index: 172, type: Single}
              - key: [5888, 2944, 128]
                speed: 2558.8
                value: {index: 154, type: Single}
              - key: [5888, 2944, 256]
                speed: 4137.99
                value: {index: 164, type: Single}
              - key: [5888, 2944, 768]
                speed: 4257.95
                value: {index: 164, type: Single}
              - key: [5888, 2944, 1792]
                speed: 4289.38
                value: {index: 164, type: Single}
              - key: [5888, 2944, 3328]
                speed: 4303.65
                value: {index: 164, type: Single}
              - key: [5888, 3584, 128]
                speed: 2599.05
                value: {index: 154, type: Single}
              - key: [5888, 3584, 256]
                speed: 4100.08
                value: {index: 164, type: Single}
              - key: [5888, 3584, 768]
                speed: 4248.22
                value: {index: 164, type: Single}
              - key: [5888, 3584, 1792]
                speed: 4278.32
                value: {index: 164, type: Single}
              - key: [5888, 3584, 3328]
                speed: 4287.53
                value: {index: 164, type: Single}
              - key: [5888, 4288, 128]
                speed: 2655.04
                value: {index: 154, type: Single}
              - key: [5888, 4288, 256]
                speed: 4139.4
                value: {index: 171, type: Single}
              - key: [5888, 4288, 768]
                speed: 4291.33
                value: {index: 171, type: Single}
              - key: [5888, 4288, 1792]
                speed: 4338.94
                value: {index: 171, type: Single}
              - key: [5888, 4288, 3328]
                speed: 4350.7
                value: {index: 171, type: Single}
              - key: [5888, 5056, 128]
                speed: 2660.24
                value: {index: 154, type: Single}
              - key: [5888, 5056, 256]
                speed: 4128.06
                value: {index: 172, type: Single}
              - key: [5888, 5056, 768]
                speed: 4278.86
                value: {index: 164, type: Single}
              - key: [5888, 5056, 1792]
                speed: 4320.66
                value: {index: 164, type: Single}
              - key: [5888, 5056, 3328]
                speed: 4331.25
                value: {index: 164, type: Single}
              - key: [5888, 5888, 128]
                speed: 2683.46
                value: {index: 154, type: Single}
              - key: [5888, 5888, 256]
                speed: 4203.36
                value: {index: 164, type: Single}
              - key: [5888, 5888, 768]
                speed: 4314.13
                value: {index: 164, type: Single}
              - key: [5888, 5888, 1792]
                speed: 4387.06
                value: {index: 174, type: Single}
              - key: [5888, 5888, 3328]
                speed: 4413.53
                value: {index: 174, type: Single}
              - key: [5888, 6784, 128]
                speed: 2725.29
                value: {index: 154, type: Single}
              - key: [5888, 6784, 256]
                speed: 4270.68
                value: {index: 164, type: Single}
              - key: [5888, 6784, 768]
                speed: 4373.11
                value: {index: 164, type: Single}
              - key: [5888, 6784, 1792]
                speed: 4399.08
                value: {index: 164, type: Single}
              - key: [5888, 6784, 3328]
                speed: 4409.46
                value: {index: 164, type: Single}
              - key: [6784, 4, 128]
                speed: 60.8948
                value: {index: 179, type: Single}
              - key: [6784, 4, 256]
                speed: 99.9254
                value: {index: 183, type: Single}
              - key: [6784, 4, 768]
                speed: 203.68
                value: {index: 180, type: Single}
              - key: [6784, 4, 1792]
                speed: 291.814
                value: {index: 180, type: Single}
              - key: [6784, 4, 3328]
                speed: 341.665
                value: {index: 180, type: Single}
              - key: [6784, 64, 128]
                speed: 654.126
                value: {index: 157, type: Single}
              - key: [6784, 64, 256]
                speed: 2121.17
                value: {index: 161, type: Single}
              - key: [6784, 64, 768]
                speed: 3020.35
                value: {index: 161, type: Single}
              - key: [6784, 64, 1792]
                speed: 3473.41
                value: {index: 161, type: Single}
              - key: [6784, 64, 3328]
                speed: 3663.64
                value: {index: 158, type: Single}
              - key: [6784, 128, 128]
                speed: 1110.6
                value: {index: 157, type: Single}
              - key: [6784, 128, 256]
                speed: 2621.44
                value: {index: 172, type: Single}
              - key: [6784, 128, 768]
                speed: 3238.61
                value: {index: 172, type: Single}
              - key: [6784, 128, 1792]
                speed: 3464.75
                value: {index: 172, type: Single}
              - key: [6784, 128, 3328]
                speed: 3751.53
                value: {index: 158, type: Single}
              - key: [6784, 256, 128]
                speed: 1537.76
                value: {index: 156, type: Single}
              - key: [6784, 256, 256]
                speed: 3061.96
                value: {index: 172, type: Single}
              - key: [6784, 256, 768]
                speed: 3403.22
                value: {index: 172, type: Single}
              - key: [6784, 256, 1792]
                speed: 3688.11
                value: {index: 158, type: Single}
              - key: [6784, 256, 3328]
                speed: 3802.07
                value: {index: 158, type: Single}
              - key: [6784, 448, 128]
                speed: 1754.25
                value: {index: 155, type: Single}
              - key: [6784, 448, 256]
                speed: 3368.74
                value: {index: 172, type: Single}
              - key: [6784, 448, 768]
                speed: 3615.0
                value: {index: 158, type: Single}
              - key: [6784, 448, 1792]
                speed: 3883.56
                value: {index: 158, type: Single}
              - key: [6784, 448, 3328]
                speed: 3986.63
                value: {index: 158, type: Single}
              - key: [6784, 704, 128]
                speed: 2080.45
                value: {index: 154, type: Single}
              - key: [6784, 704, 256]
                speed: 3800.79
                value: {index: 172, type: Single}
              - key: [6784, 704, 768]
                speed: 3988.26
                value: {index: 172, type: Single}
              - key: [6784, 704, 1792]
                speed: 4106.76
                value: {index: 158, type: Single}
              - key: [6784, 704, 3328]
                speed: 4066.38
                value: {index: 172, type: Single}
              - key: [6784, 1024, 128]
                speed: 2125.22
                value: {index: 154, type: Single}
              - key: [6784, 1024, 256]
                speed: 3544.86
                value: {index: 171, type: Single}
              - key: [6784, 1024, 768]
                speed: 3787.02
                value: {index: 174, type: Single}
              - key: [6784, 1024, 1792]
                speed: 3915.08
                value: {index: 174, type: Single}
              - key: [6784, 1024, 3328]
                speed: 3956.24
                value: {index: 174, type: Single}
              - key: [6784, 1408, 128]
                speed: 2365.06
                value: {index: 154, type: Single}
              - key: [6784, 1408, 256]
                speed: 3973.22
                value: {index: 164, type: Single}
              - key: [6784, 1408, 768]
                speed: 4141.17
                value: {index: 164, type: Single}
              - key: [6784, 1408, 1792]
                speed: 4186.8
                value: {index: 164, type: Single}
              - key: [6784, 1408, 3328]
                speed: 4189.86
                value: {index: 164, type: Single}
              - key: [6784, 1856, 128]
                speed: 2488.06
                value: {index: 154, type: Single}
              - key: [6784, 1856, 256]
                speed: 4081.4
                value: {index: 171, type: Single}
              - key: [6784, 1856, 768]
                speed: 4223.43
                value: {index: 171, type: Single}
              - key: [6784, 1856, 1792]
                speed: 4271.66
                value: {index: 171, type: Single}
              - key: [6784, 1856, 3328]
                speed: 4287.04
                value: {index: 171, type: Single}
              - key: [6784, 2368, 128]
                speed: 2519.43
                value: {index: 154, type: Single}
              - key: [6784, 2368, 256]
                speed: 4075.35
                value: {index: 172, type: Single}
              - key: [6784, 2368, 768]
                speed: 4166.18
                value: {index: 172, type: Single}
              - key: [6784, 2368, 1792]
                speed: 4208.91
                value: {index: 164, type: Single}
              - key: [6784, 2368, 3328]
                speed: 4219.07
                value: {index: 164, type: Single}
              - key: [6784, 2944, 128]
                speed: 2573.52
                value: {index: 154, type: Single}
              - key: [6784, 2944, 256]
                speed: 4111.07
                value: {index: 164, type: Single}
              - key: [6784, 2944, 768]
                speed: 4228.67
                value: {index: 164, type: Single}
              - key: [6784, 2944, 1792]
                speed: 4255.37
                value: {index: 164, type: Single}
              - key: [6784, 2944, 3328]
                speed: 4263.67
                value: {index: 164, type: Single}
              - key: [6784, 3584, 128]
                speed: 2645.33
                value: {index: 154, type: Single}
              - key: [6784, 3584, 256]
                speed: 4197.7
                value: {index: 171, type: Single}
              - key: [6784, 3584, 768]
                speed: 4326.23
                value: {index: 171, type: Single}
              - key: [6784, 3584, 1792]
                speed: 4359.56
                value: {index: 171, type: Single}
              - key: [6784, 3584, 3328]
                speed: 4367.01
                value: {index: 171, type: Single}
              - key: [6784, 4288, 128]
                speed: 2673.08
                value: {index: 154, type: Single}
              - key: [6784, 4288, 256]
                speed: 4221.65
                value: {index: 171, type: Single}
              - key: [6784, 4288, 768]
                speed: 4328.17
                value: {index: 171, type: Single}
              - key: [6784, 4288, 1792]
                speed: 4360.59
                value: {index: 171, type: Single}
              - key: [6784, 4288, 3328]
                speed: 4371.52
                value: {index: 171, type: Single}
              - key: [6784, 5056, 128]
                speed: 2709.18
                value: {index: 154, type: Single}
              - key: [6784, 5056, 256]
                speed: 4266.99
                value: {index: 171, type: Single}
              - key: [6784, 5056, 768]
                speed: 4385.19
                value: {index: 171, type: Single}
              - key: [6784, 5056, 1792]
                speed: 4418.77
                value: {index: 171, type: Single}
              - key: [6784, 5056, 3328]
                speed: 4425.06
                value: {index: 171, type: Single}
              - key: [6784, 5888, 128]
                speed: 2722.04
                value: {index: 154, type: Single}
              - key: [6784, 5888, 256]
                speed: 4259.72
                value: {index: 171, type: Single}
              - key: [6784, 5888, 768]
                speed: 4367.53
                value: {index: 171, type: Single}
              - key: [6784, 5888, 1792]
                speed: 4400.03
                value: {index: 171, type: Single}
              - key: [6784, 5888, 3328]
                speed: 4406.81
                value: {index: 171, type: Single}
              - key: [6784, 6784, 128]
                speed: 2747.11
                value: {index: 154, type: Single}
              - key: [6784, 6784, 256]
                speed: 4303.45
                value: {index: 164, type: Single}
              - key: [6784, 6784, 768]
                speed: 4405.4
                value: {index: 164, type: Single}
              - key: [6784, 6784, 1792]
                speed: 4430.11
                value: {index: 171, type: Single}
              - key: [6784, 6784, 3328]
                speed: 4438.7
                value: {index: 164, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
        Contraction_l_Ailk_Bljk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.0286676
                value: {index: 21, type: Single}
              - key: [4, 4, 256]
                speed: 0.0975238
                value: {index: 23, type: Single}
              - key: [4, 4, 768]
                speed: 0.258586
                value: {index: 26, type: Single}
              - key: [4, 4, 1792]
                speed: 0.483019
                value: {index: 24, type: Single}
              - key: [4, 4, 3328]
                speed: 0.668277
                value: {index: 24, type: Single}
              - key: [4, 64, 128]
                speed: 0.472983
                value: {index: 21, type: Single}
              - key: [4, 64, 256]
                speed: 1.64498
                value: {index: 25, type: Single}
              - key: [4, 64, 768]
                speed: 4.25927
                value: {index: 24, type: Single}
              - key: [4, 64, 1792]
                speed: 7.81253
                value: {index: 24, type: Single}
              - key: [4, 64, 3328]
                speed: 10.6603
                value: {index: 24, type: Single}
              - key: [4, 128, 128]
                speed: 1.17197
                value: {index: 20, type: Single}
              - key: [4, 128, 256]
                speed: 3.21886
                value: {index: 25, type: Single}
              - key: [4, 128, 768]
                speed: 7.81431
                value: {index: 24, type: Single}
              - key: [4, 128, 1792]
                speed: 14.2824
                value: {index: 24, type: Single}
              - key: [4, 128, 3328]
                speed: 19.9805
                value: {index: 24, type: Single}
              - key: [4, 256, 128]
                speed: 2.25677
                value: {index: 20, type: Single}
              - key: [4, 256, 256]
                speed: 5.68889
                value: {index: 23, type: Single}
              - key: [4, 256, 768]
                speed: 15.0542
                value: {index: 24, type: Single}
              - key: [4, 256, 1792]
                speed: 27.9046
                value: {index: 24, type: Single}
              - key: [4, 256, 3328]
                speed: 39.961
                value: {index: 24, type: Single}
              - key: [4, 448, 128]
                speed: 3.9385
                value: {index: 20, type: Single}
              - key: [4, 448, 256]
                speed: 9.24903
                value: {index: 25, type: Single}
              - key: [4, 448, 768]
                speed: 24.7172
                value: {index: 24, type: Single}
              - key: [4, 448, 1792]
                speed: 45.9277
                value: {index: 24, type: Single}
              - key: [4, 448, 3328]
                speed: 67.2809
                value: {index: 24, type: Single}
              - key: [4, 704, 128]
                speed: 6.29279
                value: {index: 20, type: Single}
              - key: [4, 704, 256]
                speed: 13.5303
                value: {index: 25, type: Single}
              - key: [4, 704, 768]
                speed: 35.4772
                value: {index: 24, type: Single}
              - key: [4, 704, 1792]
                speed: 66.8912
                value: {index: 24, type: Single}
              - key: [4, 704, 3328]
                speed: 98.3595
                value: {index: 24, type: Single}
              - key: [4, 1024, 128]
                speed: 9.08968
                value: {index: 20, type: Single}
              - key: [4, 1024, 256]
                speed: 17.9797
                value: {index: 23, type: Single}
              - key: [4, 1024, 768]
                speed: 47.7204
                value: {index: 26, type: Single}
              - key: [4, 1024, 1792]
                speed: 91.476
                value: {index: 24, type: Single}
              - key: [4, 1024, 3328]
                speed: 135.234
                value: {index: 24, type: Single}
              - key: [4, 1408, 128]
                speed: 12.1774
                value: {index: 20, type: Single}
              - key: [4, 1408, 256]
                speed: 24.487
                value: {index: 23, type: Single}
              - key: [4, 1408, 768]
                speed: 64.9846
                value: {index: 24, type: Single}
              - key: [4, 1408, 1792]
                speed: 121.538
                value: {index: 24, type: Single}
              - key: [4, 1408, 3328]
                speed: 178.305
                value: {index: 24, type: Single}
              - key: [4, 1856, 128]
                speed: 17.1407
                value: {index: 20, type: Single}
              - key: [4, 1856, 256]
                speed: 31.9312
                value: {index: 23, type: Single}
              - key: [4, 1856, 768]
                speed: 80.2595
                value: {index: 24, type: Single}
              - key: [4, 1856, 1792]
                speed: 153.553
                value: {index: 24, type: Single}
              - key: [4, 1856, 3328]
                speed: 211.1
                value: {index: 24, type: Single}
              - key: [4, 2368, 128]
                speed: 21.9961
                value: {index: 20, type: Single}
              - key: [4, 2368, 256]
                speed: 39.3642
                value: {index: 25, type: Single}
              - key: [4, 2368, 768]
                speed: 97.8807
                value: {index: 24, type: Single}
              - key: [4, 2368, 1792]
                speed: 179.961
                value: {index: 26, type: Single}
              - key: [4, 2368, 3328]
                speed: 197.314
                value: {index: 23, type: Single}
              - key: [4, 2944, 128]
                speed: 27.2674
                value: {index: 20, type: Single}
              - key: [4, 2944, 256]
                speed: 47.943
                value: {index: 23, type: Single}
              - key: [4, 2944, 768]
                speed: 114.655
                value: {index: 23, type: Single}
              - key: [4, 2944, 1792]
                speed: 201.514
                value: {index: 24, type: Single}
              - key: [4, 2944, 3328]
                speed: 158.641
                value: {index: 22, type: Single}
              - key: [4, 3584, 128]
                speed: 32.9566
                value: {index: 20, type: Single}
              - key: [4, 3584, 256]
                speed: 56.5662
                value: {index: 23, type: Single}
              - key: [4, 3584, 768]
                speed: 134.269
                value: {index: 23, type: Single}
              - key: [4, 3584, 1792]
                speed: 83.6489
                value: {index: 26, type: Single}
              - key: [4, 3584, 3328]
                speed: 66.9038
                value: {index: 22, type: Single}
              - key: [4, 4288, 128]
                speed: 39.487
                value: {index: 20, type: Single}
              - key: [4, 4288, 256]
                speed: 65.341
                value: {index: 25, type: Single}
              - key: [4, 4288, 768]
                speed: 151.063
                value: {index: 25, type: Single}
              - key: [4, 4288, 1792]
                speed: 81.5378
                value: {index: 24, type: Single}
              - key: [4, 4288, 3328]
                speed: 65.5694
                value: {index: 24, type: Single}
              - key: [4, 5056, 128]
                speed: 46.6264
                value: {index: 20, type: Single}
              - key: [4, 5056, 256]
                speed: 73.0438
                value: {index: 25, type: Single}
              - key: [4, 5056, 768]
                speed: 167.084
                value: {index: 23, type: Single}
              - key: [4, 5056, 1792]
                speed: 79.771
                value: {index: 24, type: Single}
              - key: [4, 5056, 3328]
                speed: 69.3016
                value: {index: 26, type: Single}
              - key: [4, 5888, 128]
                speed: 53.8336
                value: {index: 20, type: Single}
              - key: [4, 5888, 256]
                speed: 83.6475
                value: {index: 25, type: Single}
              - key: [4, 5888, 768]
                speed: 185.328
                value: {index: 23, type: Single}
              - key: [4, 5888, 1792]
                speed: 90.7877
                value: {index: 24, type: Single}
              - key: [4, 5888, 3328]
                speed: 71.2817
                value: {index: 24, type: Single}
              - key: [4, 6784, 128]
                speed: 62.3822
                value: {index: 20, type: Single}
              - key: [4, 6784, 256]
                speed: 92.4762
                value: {index: 23, type: Single}
              - key: [4, 6784, 768]
                speed: 183.585
                value: {index: 26, type: Single}
              - key: [4, 6784, 1792]
                speed: 101.342
                value: {index: 26, type: Single}
              - key: [4, 6784, 3328]
                speed: 70.9441
                value: {index: 26, type: Single}
              - key: [64, 4, 128]
                speed: 0.605028
                value: {index: 20, type: Single}
              - key: [64, 4, 256]
                speed: 1.76172
                value: {index: 25, type: Single}
              - key: [64, 4, 768]
                speed: 4.38075
                value: {index: 26, type: Single}
              - key: [64, 4, 1792]
                speed: 7.86612
                value: {index: 24, type: Single}
              - key: [64, 4, 3328]
                speed: 10.9677
                value: {index: 24, type: Single}
              - key: [64, 64, 128]
                speed: 4.36035
                value: {index: 2, type: Single}
              - key: [64, 64, 256]
                speed: 21.3472
                value: {index: 6, type: Single}
              - key: [64, 64, 768]
                speed: 37.8092
                value: {index: 16, type: Single}
              - key: [64, 64, 1792]
                speed: 94.588
                value: {index: 5, type: Single}
              - key: [64, 64, 3328]
                speed: 142.948
                value: {index: 5, type: Single}
              - key: [64, 128, 128]
                speed: 12.1814
                value: {index: 1, type: Single}
              - key: [64, 128, 256]
                speed: 52.6394
                value: {index: 11, type: Single}
              - key: [64, 128, 768]
                speed: 76.9503
                value: {index: 5, type: Single}
              - key: [64, 128, 1792]
                speed: 159.566
                value: {index: 5, type: Single}
              - key: [64, 128, 3328]
                speed: 249.844
                value: {index: 5, type: Single}
              - key: [64, 256, 128]
                speed: 25.1578
                value: {index: 1, type: Single}
              - key: [64, 256, 256]
                speed: 101.606
                value: {index: 11, type: Single}
              - key: [64, 256, 768]
                speed: 139.81
                value: {index: 6, type: Single}
              - key: [64, 256, 1792]
                speed: 260.47
                value: {index: 13, type: Single}
              - key: [64, 256, 3328]
                speed: 408.618
                value: {index: 5, type: Single}
              - key: [64, 448, 128]
                speed: 41.9718
                value: {index: 1, type: Single}
              - key: [64, 448, 256]
                speed: 177.467
                value: {index: 11, type: Single}
              - key: [64, 448, 768]
                speed: 246.862
                value: {index: 6, type: Single}
              - key: [64, 448, 1792]
                speed: 433.369
                value: {index: 13, type: Single}
              - key: [64, 448, 3328]
                speed: 665.6
                value: {index: 13, type: Single}
              - key: [64, 704, 128]
                speed: 68.0091
                value: {index: 1, type: Single}
              - key: [64, 704, 256]
                speed: 273.585
                value: {index: 11, type: Single}
              - key: [64, 704, 768]
                speed: 387.926
                value: {index: 6, type: Single}
              - key: [64, 704, 1792]
                speed: 608.718
                value: {index: 13, type: Single}
              - key: [64, 704, 3328]
                speed: 916.095
                value: {index: 13, type: Single}
              - key: [64, 1024, 128]
                speed: 99.297
                value: {index: 1, type: Single}
              - key: [64, 1024, 256]
                speed: 392.725
                value: {index: 11, type: Single}
              - key: [64, 1024, 768]
                speed: 561.737
                value: {index: 6, type: Single}
              - key: [64, 1024, 1792]
                speed: 753.597
                value: {index: 16, type: Single}
              - key: [64, 1024, 3328]
                speed: 1038.99
                value: {index: 15, type: Single}
              - key: [64, 1408, 128]
                speed: 136.018
                value: {index: 1, type: Single}
              - key: [64, 1408, 256]
                speed: 516.771
                value: {index: 11, type: Single}
              - key: [64, 1408, 768]
                speed: 774.463
                value: {index: 6, type: Single}
              - key: [64, 1408, 1792]
                speed: 1013.31
                value: {index: 16, type: Single}
              - key: [64, 1408, 3328]
                speed: 1336.9
                value: {index: 15, type: Single}
              - key: [64, 1856, 128]
                speed: 173.249
                value: {index: 1, type: Single}
              - key: [64, 1856, 256]
                speed: 656.492
                value: {index: 6, type: Single}
              - key: [64, 1856, 768]
                speed: 1004.69
                value: {index: 6, type: Single}
              - key: [64, 1856, 1792]
                speed: 1176.29
                value: {index: 6, type: Single}
              - key: [64, 1856, 3328]
                speed: 1602.79
                value: {index: 9, type: Single}
              - key: [64, 2368, 128]
                speed: 218.848
                value: {index: 1, type: Single}
              - key: [64, 2368, 256]
                speed: 819.2
                value: {index: 11, type: Single}
              - key: [64, 2368, 768]
                speed: 1266.23
                value: {index: 6, type: Single}
              - key: [64, 2368, 1792]
                speed: 1497.47
                value: {index: 6, type: Single}
              - key: [64, 2368, 3328]
                speed: 1668.76
                value: {index: 9, type: Single}
              - key: [64, 2944, 128]
                speed: 269.166
                value: {index: 1, type: Single}
              - key: [64, 2944, 256]
                speed: 1011.63
                value: {index: 6, type: Single}
              - key: [64, 2944, 768]
                speed: 1559.3
                value: {index: 6, type: Single}
              - key: [64, 2944, 1792]
                speed: 1836.6
                value: {index: 6, type: Single}
              - key: [64, 2944, 3328]
                speed: 2014.94
                value: {index: 17, type: Single}
              - key: [64, 3584, 128]
                speed: 327.973
                value: {index: 1, type: Single}
              - key: [64, 3584, 256]
                speed: 1176.29
                value: {index: 6, type: Single}
              - key: [64, 3584, 768]
                speed: 1864.53
                value: {index: 6, type: Single}
              - key: [64, 3584, 1792]
                speed: 2180.82
                value: {index: 6, type: Single}
              - key: [64, 3584, 3328]
                speed: 2316.59
                value: {index: 6, type: Single}
              - key: [64, 4288, 128]
                speed: 388.233
                value: {index: 1, type: Single}
              - key: [64, 4288, 256]
                speed: 1297.17
                value: {index: 6, type: Single}
              - key: [64, 4288, 768]
                speed: 1775.3
                value: {index: 6, type: Single}
              - key: [64, 4288, 1792]
                speed: 1988.12
                value: {index: 6, type: Single}
              - key: [64, 4288, 3328]
                speed: 2076.84
                value: {index: 6, type: Single}
              - key: [64, 5056, 128]
                speed: 444.026
                value: {index: 1, type: Single}
              - key: [64, 5056, 256]
                speed: 1529.5
                value: {index: 6, type: Single}
              - key: [64, 5056, 768]
                speed: 2080.65
                value: {index: 6, type: Single}
              - key: [64, 5056, 1792]
                speed: 2332.89
                value: {index: 6, type: Single}
              - key: [64, 5056, 3328]
                speed: 2438.61
                value: {index: 6, type: Single}
              - key: [64, 5888, 128]
                speed: 523.833
                value: {index: 1, type: Single}
              - key: [64, 5888, 256]
                speed: 1747.63
                value: {index: 6, type: Single}
              - key: [64, 5888, 768]
                speed: 2379.99
                value: {index: 6, type: Single}
              - key: [64, 5888, 1792]
                speed: 2690.8
                value: {index: 6, type: Single}
              - key: [64, 5888, 3328]
                speed: 2818.45
                value: {index: 6, type: Single}
              - key: [64, 6784, 128]
                speed: 585.735
                value: {index: 1, type: Single}
              - key: [64, 6784, 256]
                speed: 1999.08
                value: {index: 6, type: Single}
              - key: [64, 6784, 768]
                speed: 2670.14
                value: {index: 6, type: Single}
              - key: [64, 6784, 1792]
                speed: 3013.8
                value: {index: 6, type: Single}
              - key: [64, 6784, 3328]
                speed: 3203.57
                value: {index: 6, type: Single}
              - key: [128, 4, 128]
                speed: 1.23189
                value: {index: 20, type: Single}
              - key: [128, 4, 256]
                speed: 3.30323
                value: {index: 25, type: Single}
              - key: [128, 4, 768]
                speed: 7.96629
                value: {index: 24, type: Single}
              - key: [128, 4, 1792]
                speed: 14.8176
                value: {index: 24, type: Single}
              - key: [128, 4, 3328]
                speed: 21.0466
                value: {index: 24, type: Single}
              - key: [128, 64, 128]
                speed: 13.2262
                value: {index: 1, type: Single}
              - key: [128, 64, 256]
                speed: 51.3002
                value: {index: 11, type: Single}
              - key: [128, 64, 768]
                speed: 82.957
                value: {index: 5, type: Single}
              - key: [128, 64, 1792]
                speed: 168.969
                value: {index: 5, type: Single}
              - key: [128, 64, 3328]
                speed: 254.889
                value: {index: 5, type: Single}
              - key: [128, 128, 128]
                speed: 26.5866
                value: {index: 1, type: Single}
              - key: [128, 128, 256]
                speed: 105.703
                value: {index: 11, type: Single}
              - key: [128, 128, 768]
                speed: 140.184
                value: {index: 16, type: Single}
              - key: [128, 128, 1792]
                speed: 271.652
                value: {index: 13, type: Single}
              - key: [128, 128, 3328]
                speed: 418.915
                value: {index: 5, type: Single}
              - key: [128, 256, 128]
                speed: 50.607
                value: {index: 1, type: Single}
              - key: [128, 256, 256]
                speed: 202.038
                value: {index: 11, type: Single}
              - key: [128, 256, 768]
                speed: 278.137
                value: {index: 6, type: Single}
              - key: [128, 256, 1792]
                speed: 485.773
                value: {index: 13, type: Single}
              - key: [128, 256, 3328]
                speed: 732.876
                value: {index: 13, type: Single}
              - key: [128, 448, 128]
                speed: 84.6406
                value: {index: 1, type: Single}
              - key: [128, 448, 256]
                speed: 354.249
                value: {index: 11, type: Single}
              - key: [128, 448, 768]
                speed: 492.84
                value: {index: 6, type: Single}
              - key: [128, 448, 1792]
                speed: 771.012
                value: {index: 13, type: Single}
              - key: [128, 448, 3328]
                speed: 1152.42
                value: {index: 13, type: Single}
              - key: [128, 704, 128]
                speed: 135.38
                value: {index: 1, type: Single}
              - key: [128, 704, 256]
                speed: 521.444
                value: {index: 6, type: Single}
              - key: [128, 704, 768]
                speed: 777.246
                value: {index: 6, type: Single}
              - key: [128, 704, 1792]
                speed: 998.273
                value: {index: 16, type: Single}
              - key: [128, 704, 3328]
                speed: 1329.78
                value: {index: 16, type: Single}
              - key: [128, 1024, 128]
                speed: 192.223
                value: {index: 1, type: Single}
              - key: [128, 1024, 256]
                speed: 728.178
                value: {index: 6, type: Single}
              - key: [128, 1024, 768]
                speed: 1106.68
                value: {index: 6, type: Single}
              - key: [128, 1024, 1792]
                speed: 1299.12
                value: {index: 6, type: Single}
              - key: [128, 1024, 3328]
                speed: 1522.22
                value: {index: 9, type: Single}
              - key: [128, 1408, 128]
                speed: 260.722
                value: {index: 1, type: Single}
              - key: [128, 1408, 256]
                speed: 979.146
                value: {index: 11, type: Single}
              - key: [128, 1408, 768]
                speed: 1509.73
                value: {index: 6, type: Single}
              - key: [128, 1408, 1792]
                speed: 1765.2
                value: {index: 6, type: Single}
              - key: [128, 1408, 3328]
                speed: 2017.03
                value: {index: 9, type: Single}
              - key: [128, 1856, 128]
                speed: 340.905
                value: {index: 1, type: Single}
              - key: [128, 1856, 256]
                speed: 1240.16
                value: {index: 11, type: Single}
              - key: [128, 1856, 768]
                speed: 1932.76
                value: {index: 6, type: Single}
              - key: [128, 1856, 1792]
                speed: 2306.69
                value: {index: 6, type: Single}
              - key: [128, 1856, 3328]
                speed: 2476.9
                value: {index: 17, type: Single}
              - key: [128, 2368, 128]
                speed: 420.978
                value: {index: 1, type: Single}
              - key: [128, 2368, 256]
                speed: 1460.74
                value: {index: 11, type: Single}
              - key: [128, 2368, 768]
                speed: 1966.08
                value: {index: 6, type: Single}
              - key: [128, 2368, 1792]
                speed: 2200.82
                value: {index: 6, type: Single}
              - key: [128, 2368, 3328]
                speed: 2418.79
                value: {index: 8, type: Single}
              - key: [128, 2944, 128]
                speed: 525.659
                value: {index: 1, type: Single}
              - key: [128, 2944, 256]
                speed: 1775.94
                value: {index: 6, type: Single}
              - key: [128, 2944, 768]
                speed: 2441.02
                value: {index: 6, type: Single}
              - key: [128, 2944, 1792]
                speed: 2726.43
                value: {index: 6, type: Single}
              - key: [128, 2944, 3328]
                speed: 2861.67
                value: {index: 6, type: Single}
              - key: [128, 3584, 128]
                speed: 539.708
                value: {index: 1, type: Single}
              - key: [128, 3584, 256]
                speed: 2112.24
                value: {index: 6, type: Single}
              - key: [128, 3584, 768]
                speed: 2943.86
                value: {index: 6, type: Single}
              - key: [128, 3584, 1792]
                speed: 3304.19
                value: {index: 6, type: Single}
              - key: [128, 3584, 3328]
                speed: 3469.83
                value: {index: 6, type: Single}
              - key: [128, 4288, 128]
                speed: 578.894
                value: {index: 1, type: Single}
              - key: [128, 4288, 256]
                speed: 1698.61
                value: {index: 6, type: Single}
              - key: [128, 4288, 768]
                speed: 2226.06
                value: {index: 6, type: Single}
              - key: [128, 4288, 1792]
                speed: 2436.49
                value: {index: 6, type: Single}
              - key: [128, 4288, 3328]
                speed: 2569.23
                value: {index: 8, type: Single}
              - key: [128, 5056, 128]
                speed: 704.401
                value: {index: 1, type: Single}
              - key: [128, 5056, 256]
                speed: 1972.32
                value: {index: 6, type: Single}
              - key: [128, 5056, 768]
                speed: 2617.02
                value: {index: 6, type: Single}
              - key: [128, 5056, 1792]
                speed: 2855.9
                value: {index: 6, type: Single}
              - key: [128, 5056, 3328]
                speed: 2964.02
                value: {index: 6, type: Single}
              - key: [128, 5888, 128]
                speed: 793.331
                value: {index: 1, type: Single}
              - key: [128, 5888, 256]
                speed: 2258.17
                value: {index: 10, type: Single}
              - key: [128, 5888, 768]
                speed: 2659.99
                value: {index: 10, type: Single}
              - key: [128, 5888, 1792]
                speed: 2829.71
                value: {index: 6, type: Single}
              - key: [128, 5888, 3328]
                speed: 2913.52
                value: {index: 6, type: Single}
              - key: [128, 6784, 128]
                speed: 888.908
                value: {index: 1, type: Single}
              - key: [128, 6784, 256]
                speed: 2537.65
                value: {index: 10, type: Single}
              - key: [128, 6784, 768]
                speed: 3034.65
                value: {index: 10, type: Single}
              - key: [128, 6784, 1792]
                speed: 3246.18
                value: {index: 6, type: Single}
              - key: [128, 6784, 3328]
                speed: 3336.42
                value: {index: 6, type: Single}
              - key: [256, 4, 128]
                speed: 2.47121
                value: {index: 20, type: Single}
              - key: [256, 4, 256]
                speed: 5.82025
                value: {index: 24, type: Single}
              - key: [256, 4, 768]
                speed: 15.3121
                value: {index: 26, type: Single}
              - key: [256, 4, 1792]
                speed: 28.672
                value: {index: 24, type: Single}
              - key: [256, 4, 3328]
                speed: 40.6862
                value: {index: 24, type: Single}
              - key: [256, 64, 128]
                speed: 26.7494
                value: {index: 1, type: Single}
              - key: [256, 64, 256]
                speed: 105.703
                value: {index: 11, type: Single}
              - key: [256, 64, 768]
                speed: 138.578
                value: {index: 16, type: Single}
              - key: [256, 64, 1792]
                speed: 267.105
                value: {index: 13, type: Single}
              - key: [256, 64, 3328]
                speed: 393.292
                value: {index: 13, type: Single}
              - key: [256, 128, 128]
                speed: 49.9322
                value: {index: 1, type: Single}
              - key: [256, 128, 256]
                speed: 205.201
                value: {index: 11, type: Single}
              - key: [256, 128, 768]
                speed: 282.889
                value: {index: 6, type: Single}
              - key: [256, 128, 1792]
                speed: 495.948
                value: {index: 13, type: Single}
              - key: [256, 128, 3328]
                speed: 799.97
                value: {index: 13, type: Single}
              - key: [256, 256, 128]
                speed: 95.8479
                value: {index: 1, type: Single}
              - key: [256, 256, 256]
                speed: 386.928
                value: {index: 11, type: Single}
              - key: [256, 256, 768]
                speed: 564.256
                value: {index: 6, type: Single}
              - key: [256, 256, 1792]
                speed: 814.654
                value: {index: 16, type: Single}
              - key: [256, 256, 3328]
                speed: 1124.25
                value: {index: 15, type: Single}
              - key: [256, 448, 128]
                speed: 169.125
                value: {index: 1, type: Single}
              - key: [256, 448, 256]
                speed: 657.709
                value: {index: 6, type: Single}
              - key: [256, 448, 768]
                speed: 976.068
                value: {index: 6, type: Single}
              - key: [256, 448, 1792]
                speed: 1180.07
                value: {index: 16, type: Single}
              - key: [256, 448, 3328]
                speed: 1569.93
                value: {index: 15, type: Single}
              - key: [256, 704, 128]
                speed: 258.154
                value: {index: 1, type: Single}
              - key: [256, 704, 256]
                speed: 984.158
                value: {index: 11, type: Single}
              - key: [256, 704, 768]
                speed: 1495.38
                value: {index: 6, type: Single}
              - key: [256, 704, 1792]
                speed: 1769.85
                value: {index: 6, type: Single}
              - key: [256, 704, 3328]
                speed: 1978.71
                value: {index: 17, type: Single}
              - key: [256, 1024, 128]
                speed: 377.525
                value: {index: 1, type: Single}
              - key: [256, 1024, 256]
                speed: 1284.63
                value: {index: 11, type: Single}
              - key: [256, 1024, 768]
                speed: 1708.47
                value: {index: 6, type: Single}
              - key: [256, 1024, 1792]
                speed: 1908.98
                value: {index: 6, type: Single}
              - key: [256, 1024, 3328]
                speed: 2131.59
                value: {index: 8, type: Single}
              - key: [256, 1408, 128]
                speed: 495.036
                value: {index: 1, type: Single}
              - key: [256, 1408, 256]
                speed: 1724.12
                value: {index: 6, type: Single}
              - key: [256, 1408, 768]
                speed: 2345.97
                value: {index: 6, type: Single}
              - key: [256, 1408, 1792]
                speed: 2622.29
                value: {index: 6, type: Single}
              - key: [256, 1408, 3328]
                speed: 2802.21
                value: {index: 8, type: Single}
              - key: [256, 1856, 128]
                speed: 566.059
                value: {index: 1, type: Single}
              - key: [256, 1856, 256]
                speed: 2181.4
                value: {index: 6, type: Single}
              - key: [256, 1856, 768]
                speed: 3073.66
                value: {index: 6, type: Single}
              - key: [256, 1856, 1792]
                speed: 3422.2
                value: {index: 6, type: Single}
              - key: [256, 1856, 3328]
                speed: 3597.68
                value: {index: 6, type: Single}
              - key: [256, 2368, 128]
                speed: 664.793
                value: {index: 1, type: Single}
              - key: [256, 2368, 256]
                speed: 1838.74
                value: {index: 6, type: Single}
              - key: [256, 2368, 768]
                speed: 2469.07
                value: {index: 6, type: Single}
              - key: [256, 2368, 1792]
                speed: 2688.39
                value: {index: 6, type: Single}
              - key: [256, 2368, 3328]
                speed: 2770.63
                value: {index: 6, type: Single}
              - key: [256, 2944, 128]
                speed: 804.982
                value: {index: 1, type: Single}
              - key: [256, 2944, 256]
                speed: 2245.55
                value: {index: 10, type: Single}
              - key: [256, 2944, 768]
                speed: 2655.11
                value: {index: 10, type: Single}
              - key: [256, 2944, 1792]
                speed: 2832.56
                value: {index: 6, type: Single}
              - key: [256, 2944, 3328]
                speed: 2915.15
                value: {index: 6, type: Single}
              - key: [256, 3584, 128]
                speed: 958.229
                value: {index: 1, type: Single}
              - key: [256, 3584, 256]
                speed: 2666.68
                value: {index: 10, type: Single}
              - key: [256, 3584, 768]
                speed: 3206.42
                value: {index: 10, type: Single}
              - key: [256, 3584, 1792]
                speed: 3421.93
                value: {index: 6, type: Single}
              - key: [256, 3584, 3328]
                speed: 3520.08
                value: {index: 6, type: Single}
              - key: [256, 4288, 128]
                speed: 888.849
                value: {index: 1, type: Single}
              - key: [256, 4288, 256]
                speed: 2378.29
                value: {index: 10, type: Single}
              - key: [256, 4288, 768]
                speed: 2880.86
                value: {index: 6, type: Single}
              - key: [256, 4288, 1792]
                speed: 3113.73
                value: {index: 6, type: Single}
              - key: [256, 4288, 3328]
                speed: 3208.42
                value: {index: 6, type: Single}
              - key: [256, 5056, 128]
                speed: 996.122
                value: {index: 4, type: Single}
              - key: [256, 5056, 256]
                speed: 2779.78
                value: {index: 10, type: Single}
              - key: [256, 5056, 768]
                speed: 3113.41
                value: {index: 10, type: Single}
              - key: [256, 5056, 1792]
                speed: 3267.57
                value: {index: 6, type: Single}
              - key: [256, 5056, 3328]
                speed: 3351.24
                value: {index: 6, type: Single}
              - key: [256, 5888, 128]
                speed: 1154.49
                value: {index: 4, type: Single}
              - key: [256, 5888, 256]
                speed: 2709.8
                value: {index: 14, type: Single}
              - key: [256, 5888, 768]
                speed: 3172.63
                value: {index: 14, type: Single}
              - key: [256, 5888, 1792]
                speed: 3291.5
                value: {index: 14, type: Single}
              - key: [256, 5888, 3328]
                speed: 3359.31
                value: {index: 14, type: Single}
              - key: [256, 6784, 128]
                speed: 1291.23
                value: {index: 4, type: Single}
              - key: [256, 6784, 256]
                speed: 3094.35
                value: {index: 14, type: Single}
              - key: [256, 6784, 768]
                speed: 3600.94
                value: {index: 14, type: Single}
              - key: [256, 6784, 1792]
                speed: 3777.28
                value: {index: 14, type: Single}
              - key: [256, 6784, 3328]
                speed: 3855.64
                value: {index: 14, type: Single}
              - key: [448, 4, 128]
                speed: 4.29226
                value: {index: 20, type: Single}
              - key: [448, 4, 256]
                speed: 9.55733
                value: {index: 26, type: Single}
              - key: [448, 4, 768]
                speed: 25.0047
                value: {index: 26, type: Single}
              - key: [448, 4, 1792]
                speed: 46.8935
                value: {index: 24, type: Single}
              - key: [448, 4, 3328]
                speed: 66.5006
                value: {index: 24, type: Single}
              - key: [448, 64, 128]
                speed: 43.197
                value: {index: 1, type: Single}
              - key: [448, 64, 256]
                speed: 178.851
                value: {index: 11, type: Single}
              - key: [448, 64, 768]
                speed: 246.862
                value: {index: 6, type: Single}
              - key: [448, 64, 1792]
                speed: 450.388
                value: {index: 13, type: Single}
              - key: [448, 64, 3328]
                speed: 678.473
                value: {index: 13, type: Single}
              - key: [448, 128, 128]
                speed: 85.1117
                value: {index: 1, type: Single}
              - key: [448, 128, 256]
                speed: 344.926
                value: {index: 11, type: Single}
              - key: [448, 128, 768]
                speed: 495.056
                value: {index: 6, type: Single}
              - key: [448, 128, 1792]
                speed: 784.191
                value: {index: 13, type: Single}
              - key: [448, 128, 3328]
                speed: 1168.22
                value: {index: 13, type: Single}
              - key: [448, 256, 128]
                speed: 165.764
                value: {index: 1, type: Single}
              - key: [448, 256, 256]
                speed: 646.13
                value: {index: 6, type: Single}
              - key: [448, 256, 768]
                speed: 976.068
                value: {index: 6, type: Single}
              - key: [448, 256, 1792]
                speed: 1168.26
                value: {index: 9, type: Single}
              - key: [448, 256, 3328]
                speed: 1613.47
                value: {index: 9, type: Single}
              - key: [448, 448, 128]
                speed: 295.969
                value: {index: 1, type: Single}
              - key: [448, 448, 256]
                speed: 1083.06
                value: {index: 11, type: Single}
              - key: [448, 448, 768]
                speed: 1652.45
                value: {index: 6, type: Single}
              - key: [448, 448, 1792]
                speed: 1958.09
                value: {index: 6, type: Single}
              - key: [448, 448, 3328]
                speed: 2145.24
                value: {index: 17, type: Single}
              - key: [448, 704, 128]
                speed: 443.433
                value: {index: 1, type: Single}
              - key: [448, 704, 256]
                speed: 1499.64
                value: {index: 6, type: Single}
              - key: [448, 704, 768]
                speed: 2056.9
                value: {index: 6, type: Single}
              - key: [448, 704, 1792]
                speed: 2301.23
                value: {index: 6, type: Single}
              - key: [448, 704, 3328]
                speed: 2484.44
                value: {index: 8, type: Single}
              - key: [448, 1024, 128]
                speed: 620.984
                value: {index: 1, type: Single}
              - key: [448, 1024, 256]
                speed: 2155.66
                value: {index: 6, type: Single}
              - key: [448, 1024, 768]
                speed: 2959.69
                value: {index: 6, type: Single}
              - key: [448, 1024, 1792]
                speed: 3333.13
                value: {index: 6, type: Single}
              - key: [448, 1024, 3328]
                speed: 3471.1
                value: {index: 6, type: Single}
              - key: [448, 1408, 128]
                speed: 746.49
                value: {index: 1, type: Single}
              - key: [448, 1408, 256]
                speed: 1927.9
                value: {index: 6, type: Single}
              - key: [448, 1408, 768]
                speed: 2570.26
                value: {index: 6, type: Single}
              - key: [448, 1408, 1792]
                speed: 2790.75
                value: {index: 6, type: Single}
              - key: [448, 1408, 3328]
                speed: 2887.39
                value: {index: 6, type: Single}
              - key: [448, 1856, 128]
                speed: 953.678
                value: {index: 1, type: Single}
              - key: [448, 1856, 256]
                speed: 2470.53
                value: {index: 10, type: Single}
              - key: [448, 1856, 768]
                speed: 2942.24
                value: {index: 10, type: Single}
              - key: [448, 1856, 1792]
                speed: 3108.37
                value: {index: 10, type: Single}
              - key: [448, 1856, 3328]
                speed: 3202.47
                value: {index: 6, type: Single}
              - key: [448, 2368, 128]
                speed: 939.337
                value: {index: 1, type: Single}
              - key: [448, 2368, 256]
                speed: 2314.09
                value: {index: 10, type: Single}
              - key: [448, 2368, 768]
                speed: 2805.59
                value: {index: 6, type: Single}
              - key: [448, 2368, 1792]
                speed: 2647.14
                value: {index: 10, type: Single}
              - key: [448, 2368, 3328]
                speed: 3105.04
                value: {index: 6, type: Single}
              - key: [448, 2944, 128]
                speed: 1104.27
                value: {index: 4, type: Single}
              - key: [448, 2944, 256]
                speed: 2849.78
                value: {index: 10, type: Single}
              - key: [448, 2944, 768]
                speed: 3175.71
                value: {index: 10, type: Single}
              - key: [448, 2944, 1792]
                speed: 3329.61
                value: {index: 6, type: Single}
              - key: [448, 2944, 3328]
                speed: 3415.51
                value: {index: 6, type: Single}
              - key: [448, 3584, 128]
                speed: 1312.06
                value: {index: 4, type: Single}
              - key: [448, 3584, 256]
                speed: 2827.75
                value: {index: 12, type: Single}
              - key: [448, 3584, 768]
                speed: 3312.0
                value: {index: 14, type: Single}
              - key: [448, 3584, 1792]
                speed: 3495.93
                value: {index: 14, type: Single}
              - key: [448, 3584, 3328]
                speed: 3564.64
                value: {index: 14, type: Single}
              - key: [448, 4288, 128]
                speed: 1480.56
                value: {index: 2, type: Single}
              - key: [448, 4288, 256]
                speed: 3275.05
                value: {index: 12, type: Single}
              - key: [448, 4288, 768]
                speed: 3814.24
                value: {index: 12, type: Single}
              - key: [448, 4288, 1792]
                speed: 4012.21
                value: {index: 12, type: Single}
              - key: [448, 4288, 3328]
                speed: 4090.84
                value: {index: 12, type: Single}
              - key: [448, 5056, 128]
                speed: 1384.85
                value: {index: 3, type: Single}
              - key: [448, 5056, 256]
                speed: 3120.22
                value: {index: 10, type: Single}
              - key: [448, 5056, 768]
                speed: 3334.59
                value: {index: 10, type: Single}
              - key: [448, 5056, 1792]
                speed: 3465.95
                value: {index: 6, type: Single}
              - key: [448, 5056, 3328]
                speed: 3545.33
                value: {index: 6, type: Single}
              - key: [448, 5888, 128]
                speed: 1587.85
                value: {index: 3, type: Single}
              - key: [448, 5888, 256]
                speed: 3142.6
                value: {index: 10, type: Single}
              - key: [448, 5888, 768]
                speed: 3393.15
                value: {index: 6, type: Single}
              - key: [448, 5888, 1792]
                speed: 3600.47
                value: {index: 6, type: Single}
              - key: [448, 5888, 3328]
                speed: 3691.13
                value: {index: 6, type: Single}
              - key: [448, 6784, 128]
                speed: 1549.64
                value: {index: 0, type: Single}
              - key: [448, 6784, 256]
                speed: 3147.42
                value: {index: 10, type: Single}
              - key: [448, 6784, 768]
                speed: 3342.88
                value: {index: 6, type: Single}
              - key: [448, 6784, 1792]
                speed: 3546.14
                value: {index: 6, type: Single}
              - key: [448, 6784, 3328]
                speed: 3622.28
                value: {index: 6, type: Single}
              - key: [704, 4, 128]
                speed: 6.61621
                value: {index: 20, type: Single}
              - key: [704, 4, 256]
                speed: 13.8209
                value: {index: 26, type: Single}
              - key: [704, 4, 768]
                speed: 36.6806
                value: {index: 24, type: Single}
              - key: [704, 4, 1792]
                speed: 68.2667
                value: {index: 26, type: Single}
              - key: [704, 4, 3328]
                speed: 99.6136
                value: {index: 24, type: Single}
              - key: [704, 64, 128]
                speed: 66.3198
                value: {index: 1, type: Single}
              - key: [704, 64, 256]
                speed: 276.205
                value: {index: 11, type: Single}
              - key: [704, 64, 768]
                speed: 385.85
                value: {index: 6, type: Single}
              - key: [704, 64, 1792]
                speed: 645.303
                value: {index: 13, type: Single}
              - key: [704, 64, 3328]
                speed: 961.688
                value: {index: 13, type: Single}
              - key: [704, 128, 128]
                speed: 132.884
                value: {index: 1, type: Single}
              - key: [704, 128, 256]
                speed: 521.444
                value: {index: 11, type: Single}
              - key: [704, 128, 768]
                speed: 775.852
                value: {index: 6, type: Single}
              - key: [704, 128, 1792]
                speed: 1058.47
                value: {index: 16, type: Single}
              - key: [704, 128, 3328]
                speed: 1379.2
                value: {index: 15, type: Single}
              - key: [704, 256, 128]
                speed: 255.864
                value: {index: 1, type: Single}
              - key: [704, 256, 256]
                speed: 989.223
                value: {index: 11, type: Single}
              - key: [704, 256, 768]
                speed: 1499.26
                value: {index: 6, type: Single}
              - key: [704, 256, 1792]
                speed: 1771.4
                value: {index: 6, type: Single}
              - key: [704, 256, 3328]
                speed: 2005.7
                value: {index: 9, type: Single}
              - key: [704, 448, 128]
                speed: 453.801
                value: {index: 1, type: Single}
              - key: [704, 448, 256]
                speed: 1522.25
                value: {index: 6, type: Single}
              - key: [704, 448, 768]
                speed: 2056.9
                value: {index: 6, type: Single}
              - key: [704, 448, 1792]
                speed: 2291.53
                value: {index: 6, type: Single}
              - key: [704, 448, 3328]
                speed: 2457.45
                value: {index: 8, type: Single}
              - key: [704, 704, 128]
                speed: 653.201
                value: {index: 1, type: Single}
              - key: [704, 704, 256]
                speed: 1523.51
                value: {index: 6, type: Single}
              - key: [704, 704, 768]
                speed: 2028.1
                value: {index: 6, type: Single}
              - key: [704, 704, 1792]
                speed: 2212.84
                value: {index: 6, type: Single}
              - key: [704, 704, 3328]
                speed: 2531.63
                value: {index: 9, type: Single}
              - key: [704, 1024, 128]
                speed: 848.113
                value: {index: 1, type: Single}
              - key: [704, 1024, 256]
                speed: 2182.47
                value: {index: 6, type: Single}
              - key: [704, 1024, 768]
                speed: 2912.71
                value: {index: 6, type: Single}
              - key: [704, 1024, 1792]
                speed: 3188.17
                value: {index: 6, type: Single}
              - key: [704, 1024, 3328]
                speed: 3298.79
                value: {index: 6, type: Single}
              - key: [704, 1408, 128]
                speed: 923.687
                value: {index: 1, type: Single}
              - key: [704, 1408, 256]
                speed: 2205.8
                value: {index: 10, type: Single}
              - key: [704, 1408, 768]
                speed: 2614.24
                value: {index: 6, type: Single}
              - key: [704, 1408, 1792]
                speed: 2825.6
                value: {index: 6, type: Single}
              - key: [704, 1408, 3328]
                speed: 2913.74
                value: {index: 6, type: Single}
              - key: [704, 1856, 128]
                speed: 1113.8
                value: {index: 1, type: Single}
              - key: [704, 1856, 256]
                speed: 2823.23
                value: {index: 10, type: Single}
              - key: [704, 1856, 768]
                speed: 3144.55
                value: {index: 10, type: Single}
              - key: [704, 1856, 1792]
                speed: 3292.65
                value: {index: 6, type: Single}
              - key: [704, 1856, 3328]
                speed: 3384.11
                value: {index: 6, type: Single}
              - key: [704, 2368, 128]
                speed: 1329.01
                value: {index: 2, type: Single}
              - key: [704, 2368, 256]
                speed: 2913.51
                value: {index: 14, type: Single}
              - key: [704, 2368, 768]
                speed: 3438.0
                value: {index: 14, type: Single}
              - key: [704, 2368, 1792]
                speed: 3633.59
                value: {index: 14, type: Single}
              - key: [704, 2368, 3328]
                speed: 3703.02
                value: {index: 14, type: Single}
              - key: [704, 2944, 128]
                speed: 1300.95
                value: {index: 1, type: Single}
              - key: [704, 2944, 256]
                speed: 2831.87
                value: {index: 10, type: Single}
              - key: [704, 2944, 768]
                speed: 3218.49
                value: {index: 6, type: Single}
              - key: [704, 2944, 1792]
                speed: 3432.84
                value: {index: 6, type: Single}
              - key: [704, 2944, 3328]
                speed: 3514.27
                value: {index: 6, type: Single}
              - key: [704, 3584, 128]
                speed: 1504.1
                value: {index: 3, type: Single}
              - key: [704, 3584, 256]
                speed: 3195.11
                value: {index: 14, type: Single}
              - key: [704, 3584, 768]
                speed: 3615.24
                value: {index: 14, type: Single}
              - key: [704, 3584, 1792]
                speed: 3775.18
                value: {index: 14, type: Single}
              - key: [704, 3584, 3328]
                speed: 3832.99
                value: {index: 14, type: Single}
              - key: [704, 4288, 128]
                speed: 1607.32
                value: {index: 0, type: Single}
              - key: [704, 4288, 256]
                speed: 3107.11
                value: {index: 10, type: Single}
              - key: [704, 4288, 768]
                speed: 3316.93
                value: {index: 6, type: Single}
              - key: [704, 4288, 1792]
                speed: 3528.86
                value: {index: 6, type: Single}
              - key: [704, 4288, 3328]
                speed: 3600.97
                value: {index: 6, type: Single}
              - key: [704, 5056, 128]
                speed: 1731.03
                value: {index: 0, type: Single}
              - key: [704, 5056, 256]
                speed: 3243.21
                value: {index: 10, type: Single}
              - key: [704, 5056, 768]
                speed: 3749.64
                value: {index: 18, type: Single}
              - key: [704, 5056, 1792]
                speed: 3948.45
                value: {index: 18, type: Single}
              - key: [704, 5056, 3328]
                speed: 4021.73
                value: {index: 18, type: Single}
              - key: [704, 5888, 128]
                speed: 1659.31
                value: {index: 4, type: Single}
              - key: [704, 5888, 256]
                speed: 3399.41
                value: {index: 10, type: Single}
              - key: [704, 5888, 768]
                speed: 3605.13
                value: {index: 14, type: Single}
              - key: [704, 5888, 1792]
                speed: 3725.08
                value: {index: 6, type: Single}
              - key: [704, 5888, 3328]
                speed: 3808.1
                value: {index: 6, type: Single}
              - key: [704, 6784, 128]
                speed: 1897.57
                value: {index: 3, type: Single}
              - key: [704, 6784, 256]
                speed: 3534.46
                value: {index: 10, type: Single}
              - key: [704, 6784, 768]
                speed: 3782.92
                value: {index: 12, type: Single}
              - key: [704, 6784, 1792]
                speed: 3890.5
                value: {index: 12, type: Single}
              - key: [704, 6784, 3328]
                speed: 3921.5
                value: {index: 12, type: Single}
              - key: [1024, 4, 128]
                speed: 9.49806
                value: {index: 20, type: Single}
              - key: [1024, 4, 256]
                speed: 18.6447
                value: {index: 24, type: Single}
              - key: [1024, 4, 768]
                speed: 48.6052
                value: {index: 26, type: Single}
              - key: [1024, 4, 1792]
                speed: 93.5274
                value: {index: 24, type: Single}
              - key: [1024, 4, 3328]
                speed: 135.664
                value: {index: 24, type: Single}
              - key: [1024, 64, 128]
                speed: 98.4578
                value: {index: 1, type: Single}
              - key: [1024, 64, 256]
                speed: 379.919
                value: {index: 11, type: Single}
              - key: [1024, 64, 768]
                speed: 563.751
                value: {index: 6, type: Single}
              - key: [1024, 64, 1792]
                speed: 759.445
                value: {index: 16, type: Single}
              - key: [1024, 64, 3328]
                speed: 988.864
                value: {index: 15, type: Single}
              - key: [1024, 128, 128]
                speed: 186.912
                value: {index: 1, type: Single}
              - key: [1024, 128, 256]
                speed: 725.658
                value: {index: 6, type: Single}
              - key: [1024, 128, 768]
                speed: 1106.68
                value: {index: 6, type: Single}
              - key: [1024, 128, 1792]
                speed: 1299.12
                value: {index: 6, type: Single}
              - key: [1024, 128, 3328]
                speed: 1424.77
                value: {index: 17, type: Single}
              - key: [1024, 256, 128]
                speed: 368.568
                value: {index: 1, type: Single}
              - key: [1024, 256, 256]
                speed: 1269.08
                value: {index: 11, type: Single}
              - key: [1024, 256, 768]
                speed: 1706.16
                value: {index: 6, type: Single}
              - key: [1024, 256, 1792]
                speed: 1900.95
                value: {index: 6, type: Single}
              - key: [1024, 256, 3328]
                speed: 1980.24
                value: {index: 6, type: Single}
              - key: [1024, 448, 128]
                speed: 601.149
                value: {index: 1, type: Single}
              - key: [1024, 448, 256]
                speed: 2070.53
                value: {index: 6, type: Single}
              - key: [1024, 448, 768]
                speed: 2943.86
                value: {index: 6, type: Single}
              - key: [1024, 448, 1792]
                speed: 3309.52
                value: {index: 6, type: Single}
              - key: [1024, 448, 3328]
                speed: 3459.77
                value: {index: 6, type: Single}
              - key: [1024, 704, 128]
                speed: 809.427
                value: {index: 1, type: Single}
              - key: [1024, 704, 256]
                speed: 2114.45
                value: {index: 6, type: Single}
              - key: [1024, 704, 768]
                speed: 2534.09
                value: {index: 7, type: Single}
              - key: [1024, 704, 1792]
                speed: 2780.79
                value: {index: 7, type: Single}
              - key: [1024, 704, 3328]
                speed: 3263.61
                value: {index: 6, type: Single}
              - key: [1024, 1024, 128]
                speed: 866.144
                value: {index: 4, type: Single}
              - key: [1024, 1024, 256]
                speed: 2250.46
                value: {index: 10, type: Single}
              - key: [1024, 1024, 768]
                speed: 2749.61
                value: {index: 6, type: Single}
              - key: [1024, 1024, 1792]
                speed: 2968.67
                value: {index: 6, type: Single}
              - key: [1024, 1024, 3328]
                speed: 3057.03
                value: {index: 6, type: Single}
              - key: [1024, 1408, 128]
                speed: 1159.23
                value: {index: 4, type: Single}
              - key: [1024, 1408, 256]
                speed: 2978.52
                value: {index: 10, type: Single}
              - key: [1024, 1408, 768]
                speed: 3425.19
                value: {index: 10, type: Single}
              - key: [1024, 1408, 1792]
                speed: 3586.47
                value: {index: 6, type: Single}
              - key: [1024, 1408, 3328]
                speed: 3679.21
                value: {index: 6, type: Single}
              - key: [1024, 1856, 128]
                speed: 1374.72
                value: {index: 4, type: Single}
              - key: [1024, 1856, 256]
                speed: 3345.29
                value: {index: 14, type: Single}
              - key: [1024, 1856, 768]
                speed: 3935.55
                value: {index: 14, type: Single}
              - key: [1024, 1856, 1792]
                speed: 4138.04
                value: {index: 14, type: Single}
              - key: [1024, 1856, 3328]
                speed: 4220.95
                value: {index: 14, type: Single}
              - key: [1024, 2368, 128]
                speed: 1325.5
                value: {index: 4, type: Single}
              - key: [1024, 2368, 256]
                speed: 3289.3
                value: {index: 10, type: Single}
              - key: [1024, 2368, 768]
                speed: 3569.76
                value: {index: 14, type: Single}
              - key: [1024, 2368, 1792]
                speed: 3669.02
                value: {index: 14, type: Single}
              - key: [1024, 2368, 3328]
                speed: 3762.52
                value: {index: 6, type: Single}
              - key: [1024, 2944, 128]
                speed: 1452.41
                value: {index: 0, type: Single}
              - key: [1024, 2944, 256]
                speed: 3103.89
                value: {index: 10, type: Single}
              - key: [1024, 2944, 768]
                speed: 3278.28
                value: {index: 6, type: Single}
              - key: [1024, 2944, 1792]
                speed: 3504.14
                value: {index: 6, type: Single}
              - key: [1024, 2944, 3328]
                speed: 3583.54
                value: {index: 6, type: Single}
              - key: [1024, 3584, 128]
                speed: 1616.3
                value: {index: 0, type: Single}
              - key: [1024, 3584, 256]
                speed: 3493.17
                value: {index: 14, type: Single}
              - key: [1024, 3584, 768]
                speed: 3941.4
                value: {index: 18, type: Single}
              - key: [1024, 3584, 1792]
                speed: 4099.15
                value: {index: 18, type: Single}
              - key: [1024, 3584, 3328]
                speed: 4166.15
                value: {index: 18, type: Single}
              - key: [1024, 4288, 128]
                speed: 1607.29
                value: {index: 4, type: Single}
              - key: [1024, 4288, 256]
                speed: 3552.7
                value: {index: 14, type: Single}
              - key: [1024, 4288, 768]
                speed: 3836.6
                value: {index: 14, type: Single}
              - key: [1024, 4288, 1792]
                speed: 3927.19
                value: {index: 14, type: Single}
              - key: [1024, 4288, 3328]
                speed: 3925.26
                value: {index: 14, type: Single}
              - key: [1024, 5056, 128]
                speed: 1646.22
                value: {index: 4, type: Single}
              - key: [1024, 5056, 256]
                speed: 3619.73
                value: {index: 14, type: Single}
              - key: [1024, 5056, 768]
                speed: 3846.05
                value: {index: 14, type: Single}
              - key: [1024, 5056, 1792]
                speed: 3931.0
                value: {index: 14, type: Single}
              - key: [1024, 5056, 3328]
                speed: 3926.02
                value: {index: 14, type: Single}
              - key: [1024, 5888, 128]
                speed: 1719.9
                value: {index: 4, type: Single}
              - key: [1024, 5888, 256]
                speed: 3625.97
                value: {index: 14, type: Single}
              - key: [1024, 5888, 768]
                speed: 3831.94
                value: {index: 14, type: Single}
              - key: [1024, 5888, 1792]
                speed: 3889.77
                value: {index: 14, type: Single}
              - key: [1024, 5888, 3328]
                speed: 3897.5
                value: {index: 14, type: Single}
              - key: [1024, 6784, 128]
                speed: 1787.25
                value: {index: 4, type: Single}
              - key: [1024, 6784, 256]
                speed: 3676.17
                value: {index: 14, type: Single}
              - key: [1024, 6784, 768]
                speed: 3895.64
                value: {index: 14, type: Single}
              - key: [1024, 6784, 1792]
                speed: 3947.86
                value: {index: 14, type: Single}
              - key: [1024, 6784, 3328]
                speed: 3960.85
                value: {index: 18, type: Single}
              - key: [1408, 4, 128]
                speed: 13.0033
                value: {index: 20, type: Single}
              - key: [1408, 4, 256]
                speed: 25.2062
                value: {index: 25, type: Single}
              - key: [1408, 4, 768]
                speed: 60.1415
                value: {index: 26, type: Single}
              - key: [1408, 4, 1792]
                speed: 116.381
                value: {index: 24, type: Single}
              - key: [1408, 4, 3328]
                speed: 183.04
                value: {index: 24, type: Single}
              - key: [1408, 64, 128]
                speed: 135.634
                value: {index: 1, type: Single}
              - key: [1408, 64, 256]
                speed: 511.274
                value: {index: 6, type: Single}
              - key: [1408, 64, 768]
                speed: 777.945
                value: {index: 6, type: Single}
              - key: [1408, 64, 1792]
                speed: 1083.47
                value: {index: 16, type: Single}
              - key: [1408, 64, 3328]
                speed: 1432.97
                value: {index: 15, type: Single}
              - key: [1408, 128, 128]
                speed: 257.463
                value: {index: 1, type: Single}
              - key: [1408, 128, 256]
                speed: 970.904
                value: {index: 11, type: Single}
              - key: [1408, 128, 768]
                speed: 1490.22
                value: {index: 6, type: Single}
              - key: [1408, 128, 1792]
                speed: 1775.29
                value: {index: 6, type: Single}
              - key: [1408, 128, 3328]
                speed: 2058.01
                value: {index: 9, type: Single}
              - key: [1408, 256, 128]
                speed: 505.449
                value: {index: 1, type: Single}
              - key: [1408, 256, 256]
                speed: 1744.98
                value: {index: 6, type: Single}
              - key: [1408, 256, 768]
                speed: 2342.79
                value: {index: 6, type: Single}
              - key: [1408, 256, 1792]
                speed: 2626.56
                value: {index: 6, type: Single}
              - key: [1408, 256, 3328]
                speed: 2833.99
                value: {index: 8, type: Single}
              - key: [1408, 448, 128]
                speed: 728.704
                value: {index: 1, type: Single}
              - key: [1408, 448, 256]
                speed: 1933.44
                value: {index: 6, type: Single}
              - key: [1408, 448, 768]
                speed: 2552.92
                value: {index: 6, type: Single}
              - key: [1408, 448, 1792]
                speed: 2789.1
                value: {index: 6, type: Single}
              - key: [1408, 448, 3328]
                speed: 2893.12
                value: {index: 6, type: Single}
              - key: [1408, 704, 128]
                speed: 911.478
                value: {index: 1, type: Single}
              - key: [1408, 704, 256]
                speed: 2184.53
                value: {index: 10, type: Single}
              - key: [1408, 704, 768]
                speed: 2627.96
                value: {index: 6, type: Single}
              - key: [1408, 704, 1792]
                speed: 2820.58
                value: {index: 6, type: Single}
              - key: [1408, 704, 3328]
                speed: 3024.66
                value: {index: 8, type: Single}
              - key: [1408, 1024, 128]
                speed: 1158.65
                value: {index: 4, type: Single}
              - key: [1408, 1024, 256]
                speed: 3098.55
                value: {index: 10, type: Single}
              - key: [1408, 1024, 768]
                speed: 3462.9
                value: {index: 10, type: Single}
              - key: [1408, 1024, 1792]
                speed: 3625.11
                value: {index: 6, type: Single}
              - key: [1408, 1024, 3328]
                speed: 3725.14
                value: {index: 6, type: Single}
              - key: [1408, 1408, 128]
                speed: 1265.74
                value: {index: 1, type: Single}
              - key: [1408, 1408, 256]
                speed: 2753.42
                value: {index: 10, type: Single}
              - key: [1408, 1408, 768]
                speed: 3081.05
                value: {index: 6, type: Single}
              - key: [1408, 1408, 1792]
                speed: 3289.18
                value: {index: 6, type: Single}
              - key: [1408, 1408, 3328]
                speed: 3364.63
                value: {index: 6, type: Single}
              - key: [1408, 1856, 128]
                speed: 1469.15
                value: {index: 3, type: Single}
              - key: [1408, 1856, 256]
                speed: 3371.93
                value: {index: 14, type: Single}
              - key: [1408, 1856, 768]
                speed: 3806.86
                value: {index: 14, type: Single}
              - key: [1408, 1856, 1792]
                speed: 3929.17
                value: {index: 14, type: Single}
              - key: [1408, 1856, 3328]
                speed: 3953.56
                value: {index: 14, type: Single}
              - key: [1408, 2368, 128]
                speed: 1577.36
                value: {index: 0, type: Single}
              - key: [1408, 2368, 256]
                speed: 3429.53
                value: {index: 10, type: Single}
              - key: [1408, 2368, 768]
                speed: 3608.14
                value: {index: 10, type: Single}
              - key: [1408, 2368, 1792]
                speed: 3711.42
                value: {index: 18, type: Single}
              - key: [1408, 2368, 3328]
                speed: 3774.26
                value: {index: 18, type: Single}
              - key: [1408, 2944, 128]
                speed: 1667.23
                value: {index: 4, type: Single}
              - key: [1408, 2944, 256]
                speed: 3400.28
                value: {index: 14, type: Single}
              - key: [1408, 2944, 768]
                speed: 3629.13
                value: {index: 14, type: Single}
              - key: [1408, 2944, 1792]
                speed: 3727.33
                value: {index: 6, type: Single}
              - key: [1408, 2944, 3328]
                speed: 3807.34
                value: {index: 6, type: Single}
              - key: [1408, 3584, 128]
                speed: 1709.88
                value: {index: 4, type: Single}
              - key: [1408, 3584, 256]
                speed: 3518.86
                value: {index: 14, type: Single}
              - key: [1408, 3584, 768]
                speed: 3763.53
                value: {index: 14, type: Single}
              - key: [1408, 3584, 1792]
                speed: 3695.81
                value: {index: 6, type: Single}
              - key: [1408, 3584, 3328]
                speed: 3771.56
                value: {index: 6, type: Single}
              - key: [1408, 4288, 128]
                speed: 1839.3
                value: {index: 4, type: Single}
              - key: [1408, 4288, 256]
                speed: 3589.75
                value: {index: 14, type: Single}
              - key: [1408, 4288, 768]
                speed: 3824.23
                value: {index: 14, type: Single}
              - key: [1408, 4288, 1792]
                speed: 3822.29
                value: {index: 14, type: Single}
              - key: [1408, 4288, 3328]
                speed: 3800.56
                value: {index: 6, type: Single}
              - key: [1408, 5056, 128]
                speed: 1909.5
                value: {index: 4, type: Single}
              - key: [1408, 5056, 256]
                speed: 3757.27
                value: {index: 14, type: Single}
              - key: [1408, 5056, 768]
                speed: 3975.85
                value: {index: 14, type: Single}
              - key: [1408, 5056, 1792]
                speed: 3981.68
                value: {index: 18, type: Single}
              - key: [1408, 5056, 3328]
                speed: 4044.3
                value: {index: 18, type: Single}
              - key: [1408, 5888, 128]
                speed: 1931.63
                value: {index: 4, type: Single}
              - key: [1408, 5888, 256]
                speed: 3912.25
                value: {index: 14, type: Single}
              - key: [1408, 5888, 768]
                speed: 4133.74
                value: {index: 14, type: Single}
              - key: [1408, 5888, 1792]
                speed: 4035.35
                value: {index: 14, type: Single}
              - key: [1408, 5888, 3328]
                speed: 4152.69
                value: {index: 14, type: Single}
              - key: [1408, 6784, 128]
                speed: 2013.04
                value: {index: 4, type: Single}
              - key: [1408, 6784, 256]
                speed: 4060.31
                value: {index: 14, type: Single}
              - key: [1408, 6784, 768]
                speed: 4286.55
                value: {index: 14, type: Single}
              - key: [1408, 6784, 1792]
                speed: 4183.52
                value: {index: 14, type: Single}
              - key: [1408, 6784, 3328]
                speed: 4163.56
                value: {index: 14, type: Single}
              - key: [1856, 4, 128]
                speed: 16.8251
                value: {index: 20, type: Single}
              - key: [1856, 4, 256]
                speed: 32.9956
                value: {index: 23, type: Single}
              - key: [1856, 4, 768]
                speed: 85.7646
                value: {index: 24, type: Single}
              - key: [1856, 4, 1792]
                speed: 155.855
                value: {index: 24, type: Single}
              - key: [1856, 4, 3328]
                speed: 211.533
                value: {index: 24, type: Single}
              - key: [1856, 64, 128]
                speed: 168.637
                value: {index: 1, type: Single}
              - key: [1856, 64, 256]
                speed: 668.03
                value: {index: 6, type: Single}
              - key: [1856, 64, 768]
                speed: 1010.03
                value: {index: 6, type: Single}
              - key: [1856, 64, 1792]
                speed: 1266.43
                value: {index: 9, type: Single}
              - key: [1856, 64, 3328]
                speed: 1733.22
                value: {index: 9, type: Single}
              - key: [1856, 128, 128]
                speed: 346.183
                value: {index: 1, type: Single}
              - key: [1856, 128, 256]
                speed: 1224.18
                value: {index: 6, type: Single}
              - key: [1856, 128, 768]
                speed: 1932.76
                value: {index: 6, type: Single}
              - key: [1856, 128, 1792]
                speed: 2302.69
                value: {index: 6, type: Single}
              - key: [1856, 128, 3328]
                speed: 2494.4
                value: {index: 17, type: Single}
              - key: [1856, 256, 128]
                speed: 638.302
                value: {index: 1, type: Single}
              - key: [1856, 256, 256]
                speed: 2213.15
                value: {index: 6, type: Single}
              - key: [1856, 256, 768]
                speed: 3040.87
                value: {index: 6, type: Single}
              - key: [1856, 256, 1792]
                speed: 3448.82
                value: {index: 6, type: Single}
              - key: [1856, 256, 3328]
                speed: 3583.98
                value: {index: 6, type: Single}
              - key: [1856, 448, 128]
                speed: 964.743
                value: {index: 1, type: Single}
              - key: [1856, 448, 256]
                speed: 2493.68
                value: {index: 10, type: Single}
              - key: [1856, 448, 768]
                speed: 2959.69
                value: {index: 10, type: Single}
              - key: [1856, 448, 1792]
                speed: 3117.73
                value: {index: 10, type: Single}
              - key: [1856, 448, 3328]
                speed: 3208.12
                value: {index: 6, type: Single}
              - key: [1856, 704, 128]
                speed: 1114.99
                value: {index: 4, type: Single}
              - key: [1856, 704, 256]
                speed: 2825.13
                value: {index: 10, type: Single}
              - key: [1856, 704, 768]
                speed: 3152.45
                value: {index: 10, type: Single}
              - key: [1856, 704, 1792]
                speed: 3293.39
                value: {index: 6, type: Single}
              - key: [1856, 704, 3328]
                speed: 3384.32
                value: {index: 6, type: Single}
              - key: [1856, 1024, 128]
                speed: 1474.0
                value: {index: 2, type: Single}
              - key: [1856, 1024, 256]
                speed: 3301.71
                value: {index: 12, type: Single}
              - key: [1856, 1024, 768]
                speed: 3850.02
                value: {index: 14, type: Single}
              - key: [1856, 1024, 1792]
                speed: 4106.91
                value: {index: 14, type: Single}
              - key: [1856, 1024, 3328]
                speed: 4199.65
                value: {index: 14, type: Single}
              - key: [1856, 1408, 128]
                speed: 1568.34
                value: {index: 3, type: Single}
              - key: [1856, 1408, 256]
                speed: 3370.57
                value: {index: 14, type: Single}
              - key: [1856, 1408, 768]
                speed: 3797.64
                value: {index: 14, type: Single}
              - key: [1856, 1408, 1792]
                speed: 3928.11
                value: {index: 14, type: Single}
              - key: [1856, 1408, 3328]
                speed: 3978.89
                value: {index: 14, type: Single}
              - key: [1856, 1856, 128]
                speed: 1728.31
                value: {index: 0, type: Single}
              - key: [1856, 1856, 256]
                speed: 3273.88
                value: {index: 18, type: Single}
              - key: [1856, 1856, 768]
                speed: 3701.94
                value: {index: 18, type: Single}
              - key: [1856, 1856, 1792]
                speed: 3848.87
                value: {index: 18, type: Single}
              - key: [1856, 1856, 3328]
                speed: 3907.96
                value: {index: 18, type: Single}
              - key: [1856, 2368, 128]
                speed: 1764.62
                value: {index: 3, type: Single}
              - key: [1856, 2368, 256]
                speed: 3588.68
                value: {index: 10, type: Single}
              - key: [1856, 2368, 768]
                speed: 3824.17
                value: {index: 14, type: Single}
              - key: [1856, 2368, 1792]
                speed: 3911.17
                value: {index: 14, type: Single}
              - key: [1856, 2368, 3328]
                speed: 3941.37
                value: {index: 14, type: Single}
              - key: [1856, 2944, 128]
                speed: 1884.97
                value: {index: 3, type: Single}
              - key: [1856, 2944, 256]
                speed: 3749.73
                value: {index: 14, type: Single}
              - key: [1856, 2944, 768]
                speed: 4047.77
                value: {index: 14, type: Single}
              - key: [1856, 2944, 1792]
                speed: 4130.78
                value: {index: 14, type: Single}
              - key: [1856, 2944, 3328]
                speed: 4165.0
                value: {index: 14, type: Single}
              - key: [1856, 3584, 128]
                speed: 1990.85
                value: {index: 3, type: Single}
              - key: [1856, 3584, 256]
                speed: 3654.89
                value: {index: 14, type: Single}
              - key: [1856, 3584, 768]
                speed: 4056.55
                value: {index: 14, type: Single}
              - key: [1856, 3584, 1792]
                speed: 4219.49
                value: {index: 14, type: Single}
              - key: [1856, 3584, 3328]
                speed: 4276.36
                value: {index: 14, type: Single}
              - key: [1856, 4288, 128]
                speed: 1990.26
                value: {index: 4, type: Single}
              - key: [1856, 4288, 256]
                speed: 3755.13
                value: {index: 14, type: Single}
              - key: [1856, 4288, 768]
                speed: 3972.23
                value: {index: 14, type: Single}
              - key: [1856, 4288, 1792]
                speed: 4024.81
                value: {index: 14, type: Single}
              - key: [1856, 4288, 3328]
                speed: 4055.05
                value: {index: 14, type: Single}
              - key: [1856, 5056, 128]
                speed: 2068.94
                value: {index: 4, type: Single}
              - key: [1856, 5056, 256]
                speed: 3966.27
                value: {index: 14, type: Single}
              - key: [1856, 5056, 768]
                speed: 4209.42
                value: {index: 14, type: Single}
              - key: [1856, 5056, 1792]
                speed: 4272.71
                value: {index: 14, type: Single}
              - key: [1856, 5056, 3328]
                speed: 4297.31
                value: {index: 14, type: Single}
              - key: [1856, 5888, 128]
                speed: 2094.77
                value: {index: 4, type: Single}
              - key: [1856, 5888, 256]
                speed: 3919.53
                value: {index: 14, type: Single}
              - key: [1856, 5888, 768]
                speed: 4118.16
                value: {index: 14, type: Single}
              - key: [1856, 5888, 1792]
                speed: 4168.41
                value: {index: 14, type: Single}
              - key: [1856, 5888, 3328]
                speed: 4195.95
                value: {index: 14, type: Single}
              - key: [1856, 6784, 128]
                speed: 2166.45
                value: {index: 3, type: Single}
              - key: [1856, 6784, 256]
                speed: 3864.15
                value: {index: 14, type: Single}
              - key: [1856, 6784, 768]
                speed: 4086.64
                value: {index: 14, type: Single}
              - key: [1856, 6784, 1792]
                speed: 4134.28
                value: {index: 14, type: Single}
              - key: [1856, 6784, 3328]
                speed: 4148.08
                value: {index: 14, type: Single}
              - key: [2368, 4, 128]
                speed: 21.4361
                value: {index: 20, type: Single}
              - key: [2368, 4, 256]
                speed: 41.3512
                value: {index: 23, type: Single}
              - key: [2368, 4, 768]
                speed: 103.448
                value: {index: 24, type: Single}
              - key: [2368, 4, 1792]
                speed: 181.189
                value: {index: 26, type: Single}
              - key: [2368, 4, 3328]
                speed: 210.041
                value: {index: 23, type: Single}
              - key: [2368, 64, 128]
                speed: 217.474
                value: {index: 1, type: Single}
              - key: [2368, 64, 256]
                speed: 831.846
                value: {index: 11, type: Single}
              - key: [2368, 64, 768]
                speed: 1271.77
                value: {index: 6, type: Single}
              - key: [2368, 64, 1792]
                speed: 1486.98
                value: {index: 6, type: Single}
              - key: [2368, 64, 3328]
                speed: 1808.54
                value: {index: 9, type: Single}
              - key: [2368, 128, 128]
                speed: 432.619
                value: {index: 1, type: Single}
              - key: [2368, 128, 256]
                speed: 1439.07
                value: {index: 6, type: Single}
              - key: [2368, 128, 768]
                speed: 1971.41
                value: {index: 6, type: Single}
              - key: [2368, 128, 1792]
                speed: 2190.88
                value: {index: 6, type: Single}
              - key: [2368, 128, 3328]
                speed: 2488.48
                value: {index: 8, type: Single}
              - key: [2368, 256, 128]
                speed: 724.912
                value: {index: 1, type: Single}
              - key: [2368, 256, 256]
                speed: 1849.25
                value: {index: 6, type: Single}
              - key: [2368, 256, 768]
                speed: 2466.98
                value: {index: 6, type: Single}
              - key: [2368, 256, 1792]
                speed: 2678.84
                value: {index: 6, type: Single}
              - key: [2368, 256, 3328]
                speed: 2812.03
                value: {index: 19, type: Single}
              - key: [2368, 448, 128]
                speed: 912.571
                value: {index: 4, type: Single}
              - key: [2368, 448, 256]
                speed: 2333.17
                value: {index: 10, type: Single}
              - key: [2368, 448, 768]
                speed: 2802.5
                value: {index: 6, type: Single}
              - key: [2368, 448, 1792]
                speed: 3020.64
                value: {index: 6, type: Single}
              - key: [2368, 448, 3328]
                speed: 3172.45
                value: {index: 8, type: Single}
              - key: [2368, 704, 128]
                speed: 1356.72
                value: {index: 4, type: Single}
              - key: [2368, 704, 256]
                speed: 2953.84
                value: {index: 14, type: Single}
              - key: [2368, 704, 768]
                speed: 3464.05
                value: {index: 14, type: Single}
              - key: [2368, 704, 1792]
                speed: 3644.58
                value: {index: 14, type: Single}
              - key: [2368, 704, 3328]
                speed: 3706.58
                value: {index: 14, type: Single}
              - key: [2368, 1024, 128]
                speed: 1443.35
                value: {index: 1, type: Single}
              - key: [2368, 1024, 256]
                speed: 3313.18
                value: {index: 10, type: Single}
              - key: [2368, 1024, 768]
                speed: 3602.35
                value: {index: 10, type: Single}
              - key: [2368, 1024, 1792]
                speed: 3696.24
                value: {index: 6, type: Single}
              - key: [2368, 1024, 3328]
                speed: 3782.12
                value: {index: 6, type: Single}
              - key: [2368, 1408, 128]
                speed: 1673.87
                value: {index: 0, type: Single}
              - key: [2368, 1408, 256]
                speed: 3408.71
                value: {index: 10, type: Single}
              - key: [2368, 1408, 768]
                speed: 3609.36
                value: {index: 10, type: Single}
              - key: [2368, 1408, 1792]
                speed: 3731.07
                value: {index: 18, type: Single}
              - key: [2368, 1408, 3328]
                speed: 3784.77
                value: {index: 18, type: Single}
              - key: [2368, 1856, 128]
                speed: 1764.18
                value: {index: 3, type: Single}
              - key: [2368, 1856, 256]
                speed: 3571.36
                value: {index: 10, type: Single}
              - key: [2368, 1856, 768]
                speed: 3798.69
                value: {index: 14, type: Single}
              - key: [2368, 1856, 1792]
                speed: 3919.12
                value: {index: 14, type: Single}
              - key: [2368, 1856, 3328]
                speed: 3940.44
                value: {index: 14, type: Single}
              - key: [2368, 2368, 128]
                speed: 1908.91
                value: {index: 3, type: Single}
              - key: [2368, 2368, 256]
                speed: 3772.87
                value: {index: 14, type: Single}
              - key: [2368, 2368, 768]
                speed: 4127.22
                value: {index: 14, type: Single}
              - key: [2368, 2368, 1792]
                speed: 4243.46
                value: {index: 14, type: Single}
              - key: [2368, 2368, 3328]
                speed: 4264.67
                value: {index: 14, type: Single}
              - key: [2368, 2944, 128]
                speed: 1937.85
                value: {index: 4, type: Single}
              - key: [2368, 2944, 256]
                speed: 3653.53
                value: {index: 14, type: Single}
              - key: [2368, 2944, 768]
                speed: 3868.07
                value: {index: 14, type: Single}
              - key: [2368, 2944, 1792]
                speed: 3948.3
                value: {index: 14, type: Single}
              - key: [2368, 2944, 3328]
                speed: 3973.34
                value: {index: 14, type: Single}
              - key: [2368, 3584, 128]
                speed: 2058.06
                value: {index: 4, type: Single}
              - key: [2368, 3584, 256]
                speed: 3932.54
                value: {index: 14, type: Single}
              - key: [2368, 3584, 768]
                speed: 4209.47
                value: {index: 14, type: Single}
              - key: [2368, 3584, 1792]
                speed: 4294.26
                value: {index: 14, type: Single}
              - key: [2368, 3584, 3328]
                speed: 4322.48
                value: {index: 14, type: Single}
              - key: [2368, 4288, 128]
                speed: 2041.26
                value: {index: 4, type: Single}
              - key: [2368, 4288, 256]
                speed: 3946.17
                value: {index: 14, type: Single}
              - key: [2368, 4288, 768]
                speed: 4148.36
                value: {index: 14, type: Single}
              - key: [2368, 4288, 1792]
                speed: 4211.71
                value: {index: 14, type: Single}
              - key: [2368, 4288, 3328]
                speed: 4233.41
                value: {index: 14, type: Single}
              - key: [2368, 5056, 128]
                speed: 2146.35
                value: {index: 4, type: Single}
              - key: [2368, 5056, 256]
                speed: 3955.03
                value: {index: 14, type: Single}
              - key: [2368, 5056, 768]
                speed: 4154.15
                value: {index: 14, type: Single}
              - key: [2368, 5056, 1792]
                speed: 4226.4
                value: {index: 14, type: Single}
              - key: [2368, 5056, 3328]
                speed: 4244.99
                value: {index: 14, type: Single}
              - key: [2368, 5888, 128]
                speed: 2196.37
                value: {index: 4, type: Single}
              - key: [2368, 5888, 256]
                speed: 3995.42
                value: {index: 14, type: Single}
              - key: [2368, 5888, 768]
                speed: 4211.53
                value: {index: 14, type: Single}
              - key: [2368, 5888, 1792]
                speed: 4269.62
                value: {index: 14, type: Single}
              - key: [2368, 5888, 3328]
                speed: 4287.55
                value: {index: 14, type: Single}
              - key: [2368, 6784, 128]
                speed: 2227.32
                value: {index: 4, type: Single}
              - key: [2368, 6784, 256]
                speed: 4112.19
                value: {index: 14, type: Single}
              - key: [2368, 6784, 768]
                speed: 4295.68
                value: {index: 14, type: Single}
              - key: [2368, 6784, 1792]
                speed: 4348.69
                value: {index: 14, type: Single}
              - key: [2368, 6784, 3328]
                speed: 4366.64
                value: {index: 14, type: Single}
              - key: [2944, 4, 128]
                speed: 26.8019
                value: {index: 20, type: Single}
              - key: [2944, 4, 256]
                speed: 50.5815
                value: {index: 25, type: Single}
              - key: [2944, 4, 768]
                speed: 122.613
                value: {index: 24, type: Single}
              - key: [2944, 4, 1792]
                speed: 202.288
                value: {index: 26, type: Single}
              - key: [2944, 4, 3328]
                speed: 248.798
                value: {index: 23, type: Single}
              - key: [2944, 64, 128]
                speed: 266.077
                value: {index: 1, type: Single}
              - key: [2944, 64, 256]
                speed: 1015.04
                value: {index: 6, type: Single}
              - key: [2944, 64, 768]
                speed: 1553.95
                value: {index: 6, type: Single}
              - key: [2944, 64, 1792]
                speed: 1832.62
                value: {index: 6, type: Single}
              - key: [2944, 64, 3328]
                speed: 2087.38
                value: {index: 17, type: Single}
              - key: [2944, 128, 128]
                speed: 529.817
                value: {index: 1, type: Single}
              - key: [2944, 128, 256]
                speed: 1677.14
                value: {index: 6, type: Single}
              - key: [2944, 128, 768]
                speed: 2436.09
                value: {index: 6, type: Single}
              - key: [2944, 128, 1792]
                speed: 2747.73
                value: {index: 6, type: Single}
              - key: [2944, 128, 3328]
                speed: 2846.6
                value: {index: 6, type: Single}
              - key: [2944, 256, 128]
                speed: 873.813
                value: {index: 1, type: Single}
              - key: [2944, 256, 256]
                speed: 2222.79
                value: {index: 10, type: Single}
              - key: [2944, 256, 768]
                speed: 2676.72
                value: {index: 10, type: Single}
              - key: [2944, 256, 1792]
                speed: 2831.61
                value: {index: 6, type: Single}
              - key: [2944, 256, 3328]
                speed: 2915.69
                value: {index: 6, type: Single}
              - key: [2944, 448, 128]
                speed: 1108.91
                value: {index: 1, type: Single}
              - key: [2944, 448, 256]
                speed: 2834.46
                value: {index: 10, type: Single}
              - key: [2944, 448, 768]
                speed: 3173.32
                value: {index: 10, type: Single}
              - key: [2944, 448, 1792]
                speed: 3319.88
                value: {index: 6, type: Single}
              - key: [2944, 448, 3328]
                speed: 3416.79
                value: {index: 6, type: Single}
              - key: [2944, 704, 128]
                speed: 1280.36
                value: {index: 1, type: Single}
              - key: [2944, 704, 256]
                speed: 2869.86
                value: {index: 10, type: Single}
              - key: [2944, 704, 768]
                speed: 3218.49
                value: {index: 6, type: Single}
              - key: [2944, 704, 1792]
                speed: 3430.3
                value: {index: 6, type: Single}
              - key: [2944, 704, 3328]
                speed: 3513.99
                value: {index: 6, type: Single}
              - key: [2944, 1024, 128]
                speed: 1500.76
                value: {index: 0, type: Single}
              - key: [2944, 1024, 256]
                speed: 3129.06
                value: {index: 10, type: Single}
              - key: [2944, 1024, 768]
                speed: 3320.03
                value: {index: 6, type: Single}
              - key: [2944, 1024, 1792]
                speed: 3517.46
                value: {index: 6, type: Single}
              - key: [2944, 1024, 3328]
                speed: 3595.46
                value: {index: 6, type: Single}
              - key: [2944, 1408, 128]
                speed: 1626.35
                value: {index: 4, type: Single}
              - key: [2944, 1408, 256]
                speed: 3392.45
                value: {index: 10, type: Single}
              - key: [2944, 1408, 768]
                speed: 3635.77
                value: {index: 14, type: Single}
              - key: [2944, 1408, 1792]
                speed: 3721.65
                value: {index: 6, type: Single}
              - key: [2944, 1408, 3328]
                speed: 3801.8
                value: {index: 6, type: Single}
              - key: [2944, 1856, 128]
                speed: 1801.47
                value: {index: 4, type: Single}
              - key: [2944, 1856, 256]
                speed: 3766.7
                value: {index: 14, type: Single}
              - key: [2944, 1856, 768]
                speed: 4051.52
                value: {index: 14, type: Single}
              - key: [2944, 1856, 1792]
                speed: 4141.26
                value: {index: 14, type: Single}
              - key: [2944, 1856, 3328]
                speed: 4171.27
                value: {index: 14, type: Single}
              - key: [2944, 2368, 128]
                speed: 1884.48
                value: {index: 4, type: Single}
              - key: [2944, 2368, 256]
                speed: 3705.11
                value: {index: 14, type: Single}
              - key: [2944, 2368, 768]
                speed: 3903.04
                value: {index: 14, type: Single}
              - key: [2944, 2368, 1792]
                speed: 3960.92
                value: {index: 14, type: Single}
              - key: [2944, 2368, 3328]
                speed: 3976.72
                value: {index: 14, type: Single}
              - key: [2944, 2944, 128]
                speed: 2020.32
                value: {index: 4, type: Single}
              - key: [2944, 2944, 256]
                speed: 4071.47
                value: {index: 14, type: Single}
              - key: [2944, 2944, 768]
                speed: 4316.26
                value: {index: 14, type: Single}
              - key: [2944, 2944, 1792]
                speed: 4392.89
                value: {index: 14, type: Single}
              - key: [2944, 2944, 3328]
                speed: 4421.63
                value: {index: 14, type: Single}
              - key: [2944, 3584, 128]
                speed: 2092.22
                value: {index: 4, type: Single}
              - key: [2944, 3584, 256]
                speed: 4093.62
                value: {index: 14, type: Single}
              - key: [2944, 3584, 768]
                speed: 4314.91
                value: {index: 14, type: Single}
              - key: [2944, 3584, 1792]
                speed: 4383.9
                value: {index: 14, type: Single}
              - key: [2944, 3584, 3328]
                speed: 4408.12
                value: {index: 14, type: Single}
              - key: [2944, 4288, 128]
                speed: 2134.89
                value: {index: 4, type: Single}
              - key: [2944, 4288, 256]
                speed: 4183.12
                value: {index: 14, type: Single}
              - key: [2944, 4288, 768]
                speed: 4392.5
                value: {index: 14, type: Single}
              - key: [2944, 4288, 1792]
                speed: 4453.78
                value: {index: 14, type: Single}
              - key: [2944, 4288, 3328]
                speed: 4476.55
                value: {index: 14, type: Single}
              - key: [2944, 5056, 128]
                speed: 2208.65
                value: {index: 4, type: Single}
              - key: [2944, 5056, 256]
                speed: 4088.55
                value: {index: 14, type: Single}
              - key: [2944, 5056, 768]
                speed: 4235.17
                value: {index: 14, type: Single}
              - key: [2944, 5056, 1792]
                speed: 4289.42
                value: {index: 14, type: Single}
              - key: [2944, 5056, 3328]
                speed: 4303.36
                value: {index: 14, type: Single}
              - key: [2944, 5888, 128]
                speed: 2232.72
                value: {index: 4, type: Single}
              - key: [2944, 5888, 256]
                speed: 4213.1
                value: {index: 14, type: Single}
              - key: [2944, 5888, 768]
                speed: 4383.11
                value: {index: 14, type: Single}
              - key: [2944, 5888, 1792]
                speed: 4437.93
                value: {index: 14, type: Single}
              - key: [2944, 5888, 3328]
                speed: 4458.04
                value: {index: 14, type: Single}
              - key: [2944, 6784, 128]
                speed: 2257.53
                value: {index: 4, type: Single}
              - key: [2944, 6784, 256]
                speed: 4208.25
                value: {index: 14, type: Single}
              - key: [2944, 6784, 768]
                speed: 4348.85
                value: {index: 14, type: Single}
              - key: [2944, 6784, 1792]
                speed: 4394.43
                value: {index: 14, type: Single}
              - key: [2944, 6784, 3328]
                speed: 4410.19
                value: {index: 14, type: Single}
              - key: [3584, 4, 128]
                speed: 32.3523
                value: {index: 20, type: Single}
              - key: [3584, 4, 256]
                speed: 60.3621
                value: {index: 23, type: Single}
              - key: [3584, 4, 768]
                speed: 138.875
                value: {index: 23, type: Single}
              - key: [3584, 4, 1792]
                speed: 214.8
                value: {index: 23, type: Single}
              - key: [3584, 4, 3328]
                speed: 277.644
                value: {index: 23, type: Single}
              - key: [3584, 64, 128]
                speed: 319.967
                value: {index: 1, type: Single}
              - key: [3584, 64, 256]
                speed: 1221.3
                value: {index: 11, type: Single}
              - key: [3584, 64, 768]
                speed: 1855.11
                value: {index: 6, type: Single}
              - key: [3584, 64, 1792]
                speed: 2224.25
                value: {index: 6, type: Single}
              - key: [3584, 64, 3328]
                speed: 2370.69
                value: {index: 6, type: Single}
              - key: [3584, 128, 128]
                speed: 617.328
                value: {index: 1, type: Single}
              - key: [3584, 128, 256]
                speed: 1981.12
                value: {index: 6, type: Single}
              - key: [3584, 128, 768]
                speed: 2826.71
                value: {index: 6, type: Single}
              - key: [3584, 128, 1792]
                speed: 3149.26
                value: {index: 6, type: Single}
              - key: [3584, 128, 3328]
                speed: 3329.39
                value: {index: 6, type: Single}
              - key: [3584, 256, 128]
                speed: 987.227
                value: {index: 1, type: Single}
              - key: [3584, 256, 256]
                speed: 2539.8
                value: {index: 10, type: Single}
              - key: [3584, 256, 768]
                speed: 3212.27
                value: {index: 10, type: Single}
              - key: [3584, 256, 1792]
                speed: 3431.07
                value: {index: 6, type: Single}
              - key: [3584, 256, 3328]
                speed: 3533.44
                value: {index: 6, type: Single}
              - key: [3584, 448, 128]
                speed: 1272.42
                value: {index: 4, type: Single}
              - key: [3584, 448, 256]
                speed: 2851.29
                value: {index: 14, type: Single}
              - key: [3584, 448, 768]
                speed: 3345.79
                value: {index: 14, type: Single}
              - key: [3584, 448, 1792]
                speed: 3510.95
                value: {index: 14, type: Single}
              - key: [3584, 448, 3328]
                speed: 3569.22
                value: {index: 14, type: Single}
              - key: [3584, 704, 128]
                speed: 1380.18
                value: {index: 4, type: Single}
              - key: [3584, 704, 256]
                speed: 3319.92
                value: {index: 14, type: Single}
              - key: [3584, 704, 768]
                speed: 3689.58
                value: {index: 14, type: Single}
              - key: [3584, 704, 1792]
                speed: 3803.64
                value: {index: 14, type: Single}
              - key: [3584, 704, 3328]
                speed: 3849.86
                value: {index: 14, type: Single}
              - key: [3584, 1024, 128]
                speed: 1605.26
                value: {index: 0, type: Single}
              - key: [3584, 1024, 256]
                speed: 3510.93
                value: {index: 14, type: Single}
              - key: [3584, 1024, 768]
                speed: 3950.24
                value: {index: 18, type: Single}
              - key: [3584, 1024, 1792]
                speed: 4096.69
                value: {index: 18, type: Single}
              - key: [3584, 1024, 3328]
                speed: 4157.3
                value: {index: 18, type: Single}
              - key: [3584, 1408, 128]
                speed: 1650.46
                value: {index: 4, type: Single}
              - key: [3584, 1408, 256]
                speed: 3530.4
                value: {index: 14, type: Single}
              - key: [3584, 1408, 768]
                speed: 3742.02
                value: {index: 14, type: Single}
              - key: [3584, 1408, 1792]
                speed: 3830.45
                value: {index: 14, type: Single}
              - key: [3584, 1408, 3328]
                speed: 3852.75
                value: {index: 14, type: Single}
              - key: [3584, 1856, 128]
                speed: 1802.99
                value: {index: 4, type: Single}
              - key: [3584, 1856, 256]
                speed: 3906.42
                value: {index: 14, type: Single}
              - key: [3584, 1856, 768]
                speed: 4191.83
                value: {index: 14, type: Single}
              - key: [3584, 1856, 1792]
                speed: 4278.74
                value: {index: 14, type: Single}
              - key: [3584, 1856, 3328]
                speed: 4313.43
                value: {index: 14, type: Single}
              - key: [3584, 2368, 128]
                speed: 1889.39
                value: {index: 4, type: Single}
              - key: [3584, 2368, 256]
                speed: 3992.08
                value: {index: 14, type: Single}
              - key: [3584, 2368, 768]
                speed: 4227.82
                value: {index: 14, type: Single}
              - key: [3584, 2368, 1792]
                speed: 4301.25
                value: {index: 14, type: Single}
              - key: [3584, 2368, 3328]
                speed: 4325.34
                value: {index: 14, type: Single}
              - key: [3584, 2944, 128]
                speed: 1982.16
                value: {index: 4, type: Single}
              - key: [3584, 2944, 256]
                speed: 4066.5
                value: {index: 14, type: Single}
              - key: [3584, 2944, 768]
                speed: 4304.64
                value: {index: 14, type: Single}
              - key: [3584, 2944, 1792]
                speed: 4378.86
                value: {index: 14, type: Single}
              - key: [3584, 2944, 3328]
                speed: 4407.1
                value: {index: 14, type: Single}
              - key: [3584, 3584, 128]
                speed: 2017.09
                value: {index: 4, type: Single}
              - key: [3584, 3584, 256]
                speed: 4017.22
                value: {index: 14, type: Single}
              - key: [3584, 3584, 768]
                speed: 4173.01
                value: {index: 14, type: Single}
              - key: [3584, 3584, 1792]
                speed: 4221.01
                value: {index: 14, type: Single}
              - key: [3584, 3584, 3328]
                speed: 4238.22
                value: {index: 14, type: Single}
              - key: [3584, 4288, 128]
                speed: 2061.81
                value: {index: 0, type: Single}
              - key: [3584, 4288, 256]
                speed: 4163.76
                value: {index: 14, type: Single}
              - key: [3584, 4288, 768]
                speed: 4354.88
                value: {index: 14, type: Single}
              - key: [3584, 4288, 1792]
                speed: 4417.73
                value: {index: 14, type: Single}
              - key: [3584, 4288, 3328]
                speed: 4439.33
                value: {index: 14, type: Single}
              - key: [3584, 5056, 128]
                speed: 2084.49
                value: {index: 0, type: Single}
              - key: [3584, 5056, 256]
                speed: 4178.59
                value: {index: 14, type: Single}
              - key: [3584, 5056, 768]
                speed: 4346.04
                value: {index: 14, type: Single}
              - key: [3584, 5056, 1792]
                speed: 4395.04
                value: {index: 14, type: Single}
              - key: [3584, 5056, 3328]
                speed: 4414.07
                value: {index: 14, type: Single}
              - key: [3584, 5888, 128]
                speed: 2139.28
                value: {index: 0, type: Single}
              - key: [3584, 5888, 256]
                speed: 4222.89
                value: {index: 14, type: Single}
              - key: [3584, 5888, 768]
                speed: 4382.68
                value: {index: 14, type: Single}
              - key: [3584, 5888, 1792]
                speed: 4428.42
                value: {index: 14, type: Single}
              - key: [3584, 5888, 3328]
                speed: 4446.3
                value: {index: 14, type: Single}
              - key: [3584, 6784, 128]
                speed: 2150.84
                value: {index: 0, type: Single}
              - key: [3584, 6784, 256]
                speed: 4268.16
                value: {index: 14, type: Single}
              - key: [3584, 6784, 768]
                speed: 4440.8
                value: {index: 14, type: Single}
              - key: [3584, 6784, 1792]
                speed: 4492.65
                value: {index: 14, type: Single}
              - key: [3584, 6784, 3328]
                speed: 4512.11
                value: {index: 14, type: Single}
              - key: [4288, 4, 128]
                speed: 38.7619
                value: {index: 20, type: Single}
              - key: [4288, 4, 256]
                speed: 69.0395
                value: {index: 23, type: Single}
              - key: [4288, 4, 768]
                speed: 157.418
                value: {index: 23, type: Single}
              - key: [4288, 4, 1792]
                speed: 239.083
                value: {index: 23, type: Single}
              - key: [4288, 4, 3328]
                speed: 302.085
                value: {index: 23, type: Single}
              - key: [4288, 64, 128]
                speed: 374.013
                value: {index: 1, type: Single}
              - key: [4288, 64, 256]
                speed: 1297.17
                value: {index: 11, type: Single}
              - key: [4288, 64, 768]
                speed: 1781.3
                value: {index: 6, type: Single}
              - key: [4288, 64, 1792]
                speed: 1993.93
                value: {index: 6, type: Single}
              - key: [4288, 64, 3328]
                speed: 2297.52
                value: {index: 8, type: Single}
              - key: [4288, 128, 128]
                speed: 655.849
                value: {index: 1, type: Single}
              - key: [4288, 128, 256]
                speed: 1706.87
                value: {index: 6, type: Single}
              - key: [4288, 128, 768]
                speed: 2241.21
                value: {index: 6, type: Single}
              - key: [4288, 128, 1792]
                speed: 2427.83
                value: {index: 6, type: Single}
              - key: [4288, 128, 3328]
                speed: 2825.48
                value: {index: 8, type: Single}
              - key: [4288, 256, 128]
                speed: 980.662
                value: {index: 1, type: Single}
              - key: [4288, 256, 256]
                speed: 2368.66
                value: {index: 10, type: Single}
              - key: [4288, 256, 768]
                speed: 2899.89
                value: {index: 6, type: Single}
              - key: [4288, 256, 1792]
                speed: 3113.73
                value: {index: 6, type: Single}
              - key: [4288, 256, 3328]
                speed: 3209.78
                value: {index: 6, type: Single}
              - key: [4288, 448, 128]
                speed: 1515.6
                value: {index: 4, type: Single}
              - key: [4288, 448, 256]
                speed: 3396.29
                value: {index: 14, type: Single}
              - key: [4288, 448, 768]
                speed: 3975.39
                value: {index: 14, type: Single}
              - key: [4288, 448, 1792]
                speed: 4184.67
                value: {index: 14, type: Single}
              - key: [4288, 448, 3328]
                speed: 4256.21
                value: {index: 14, type: Single}
              - key: [4288, 704, 128]
                speed: 1564.63
                value: {index: 0, type: Single}
              - key: [4288, 704, 256]
                speed: 3128.24
                value: {index: 10, type: Single}
              - key: [4288, 704, 768]
                speed: 3324.54
                value: {index: 6, type: Single}
              - key: [4288, 704, 1792]
                speed: 3523.35
                value: {index: 6, type: Single}
              - key: [4288, 704, 3328]
                speed: 3598.39
                value: {index: 6, type: Single}
              - key: [4288, 1024, 128]
                speed: 1766.53
                value: {index: 3, type: Single}
              - key: [4288, 1024, 256]
                speed: 3584.42
                value: {index: 10, type: Single}
              - key: [4288, 1024, 768]
                speed: 3832.07
                value: {index: 14, type: Single}
              - key: [4288, 1024, 1792]
                speed: 3915.62
                value: {index: 14, type: Single}
              - key: [4288, 1024, 3328]
                speed: 3954.41
                value: {index: 14, type: Single}
              - key: [4288, 1408, 128]
                speed: 1854.49
                value: {index: 4, type: Single}
              - key: [4288, 1408, 256]
                speed: 3583.09
                value: {index: 14, type: Single}
              - key: [4288, 1408, 768]
                speed: 3801.9
                value: {index: 14, type: Single}
              - key: [4288, 1408, 1792]
                speed: 3887.89
                value: {index: 14, type: Single}
              - key: [4288, 1408, 3328]
                speed: 3917.77
                value: {index: 14, type: Single}
              - key: [4288, 1856, 128]
                speed: 1994.62
                value: {index: 4, type: Single}
              - key: [4288, 1856, 256]
                speed: 3729.29
                value: {index: 14, type: Single}
              - key: [4288, 1856, 768]
                speed: 3968.1
                value: {index: 14, type: Single}
              - key: [4288, 1856, 1792]
                speed: 4034.92
                value: {index: 14, type: Single}
              - key: [4288, 1856, 3328]
                speed: 4060.18
                value: {index: 14, type: Single}
              - key: [4288, 2368, 128]
                speed: 2044.34
                value: {index: 3, type: Single}
              - key: [4288, 2368, 256]
                speed: 3930.42
                value: {index: 14, type: Single}
              - key: [4288, 2368, 768]
                speed: 4151.19
                value: {index: 14, type: Single}
              - key: [4288, 2368, 1792]
                speed: 4220.07
                value: {index: 14, type: Single}
              - key: [4288, 2368, 3328]
                speed: 4242.39
                value: {index: 14, type: Single}
              - key: [4288, 2944, 128]
                speed: 2180.76
                value: {index: 4, type: Single}
              - key: [4288, 2944, 256]
                speed: 3905.3
                value: {index: 14, type: Single}
              - key: [4288, 2944, 768]
                speed: 4089.26
                value: {index: 14, type: Single}
              - key: [4288, 2944, 1792]
                speed: 4144.37
                value: {index: 14, type: Single}
              - key: [4288, 2944, 3328]
                speed: 4160.45
                value: {index: 14, type: Single}
              - key: [4288, 3584, 128]
                speed: 2240.67
                value: {index: 0, type: Single}
              - key: [4288, 3584, 256]
                speed: 4146.56
                value: {index: 14, type: Single}
              - key: [4288, 3584, 768]
                speed: 4359.77
                value: {index: 14, type: Single}
              - key: [4288, 3584, 1792]
                speed: 4418.24
                value: {index: 14, type: Single}
              - key: [4288, 3584, 3328]
                speed: 4439.79
                value: {index: 14, type: Single}
              - key: [4288, 4288, 128]
                speed: 2273.68
                value: {index: 4, type: Single}
              - key: [4288, 4288, 256]
                speed: 4207.54
                value: {index: 14, type: Single}
              - key: [4288, 4288, 768]
                speed: 4397.48
                value: {index: 14, type: Single}
              - key: [4288, 4288, 1792]
                speed: 4456.48
                value: {index: 14, type: Single}
              - key: [4288, 4288, 3328]
                speed: 4478.82
                value: {index: 14, type: Single}
              - key: [4288, 5056, 128]
                speed: 2329.32
                value: {index: 0, type: Single}
              - key: [4288, 5056, 256]
                speed: 4145.09
                value: {index: 14, type: Single}
              - key: [4288, 5056, 768]
                speed: 4312.31
                value: {index: 14, type: Single}
              - key: [4288, 5056, 1792]
                speed: 4354.77
                value: {index: 14, type: Single}
              - key: [4288, 5056, 3328]
                speed: 4372.9
                value: {index: 14, type: Single}
              - key: [4288, 5888, 128]
                speed: 2406.56
                value: {index: 0, type: Single}
              - key: [4288, 5888, 256]
                speed: 4169.52
                value: {index: 14, type: Single}
              - key: [4288, 5888, 768]
                speed: 4292.92
                value: {index: 14, type: Single}
              - key: [4288, 5888, 1792]
                speed: 4329.8
                value: {index: 14, type: Single}
              - key: [4288, 5888, 3328]
                speed: 4343.82
                value: {index: 14, type: Single}
              - key: [4288, 6784, 128]
                speed: 2429.72
                value: {index: 0, type: Single}
              - key: [4288, 6784, 256]
                speed: 4194.07
                value: {index: 14, type: Single}
              - key: [4288, 6784, 768]
                speed: 4314.93
                value: {index: 14, type: Single}
              - key: [4288, 6784, 1792]
                speed: 4349.99
                value: {index: 14, type: Single}
              - key: [4288, 6784, 3328]
                speed: 4363.46
                value: {index: 14, type: Single}
              - key: [5056, 4, 128]
                speed: 45.1937
                value: {index: 20, type: Single}
              - key: [5056, 4, 256]
                speed: 78.2549
                value: {index: 25, type: Single}
              - key: [5056, 4, 768]
                speed: 173.349
                value: {index: 23, type: Single}
              - key: [5056, 4, 1792]
                speed: 257.251
                value: {index: 23, type: Single}
              - key: [5056, 4, 3328]
                speed: 307.163
                value: {index: 25, type: Single}
              - key: [5056, 64, 128]
                speed: 450.204
                value: {index: 1, type: Single}
              - key: [5056, 64, 256]
                speed: 1547.79
                value: {index: 11, type: Single}
              - key: [5056, 64, 768]
                speed: 2108.9
                value: {index: 6, type: Single}
              - key: [5056, 64, 1792]
                speed: 2352.57
                value: {index: 6, type: Single}
              - key: [5056, 64, 3328]
                speed: 2677.23
                value: {index: 8, type: Single}
              - key: [5056, 128, 128]
                speed: 767.014
                value: {index: 1, type: Single}
              - key: [5056, 128, 256]
                speed: 2000.91
                value: {index: 6, type: Single}
              - key: [5056, 128, 768]
                speed: 2615.92
                value: {index: 6, type: Single}
              - key: [5056, 128, 1792]
                speed: 2857.03
                value: {index: 6, type: Single}
              - key: [5056, 128, 3328]
                speed: 2963.69
                value: {index: 6, type: Single}
              - key: [5056, 256, 128]
                speed: 1105.09
                value: {index: 1, type: Single}
              - key: [5056, 256, 256]
                speed: 2792.9
                value: {index: 10, type: Single}
              - key: [5056, 256, 768]
                speed: 3114.19
                value: {index: 10, type: Single}
              - key: [5056, 256, 1792]
                speed: 3263.15
                value: {index: 6, type: Single}
              - key: [5056, 256, 3328]
                speed: 3352.28
                value: {index: 6, type: Single}
              - key: [5056, 448, 128]
                speed: 1353.3
                value: {index: 1, type: Single}
              - key: [5056, 448, 256]
                speed: 3128.3
                value: {index: 10, type: Single}
              - key: [5056, 448, 768]
                speed: 3368.68
                value: {index: 10, type: Single}
              - key: [5056, 448, 1792]
                speed: 3467.13
                value: {index: 6, type: Single}
              - key: [5056, 448, 3328]
                speed: 3540.4
                value: {index: 6, type: Single}
              - key: [5056, 704, 128]
                speed: 1751.25
                value: {index: 0, type: Single}
              - key: [5056, 704, 256]
                speed: 3372.86
                value: {index: 14, type: Single}
              - key: [5056, 704, 768]
                speed: 3755.41
                value: {index: 18, type: Single}
              - key: [5056, 704, 1792]
                speed: 3947.28
                value: {index: 18, type: Single}
              - key: [5056, 704, 3328]
                speed: 4020.09
                value: {index: 18, type: Single}
              - key: [5056, 1024, 128]
                speed: 1808.68
                value: {index: 3, type: Single}
              - key: [5056, 1024, 256]
                speed: 3578.29
                value: {index: 14, type: Single}
              - key: [5056, 1024, 768]
                speed: 3841.0
                value: {index: 14, type: Single}
              - key: [5056, 1024, 1792]
                speed: 3916.54
                value: {index: 14, type: Single}
              - key: [5056, 1024, 3328]
                speed: 3949.42
                value: {index: 14, type: Single}
              - key: [5056, 1408, 128]
                speed: 1943.71
                value: {index: 4, type: Single}
              - key: [5056, 1408, 256]
                speed: 3732.64
                value: {index: 14, type: Single}
              - key: [5056, 1408, 768]
                speed: 3958.12
                value: {index: 14, type: Single}
              - key: [5056, 1408, 1792]
                speed: 4035.28
                value: {index: 14, type: Single}
              - key: [5056, 1408, 3328]
                speed: 4059.38
                value: {index: 14, type: Single}
              - key: [5056, 1856, 128]
                speed: 2068.94
                value: {index: 3, type: Single}
              - key: [5056, 1856, 256]
                speed: 3951.13
                value: {index: 14, type: Single}
              - key: [5056, 1856, 768]
                speed: 4212.77
                value: {index: 14, type: Single}
              - key: [5056, 1856, 1792]
                speed: 4280.89
                value: {index: 14, type: Single}
              - key: [5056, 1856, 3328]
                speed: 4307.17
                value: {index: 14, type: Single}
              - key: [5056, 2368, 128]
                speed: 2156.26
                value: {index: 4, type: Single}
              - key: [5056, 2368, 256]
                speed: 3964.03
                value: {index: 14, type: Single}
              - key: [5056, 2368, 768]
                speed: 4171.94
                value: {index: 14, type: Single}
              - key: [5056, 2368, 1792]
                speed: 4227.47
                value: {index: 14, type: Single}
              - key: [5056, 2368, 3328]
                speed: 4245.39
                value: {index: 14, type: Single}
              - key: [5056, 2944, 128]
                speed: 2225.15
                value: {index: 4, type: Single}
              - key: [5056, 2944, 256]
                speed: 4060.66
                value: {index: 14, type: Single}
              - key: [5056, 2944, 768]
                speed: 4230.03
                value: {index: 14, type: Single}
              - key: [5056, 2944, 1792]
                speed: 4279.73
                value: {index: 14, type: Single}
              - key: [5056, 2944, 3328]
                speed: 4298.85
                value: {index: 14, type: Single}
              - key: [5056, 3584, 128]
                speed: 2242.14
                value: {index: 4, type: Single}
              - key: [5056, 3584, 256]
                speed: 4178.89
                value: {index: 14, type: Single}
              - key: [5056, 3584, 768]
                speed: 4347.12
                value: {index: 14, type: Single}
              - key: [5056, 3584, 1792]
                speed: 4397.37
                value: {index: 14, type: Single}
              - key: [5056, 3584, 3328]
                speed: 4416.4
                value: {index: 14, type: Single}
              - key: [5056, 4288, 128]
                speed: 2339.69
                value: {index: 0, type: Single}
              - key: [5056, 4288, 256]
                speed: 4173.27
                value: {index: 14, type: Single}
              - key: [5056, 4288, 768]
                speed: 4308.74
                value: {index: 14, type: Single}
              - key: [5056, 4288, 1792]
                speed: 4357.97
                value: {index: 14, type: Single}
              - key: [5056, 4288, 3328]
                speed: 4372.03
                value: {index: 14, type: Single}
              - key: [5056, 5056, 128]
                speed: 2404.96
                value: {index: 0, type: Single}
              - key: [5056, 5056, 256]
                speed: 4199.28
                value: {index: 14, type: Single}
              - key: [5056, 5056, 768]
                speed: 4340.86
                value: {index: 14, type: Single}
              - key: [5056, 5056, 1792]
                speed: 4383.11
                value: {index: 14, type: Single}
              - key: [5056, 5056, 3328]
                speed: 4395.23
                value: {index: 14, type: Single}
              - key: [5056, 5888, 128]
                speed: 2436.65
                value: {index: 0, type: Single}
              - key: [5056, 5888, 256]
                speed: 4265.58
                value: {index: 14, type: Single}
              - key: [5056, 5888, 768]
                speed: 4404.62
                value: {index: 14, type: Single}
              - key: [5056, 5888, 1792]
                speed: 4447.42
                value: {index: 14, type: Single}
              - key: [5056, 5888, 3328]
                speed: 4460.72
                value: {index: 14, type: Single}
              - key: [5056, 6784, 128]
                speed: 2459.99
                value: {index: 0, type: Single}
              - key: [5056, 6784, 256]
                speed: 4256.23
                value: {index: 14, type: Single}
              - key: [5056, 6784, 768]
                speed: 4379.88
                value: {index: 14, type: Single}
              - key: [5056, 6784, 1792]
                speed: 4417.68
                value: {index: 14, type: Single}
              - key: [5056, 6784, 3328]
                speed: 4432.48
                value: {index: 14, type: Single}
              - key: [5888, 4, 128]
                speed: 53.1503
                value: {index: 20, type: Single}
              - key: [5888, 4, 256]
                speed: 88.9804
                value: {index: 25, type: Single}
              - key: [5888, 4, 768]
                speed: 191.447
                value: {index: 23, type: Single}
              - key: [5888, 4, 1792]
                speed: 256.1
                value: {index: 22, type: Single}
              - key: [5888, 4, 3328]
                speed: 302.117
                value: {index: 22, type: Single}
              - key: [5888, 64, 128]
                speed: 519.768
                value: {index: 1, type: Single}
              - key: [5888, 64, 256]
                speed: 1745.1
                value: {index: 6, type: Single}
              - key: [5888, 64, 768]
                speed: 2413.33
                value: {index: 6, type: Single}
              - key: [5888, 64, 1792]
                speed: 2720.28
                value: {index: 6, type: Single}
              - key: [5888, 64, 3328]
                speed: 2840.92
                value: {index: 6, type: Single}
              - key: [5888, 128, 128]
                speed: 889.935
                value: {index: 1, type: Single}
              - key: [5888, 128, 256]
                speed: 2224.84
                value: {index: 10, type: Single}
              - key: [5888, 128, 768]
                speed: 2662.93
                value: {index: 10, type: Single}
              - key: [5888, 128, 1792]
                speed: 2803.87
                value: {index: 10, type: Single}
              - key: [5888, 128, 3328]
                speed: 2914.61
                value: {index: 6, type: Single}
              - key: [5888, 256, 128]
                speed: 1215.59
                value: {index: 4, type: Single}
              - key: [5888, 256, 256]
                speed: 2731.29
                value: {index: 14, type: Single}
              - key: [5888, 256, 768]
                speed: 3160.85
                value: {index: 14, type: Single}
              - key: [5888, 256, 1792]
                speed: 3295.03
                value: {index: 14, type: Single}
              - key: [5888, 256, 3328]
                speed: 3354.1
                value: {index: 14, type: Single}
              - key: [5888, 448, 128]
                speed: 1423.93
                value: {index: 4, type: Single}
              - key: [5888, 448, 256]
                speed: 3458.02
                value: {index: 14, type: Single}
              - key: [5888, 448, 768]
                speed: 3876.18
                value: {index: 14, type: Single}
              - key: [5888, 448, 1792]
                speed: 3987.26
                value: {index: 14, type: Single}
              - key: [5888, 448, 3328]
                speed: 4029.73
                value: {index: 14, type: Single}
              - key: [5888, 704, 128]
                speed: 1604.32
                value: {index: 4, type: Single}
              - key: [5888, 704, 256]
                speed: 3435.51
                value: {index: 14, type: Single}
              - key: [5888, 704, 768]
                speed: 3641.76
                value: {index: 14, type: Single}
              - key: [5888, 704, 1792]
                speed: 3716.14
                value: {index: 6, type: Single}
              - key: [5888, 704, 3328]
                speed: 3798.7
                value: {index: 6, type: Single}
              - key: [5888, 1024, 128]
                speed: 1792.11
                value: {index: 4, type: Single}
              - key: [5888, 1024, 256]
                speed: 3639.65
                value: {index: 14, type: Single}
              - key: [5888, 1024, 768]
                speed: 3835.24
                value: {index: 14, type: Single}
              - key: [5888, 1024, 1792]
                speed: 3895.38
                value: {index: 14, type: Single}
              - key: [5888, 1024, 3328]
                speed: 3915.63
                value: {index: 14, type: Single}
              - key: [5888, 1408, 128]
                speed: 1889.8
                value: {index: 4, type: Single}
              - key: [5888, 1408, 256]
                speed: 3944.24
                value: {index: 14, type: Single}
              - key: [5888, 1408, 768]
                speed: 4150.99
                value: {index: 14, type: Single}
              - key: [5888, 1408, 1792]
                speed: 4213.24
                value: {index: 14, type: Single}
              - key: [5888, 1408, 3328]
                speed: 4233.8
                value: {index: 14, type: Single}
              - key: [5888, 1856, 128]
                speed: 2049.11
                value: {index: 4, type: Single}
              - key: [5888, 1856, 256]
                speed: 3982.92
                value: {index: 14, type: Single}
              - key: [5888, 1856, 768]
                speed: 4141.24
                value: {index: 14, type: Single}
              - key: [5888, 1856, 1792]
                speed: 4183.09
                value: {index: 14, type: Single}
              - key: [5888, 1856, 3328]
                speed: 4196.45
                value: {index: 14, type: Single}
              - key: [5888, 2368, 128]
                speed: 2132.33
                value: {index: 4, type: Single}
              - key: [5888, 2368, 256]
                speed: 4082.81
                value: {index: 14, type: Single}
              - key: [5888, 2368, 768]
                speed: 4235.52
                value: {index: 14, type: Single}
              - key: [5888, 2368, 1792]
                speed: 4281.09
                value: {index: 14, type: Single}
              - key: [5888, 2368, 3328]
                speed: 4297.78
                value: {index: 14, type: Single}
              - key: [5888, 2944, 128]
                speed: 2187.64
                value: {index: 4, type: Single}
              - key: [5888, 2944, 256]
                speed: 4239.18
                value: {index: 14, type: Single}
              - key: [5888, 2944, 768]
                speed: 4389.23
                value: {index: 14, type: Single}
              - key: [5888, 2944, 1792]
                speed: 4441.69
                value: {index: 14, type: Single}
              - key: [5888, 2944, 3328]
                speed: 4457.63
                value: {index: 14, type: Single}
              - key: [5888, 3584, 128]
                speed: 2215.93
                value: {index: 4, type: Single}
              - key: [5888, 3584, 256]
                speed: 4252.68
                value: {index: 14, type: Single}
              - key: [5888, 3584, 768]
                speed: 4388.28
                value: {index: 14, type: Single}
              - key: [5888, 3584, 1792]
                speed: 4430.95
                value: {index: 14, type: Single}
              - key: [5888, 3584, 3328]
                speed: 4445.82
                value: {index: 14, type: Single}
              - key: [5888, 4288, 128]
                speed: 2264.76
                value: {index: 4, type: Single}
              - key: [5888, 4288, 256]
                speed: 4308.95
                value: {index: 14, type: Single}
              - key: [5888, 4288, 768]
                speed: 4447.72
                value: {index: 14, type: Single}
              - key: [5888, 4288, 1792]
                speed: 4492.91
                value: {index: 14, type: Single}
              - key: [5888, 4288, 3328]
                speed: 4506.24
                value: {index: 14, type: Single}
              - key: [5888, 5056, 128]
                speed: 2304.61
                value: {index: 0, type: Single}
              - key: [5888, 5056, 256]
                speed: 4291.71
                value: {index: 14, type: Single}
              - key: [5888, 5056, 768]
                speed: 4414.96
                value: {index: 14, type: Single}
              - key: [5888, 5056, 1792]
                speed: 4450.36
                value: {index: 14, type: Single}
              - key: [5888, 5056, 3328]
                speed: 4461.97
                value: {index: 14, type: Single}
              - key: [5888, 5888, 128]
                speed: 2312.49
                value: {index: 0, type: Single}
              - key: [5888, 5888, 256]
                speed: 4312.34
                value: {index: 14, type: Single}
              - key: [5888, 5888, 768]
                speed: 4433.08
                value: {index: 14, type: Single}
              - key: [5888, 5888, 1792]
                speed: 4466.21
                value: {index: 14, type: Single}
              - key: [5888, 5888, 3328]
                speed: 4477.42
                value: {index: 14, type: Single}
              - key: [5888, 6784, 128]
                speed: 2353.9
                value: {index: 0, type: Single}
              - key: [5888, 6784, 256]
                speed: 4358.94
                value: {index: 14, type: Single}
              - key: [5888, 6784, 768]
                speed: 4483.23
                value: {index: 14, type: Single}
              - key: [5888, 6784, 1792]
                speed: 4521.32
                value: {index: 14, type: Single}
              - key: [5888, 6784, 3328]
                speed: 4533.49
                value: {index: 14, type: Single}
              - key: [6784, 4, 128]
                speed: 61.2383
                value: {index: 20, type: Single}
              - key: [6784, 4, 256]
                speed: 99.9254
                value: {index: 23, type: Single}
              - key: [6784, 4, 768]
                speed: 201.474
                value: {index: 22, type: Single}
              - key: [6784, 4, 1792]
                speed: 281.542
                value: {index: 22, type: Single}
              - key: [6784, 4, 3328]
                speed: 332.409
                value: {index: 22, type: Single}
              - key: [6784, 64, 128]
                speed: 530.696
                value: {index: 1, type: Single}
              - key: [6784, 64, 256]
                speed: 2049.21
                value: {index: 6, type: Single}
              - key: [6784, 64, 768]
                speed: 2786.16
                value: {index: 6, type: Single}
              - key: [6784, 64, 1792]
                speed: 3135.25
                value: {index: 6, type: Single}
              - key: [6784, 64, 3328]
                speed: 3286.94
                value: {index: 6, type: Single}
              - key: [6784, 128, 128]
                speed: 1004.6
                value: {index: 1, type: Single}
              - key: [6784, 128, 256]
                speed: 2575.28
                value: {index: 10, type: Single}
              - key: [6784, 128, 768]
                speed: 3065.9
                value: {index: 10, type: Single}
              - key: [6784, 128, 1792]
                speed: 3246.72
                value: {index: 6, type: Single}
              - key: [6784, 128, 3328]
                speed: 3301.36
                value: {index: 10, type: Single}
              - key: [6784, 256, 128]
                speed: 1367.48
                value: {index: 4, type: Single}
              - key: [6784, 256, 256]
                speed: 3072.11
                value: {index: 14, type: Single}
              - key: [6784, 256, 768]
                speed: 3608.74
                value: {index: 14, type: Single}
              - key: [6784, 256, 1792]
                speed: 3779.48
                value: {index: 14, type: Single}
              - key: [6784, 256, 3328]
                speed: 3858.52
                value: {index: 14, type: Single}
              - key: [6784, 448, 128]
                speed: 1497.16
                value: {index: 0, type: Single}
              - key: [6784, 448, 256]
                speed: 3156.62
                value: {index: 10, type: Single}
              - key: [6784, 448, 768]
                speed: 3337.14
                value: {index: 6, type: Single}
              - key: [6784, 448, 1792]
                speed: 3541.9
                value: {index: 6, type: Single}
              - key: [6784, 448, 3328]
                speed: 3623.32
                value: {index: 6, type: Single}
              - key: [6784, 704, 128]
                speed: 1808.64
                value: {index: 4, type: Single}
              - key: [6784, 704, 256]
                speed: 3870.09
                value: {index: 14, type: Single}
              - key: [6784, 704, 768]
                speed: 4165.82
                value: {index: 14, type: Single}
              - key: [6784, 704, 1792]
                speed: 4259.14
                value: {index: 14, type: Single}
              - key: [6784, 704, 3328]
                speed: 4300.5
                value: {index: 14, type: Single}
              - key: [6784, 1024, 128]
                speed: 1923.0
                value: {index: 4, type: Single}
              - key: [6784, 1024, 256]
                speed: 3717.36
                value: {index: 14, type: Single}
              - key: [6784, 1024, 768]
                speed: 3891.09
                value: {index: 14, type: Single}
              - key: [6784, 1024, 1792]
                speed: 3945.45
                value: {index: 14, type: Single}
              - key: [6784, 1024, 3328]
                speed: 3965.04
                value: {index: 14, type: Single}
              - key: [6784, 1408, 128]
                speed: 2051.69
                value: {index: 4, type: Single}
              - key: [6784, 1408, 256]
                speed: 4084.72
                value: {index: 14, type: Single}
              - key: [6784, 1408, 768]
                speed: 4295.19
                value: {index: 14, type: Single}
              - key: [6784, 1408, 1792]
                speed: 4358.39
                value: {index: 14, type: Single}
              - key: [6784, 1408, 3328]
                speed: 4380.48
                value: {index: 14, type: Single}
              - key: [6784, 1856, 128]
                speed: 2147.51
                value: {index: 4, type: Single}
              - key: [6784, 1856, 256]
                speed: 4178.75
                value: {index: 14, type: Single}
              - key: [6784, 1856, 768]
                speed: 4385.55
                value: {index: 14, type: Single}
              - key: [6784, 1856, 1792]
                speed: 4440.61
                value: {index: 14, type: Single}
              - key: [6784, 1856, 3328]
                speed: 4461.2
                value: {index: 14, type: Single}
              - key: [6784, 2368, 128]
                speed: 2220.39
                value: {index: 4, type: Single}
              - key: [6784, 2368, 256]
                speed: 4149.36
                value: {index: 14, type: Single}
              - key: [6784, 2368, 768]
                speed: 4307.56
                value: {index: 14, type: Single}
              - key: [6784, 2368, 1792]
                speed: 4354.21
                value: {index: 14, type: Single}
              - key: [6784, 2368, 3328]
                speed: 4370.84
                value: {index: 14, type: Single}
              - key: [6784, 2944, 128]
                speed: 2288.9
                value: {index: 4, type: Single}
              - key: [6784, 2944, 256]
                speed: 4203.55
                value: {index: 14, type: Single}
              - key: [6784, 2944, 768]
                speed: 4349.64
                value: {index: 14, type: Single}
              - key: [6784, 2944, 1792]
                speed: 4390.38
                value: {index: 14, type: Single}
              - key: [6784, 2944, 3328]
                speed: 4407.8
                value: {index: 14, type: Single}
              - key: [6784, 3584, 128]
                speed: 2316.02
                value: {index: 4, type: Single}
              - key: [6784, 3584, 256]
                speed: 4303.81
                value: {index: 14, type: Single}
              - key: [6784, 3584, 768]
                speed: 4448.59
                value: {index: 14, type: Single}
              - key: [6784, 3584, 1792]
                speed: 4496.73
                value: {index: 14, type: Single}
              - key: [6784, 3584, 3328]
                speed: 4511.54
                value: {index: 14, type: Single}
              - key: [6784, 4288, 128]
                speed: 2377.59
                value: {index: 0, type: Single}
              - key: [6784, 4288, 256]
                speed: 4313.99
                value: {index: 14, type: Single}
              - key: [6784, 4288, 768]
                speed: 4444.3
                value: {index: 14, type: Single}
              - key: [6784, 4288, 1792]
                speed: 4489.82
                value: {index: 14, type: Single}
              - key: [6784, 4288, 3328]
                speed: 4503.58
                value: {index: 14, type: Single}
              - key: [6784, 5056, 128]
                speed: 2412.2
                value: {index: 0, type: Single}
              - key: [6784, 5056, 256]
                speed: 4357.62
                value: {index: 14, type: Single}
              - key: [6784, 5056, 768]
                speed: 4499.82
                value: {index: 14, type: Single}
              - key: [6784, 5056, 1792]
                speed: 4540.43
                value: {index: 14, type: Single}
              - key: [6784, 5056, 3328]
                speed: 4554.14
                value: {index: 14, type: Single}
              - key: [6784, 5888, 128]
                speed: 2462.27
                value: {index: 0, type: Single}
              - key: [6784, 5888, 256]
                speed: 4352.55
                value: {index: 14, type: Single}
              - key: [6784, 5888, 768]
                speed: 4480.35
                value: {index: 14, type: Single}
              - key: [6784, 5888, 1792]
                speed: 4518.51
                value: {index: 14, type: Single}
              - key: [6784, 5888, 3328]
                speed: 4534.05
                value: {index: 14, type: Single}
              - key: [6784, 6784, 128]
                speed: 2506.43
                value: {index: 0, type: Single}
              - key: [6784, 6784, 256]
                speed: 4379.72
                value: {index: 14, type: Single}
              - key: [6784, 6784, 768]
                speed: 4507.56
                value: {index: 14, type: Single}
              - key: [6784, 6784, 1792]
                speed: 4544.89
                value: {index: 14, type: Single}
              - key: [6784, 6784, 3328]
                speed: 4556.72
                value: {index: 14, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
        Contraction_l_Alik_Bjlk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.0339976
                value: {index: 147, type: Single}
              - key: [4, 4, 256]
                speed: 0.0978968
                value: {index: 153, type: Single}
              - key: [4, 4, 768]
                speed: 0.268531
                value: {index: 150, type: Single}
              - key: [4, 4, 1792]
                speed: 0.470341
                value: {index: 150, type: Single}
              - key: [4, 4, 3328]
                speed: 0.655768
                value: {index: 150, type: Single}
              - key: [4, 64, 128]
                speed: 0.56497
                value: {index: 147, type: Single}
              - key: [4, 64, 256]
                speed: 1.68214
                value: {index: 152, type: Single}
              - key: [4, 64, 768]
                speed: 4.2965
                value: {index: 150, type: Single}
              - key: [4, 64, 1792]
                speed: 7.87692
                value: {index: 150, type: Single}
              - key: [4, 64, 3328]
                speed: 10.6924
                value: {index: 150, type: Single}
              - key: [4, 128, 128]
                speed: 1.12994
                value: {index: 146, type: Single}
              - key: [4, 128, 256]
                speed: 3.35051
                value: {index: 149, type: Single}
              - key: [4, 128, 768]
                speed: 7.81431
                value: {index: 150, type: Single}
              - key: [4, 128, 1792]
                speed: 14.5359
                value: {index: 150, type: Single}
              - key: [4, 128, 3328]
                speed: 20.5789
                value: {index: 150, type: Single}
              - key: [4, 256, 128]
                speed: 2.263
                value: {index: 146, type: Single}
              - key: [4, 256, 256]
                speed: 5.71867
                value: {index: 149, type: Single}
              - key: [4, 256, 768]
                speed: 15.147
                value: {index: 150, type: Single}
              - key: [4, 256, 1792]
                speed: 27.9386
                value: {index: 153, type: Single}
              - key: [4, 256, 3328]
                speed: 40.764
                value: {index: 150, type: Single}
              - key: [4, 448, 128]
                speed: 4.027
                value: {index: 147, type: Single}
              - key: [4, 448, 256]
                speed: 9.41609
                value: {index: 152, type: Single}
              - key: [4, 448, 768]
                speed: 24.7172
                value: {index: 150, type: Single}
              - key: [4, 448, 1792]
                speed: 46.2985
                value: {index: 150, type: Single}
              - key: [4, 448, 3328]
                speed: 67.0388
                value: {index: 150, type: Single}
              - key: [4, 704, 128]
                speed: 6.16366
                value: {index: 146, type: Single}
              - key: [4, 704, 256]
                speed: 13.4697
                value: {index: 152, type: Single}
              - key: [4, 704, 768]
                speed: 35.6174
                value: {index: 150, type: Single}
              - key: [4, 704, 1792]
                speed: 67.6807
                value: {index: 150, type: Single}
              - key: [4, 704, 3328]
                speed: 98.277
                value: {index: 150, type: Single}
              - key: [4, 1024, 128]
                speed: 9.34901
                value: {index: 147, type: Single}
              - key: [4, 1024, 256]
                speed: 18.2044
                value: {index: 149, type: Single}
              - key: [4, 1024, 768]
                speed: 47.6048
                value: {index: 153, type: Single}
              - key: [4, 1024, 1792]
                speed: 92.5837
                value: {index: 150, type: Single}
              - key: [4, 1024, 3328]
                speed: 135.449
                value: {index: 150, type: Single}
              - key: [4, 1408, 128]
                speed: 12.782
                value: {index: 146, type: Single}
              - key: [4, 1408, 256]
                speed: 24.5872
                value: {index: 149, type: Single}
              - key: [4, 1408, 768]
                speed: 64.5964
                value: {index: 150, type: Single}
              - key: [4, 1408, 1792]
                speed: 122.009
                value: {index: 150, type: Single}
              - key: [4, 1408, 3328]
                speed: 179.672
                value: {index: 150, type: Single}
              - key: [4, 1856, 128]
                speed: 16.5439
                value: {index: 146, type: Single}
              - key: [4, 1856, 256]
                speed: 32.3222
                value: {index: 149, type: Single}
              - key: [4, 1856, 768]
                speed: 82.3935
                value: {index: 150, type: Single}
              - key: [4, 1856, 1792]
                speed: 155.564
                value: {index: 150, type: Single}
              - key: [4, 1856, 3328]
                speed: 225.925
                value: {index: 150, type: Single}
              - key: [4, 2368, 128]
                speed: 21.0491
                value: {index: 146, type: Single}
              - key: [4, 2368, 256]
                speed: 40.4678
                value: {index: 152, type: Single}
              - key: [4, 2368, 768]
                speed: 98.8383
                value: {index: 150, type: Single}
              - key: [4, 2368, 1792]
                speed: 181.036
                value: {index: 150, type: Single}
              - key: [4, 2368, 3328]
                speed: 258.894
                value: {index: 150, type: Single}
              - key: [4, 2944, 128]
                speed: 26.1328
                value: {index: 146, type: Single}
              - key: [4, 2944, 256]
                speed: 49.1948
                value: {index: 149, type: Single}
              - key: [4, 2944, 768]
                speed: 118.501
                value: {index: 149, type: Single}
              - key: [4, 2944, 1792]
                speed: 199.836
                value: {index: 150, type: Single}
              - key: [4, 2944, 3328]
                speed: 277.24
                value: {index: 150, type: Single}
              - key: [4, 3584, 128]
                speed: 31.3787
                value: {index: 146, type: Single}
              - key: [4, 3584, 256]
                speed: 58.8144
                value: {index: 149, type: Single}
              - key: [4, 3584, 768]
                speed: 139.58
                value: {index: 149, type: Single}
              - key: [4, 3584, 1792]
                speed: 228.887
                value: {index: 149, type: Single}
              - key: [4, 3584, 3328]
                speed: 299.087
                value: {index: 149, type: Single}
              - key: [4, 4288, 128]
                speed: 37.7489
                value: {index: 146, type: Single}
              - key: [4, 4288, 256]
                speed: 67.5109
                value: {index: 149, type: Single}
              - key: [4, 4288, 768]
                speed: 158.022
                value: {index: 149, type: Single}
              - key: [4, 4288, 1792]
                speed: 255.626
                value: {index: 149, type: Single}
              - key: [4, 4288, 3328]
                speed: 327.455
                value: {index: 149, type: Single}
              - key: [4, 5056, 128]
                speed: 44.3878
                value: {index: 147, type: Single}
              - key: [4, 5056, 256]
                speed: 76.5879
                value: {index: 151, type: Single}
              - key: [4, 5056, 768]
                speed: 172.426
                value: {index: 149, type: Single}
              - key: [4, 5056, 1792]
                speed: 271.757
                value: {index: 149, type: Single}
              - key: [4, 5056, 3328]
                speed: 343.396
                value: {index: 149, type: Single}
              - key: [4, 5888, 128]
                speed: 51.5506
                value: {index: 147, type: Single}
              - key: [4, 5888, 256]
                speed: 88.3545
                value: {index: 151, type: Single}
              - key: [4, 5888, 768]
                speed: 190.963
                value: {index: 149, type: Single}
              - key: [4, 5888, 1792]
                speed: 287.816
                value: {index: 149, type: Single}
              - key: [4, 5888, 3328]
                speed: 350.292
                value: {index: 149, type: Single}
              - key: [4, 6784, 128]
                speed: 60.1357
                value: {index: 146, type: Single}
              - key: [4, 6784, 256]
                speed: 100.971
                value: {index: 148, type: Single}
              - key: [4, 6784, 768]
                speed: 204.64
                value: {index: 148, type: Single}
              - key: [4, 6784, 1792]
                speed: 295.215
                value: {index: 148, type: Single}
              - key: [4, 6784, 3328]
                speed: 344.27
                value: {index: 148, type: Single}
              - key: [64, 4, 128]
                speed: 0.605923
                value: {index: 146, type: Single}
              - key: [64, 4, 256]
                speed: 1.75418
                value: {index: 149, type: Single}
              - key: [64, 4, 768]
                speed: 4.26667
                value: {index: 150, type: Single}
              - key: [64, 4, 1792]
                speed: 7.70753
                value: {index: 150, type: Single}
              - key: [64, 4, 3328]
                speed: 10.7899
                value: {index: 150, type: Single}
              - key: [64, 64, 128]
                speed: 5.72867
                value: {index: 126, type: Single}
              - key: [64, 64, 256]
                speed: 24.4537
                value: {index: 141, type: Single}
              - key: [64, 64, 768]
                speed: 41.6984
                value: {index: 132, type: Single}
              - key: [64, 64, 1792]
                speed: 86.8026
                value: {index: 143, type: Single}
              - key: [64, 64, 3328]
                speed: 131.375
                value: {index: 143, type: Single}
              - key: [64, 128, 128]
                speed: 11.5686
                value: {index: 126, type: Single}
              - key: [64, 128, 256]
                speed: 52.6394
                value: {index: 141, type: Single}
              - key: [64, 128, 768]
                speed: 78.2519
                value: {index: 132, type: Single}
              - key: [64, 128, 1792]
                speed: 145.636
                value: {index: 143, type: Single}
              - key: [64, 128, 3328]
                speed: 230.729
                value: {index: 143, type: Single}
              - key: [64, 256, 128]
                speed: 23.2397
                value: {index: 126, type: Single}
              - key: [64, 256, 256]
                speed: 106.998
                value: {index: 141, type: Single}
              - key: [64, 256, 768]
                speed: 142.47
                value: {index: 132, type: Single}
              - key: [64, 256, 1792]
                speed: 260.84
                value: {index: 132, type: Single}
              - key: [64, 256, 3328]
                speed: 391.484
                value: {index: 133, type: Single}
              - key: [64, 448, 128]
                speed: 42.5954
                value: {index: 126, type: Single}
              - key: [64, 448, 256]
                speed: 185.73
                value: {index: 141, type: Single}
              - key: [64, 448, 768]
                speed: 250.684
                value: {index: 141, type: Single}
              - key: [64, 448, 1792]
                speed: 427.03
                value: {index: 133, type: Single}
              - key: [64, 448, 3328]
                speed: 663.379
                value: {index: 133, type: Single}
              - key: [64, 704, 128]
                speed: 63.9659
                value: {index: 126, type: Single}
              - key: [64, 704, 256]
                speed: 291.271
                value: {index: 141, type: Single}
              - key: [64, 704, 768]
                speed: 394.291
                value: {index: 141, type: Single}
              - key: [64, 704, 1792]
                speed: 615.399
                value: {index: 133, type: Single}
              - key: [64, 704, 3328]
                speed: 921.046
                value: {index: 133, type: Single}
              - key: [64, 1024, 128]
                speed: 95.4118
                value: {index: 126, type: Single}
              - key: [64, 1024, 256]
                speed: 408.802
                value: {index: 141, type: Single}
              - key: [64, 1024, 768]
                speed: 564.256
                value: {index: 141, type: Single}
              - key: [64, 1024, 1792]
                speed: 748.601
                value: {index: 129, type: Single}
              - key: [64, 1024, 3328]
                speed: 1028.79
                value: {index: 135, type: Single}
              - key: [64, 1408, 128]
                speed: 134.37
                value: {index: 126, type: Single}
              - key: [64, 1408, 256]
                speed: 554.535
                value: {index: 130, type: Single}
              - key: [64, 1408, 768]
                speed: 767.591
                value: {index: 130, type: Single}
              - key: [64, 1408, 1792]
                speed: 998.767
                value: {index: 129, type: Single}
              - key: [64, 1408, 3328]
                speed: 1350.38
                value: {index: 135, type: Single}
              - key: [64, 1856, 128]
                speed: 180.317
                value: {index: 126, type: Single}
              - key: [64, 1856, 256]
                speed: 714.49
                value: {index: 130, type: Single}
              - key: [64, 1856, 768]
                speed: 979.662
                value: {index: 130, type: Single}
              - key: [64, 1856, 1792]
                speed: 1214.41
                value: {index: 129, type: Single}
              - key: [64, 1856, 3328]
                speed: 1698.66
                value: {index: 129, type: Single}
              - key: [64, 2368, 128]
                speed: 218.453
                value: {index: 126, type: Single}
              - key: [64, 2368, 256]
                speed: 884.975
                value: {index: 130, type: Single}
              - key: [64, 2368, 768]
                speed: 1210.4
                value: {index: 130, type: Single}
              - key: [64, 2368, 1792]
                speed: 1403.96
                value: {index: 136, type: Single}
              - key: [64, 2368, 3328]
                speed: 1765.49
                value: {index: 129, type: Single}
              - key: [64, 2944, 128]
                speed: 210.227
                value: {index: 127, type: Single}
              - key: [64, 2944, 256]
                speed: 1065.25
                value: {index: 130, type: Single}
              - key: [64, 2944, 768]
                speed: 1461.06
                value: {index: 136, type: Single}
              - key: [64, 2944, 1792]
                speed: 1721.96
                value: {index: 136, type: Single}
              - key: [64, 2944, 3328]
                speed: 1943.98
                value: {index: 145, type: Single}
              - key: [64, 3584, 128]
                speed: 310.23
                value: {index: 126, type: Single}
              - key: [64, 3584, 256]
                speed: 1241.97
                value: {index: 130, type: Single}
              - key: [64, 3584, 768]
                speed: 1691.25
                value: {index: 136, type: Single}
              - key: [64, 3584, 1792]
                speed: 2023.64
                value: {index: 136, type: Single}
              - key: [64, 3584, 3328]
                speed: 2317.16
                value: {index: 145, type: Single}
              - key: [64, 4288, 128]
                speed: 357.566
                value: {index: 126, type: Single}
              - key: [64, 4288, 256]
                speed: 1365.76
                value: {index: 130, type: Single}
              - key: [64, 4288, 768]
                speed: 1820.7
                value: {index: 130, type: Single}
              - key: [64, 4288, 1792]
                speed: 2032.16
                value: {index: 130, type: Single}
              - key: [64, 4288, 3328]
                speed: 2247.76
                value: {index: 129, type: Single}
              - key: [64, 5056, 128]
                speed: 414.519
                value: {index: 126, type: Single}
              - key: [64, 5056, 256]
                speed: 1593.03
                value: {index: 130, type: Single}
              - key: [64, 5056, 768]
                speed: 2145.31
                value: {index: 130, type: Single}
              - key: [64, 5056, 1792]
                speed: 2373.37
                value: {index: 130, type: Single}
              - key: [64, 5056, 3328]
                speed: 2539.35
                value: {index: 134, type: Single}
              - key: [64, 5888, 128]
                speed: 459.551
                value: {index: 126, type: Single}
              - key: [64, 5888, 256]
                speed: 1786.46
                value: {index: 130, type: Single}
              - key: [64, 5888, 768]
                speed: 2447.62
                value: {index: 130, type: Single}
              - key: [64, 5888, 1792]
                speed: 2761.22
                value: {index: 130, type: Single}
              - key: [64, 5888, 3328]
                speed: 2864.81
                value: {index: 130, type: Single}
              - key: [64, 6784, 128]
                speed: 539.349
                value: {index: 126, type: Single}
              - key: [64, 6784, 256]
                speed: 2124.41
                value: {index: 130, type: Single}
              - key: [64, 6784, 768]
                speed: 2845.11
                value: {index: 130, type: Single}
              - key: [64, 6784, 1792]
                speed: 3166.9
                value: {index: 130, type: Single}
              - key: [64, 6784, 3328]
                speed: 3322.62
                value: {index: 130, type: Single}
              - key: [128, 4, 128]
                speed: 1.23004
                value: {index: 146, type: Single}
              - key: [128, 4, 256]
                speed: 3.25726
                value: {index: 149, type: Single}
              - key: [128, 4, 768]
                speed: 7.87692
                value: {index: 153, type: Single}
              - key: [128, 4, 1792]
                speed: 14.4991
                value: {index: 150, type: Single}
              - key: [128, 4, 3328]
                speed: 20.3431
                value: {index: 150, type: Single}
              - key: [128, 64, 128]
                speed: 12.4239
                value: {index: 126, type: Single}
              - key: [128, 64, 256]
                speed: 53.2813
                value: {index: 141, type: Single}
              - key: [128, 64, 768]
                speed: 81.243
                value: {index: 132, type: Single}
              - key: [128, 64, 1792]
                speed: 152.283
                value: {index: 143, type: Single}
              - key: [128, 64, 3328]
                speed: 239.991
                value: {index: 143, type: Single}
              - key: [128, 128, 128]
                speed: 24.8242
                value: {index: 126, type: Single}
              - key: [128, 128, 256]
                speed: 107.436
                value: {index: 141, type: Single}
              - key: [128, 128, 768]
                speed: 149.797
                value: {index: 132, type: Single}
              - key: [128, 128, 1792]
                speed: 270.252
                value: {index: 132, type: Single}
              - key: [128, 128, 3328]
                speed: 406.667
                value: {index: 133, type: Single}
              - key: [128, 256, 128]
                speed: 48.3215
                value: {index: 126, type: Single}
              - key: [128, 256, 256]
                speed: 211.406
                value: {index: 141, type: Single}
              - key: [128, 256, 768]
                speed: 285.456
                value: {index: 141, type: Single}
              - key: [128, 256, 1792]
                speed: 494.611
                value: {index: 133, type: Single}
              - key: [128, 256, 3328]
                speed: 746.522
                value: {index: 133, type: Single}
              - key: [128, 448, 128]
                speed: 84.3294
                value: {index: 126, type: Single}
              - key: [128, 448, 256]
                speed: 364.813
                value: {index: 141, type: Single}
              - key: [128, 448, 768]
                speed: 496.843
                value: {index: 141, type: Single}
              - key: [128, 448, 1792]
                speed: 758.268
                value: {index: 133, type: Single}
              - key: [128, 448, 3328]
                speed: 1157.45
                value: {index: 133, type: Single}
              - key: [128, 704, 128]
                speed: 130.597
                value: {index: 126, type: Single}
              - key: [128, 704, 256]
                speed: 550.302
                value: {index: 130, type: Single}
              - key: [128, 704, 768]
                speed: 767.591
                value: {index: 130, type: Single}
              - key: [128, 704, 1792]
                speed: 938.841
                value: {index: 132, type: Single}
              - key: [128, 704, 3328]
                speed: 1417.8
                value: {index: 135, type: Single}
              - key: [128, 1024, 128]
                speed: 192.753
                value: {index: 126, type: Single}
              - key: [128, 1024, 256]
                speed: 776.723
                value: {index: 130, type: Single}
              - key: [128, 1024, 768]
                speed: 1070.89
                value: {index: 130, type: Single}
              - key: [128, 1024, 1792]
                speed: 1222.83
                value: {index: 136, type: Single}
              - key: [128, 1024, 3328]
                speed: 1466.15
                value: {index: 129, type: Single}
              - key: [128, 1408, 128]
                speed: 259.782
                value: {index: 126, type: Single}
              - key: [128, 1408, 256]
                speed: 1037.26
                value: {index: 130, type: Single}
              - key: [128, 1408, 768]
                speed: 1467.47
                value: {index: 130, type: Single}
              - key: [128, 1408, 1792]
                speed: 1653.16
                value: {index: 136, type: Single}
              - key: [128, 1408, 3328]
                speed: 1963.16
                value: {index: 145, type: Single}
              - key: [128, 1856, 128]
                speed: 333.137
                value: {index: 126, type: Single}
              - key: [128, 1856, 256]
                speed: 1319.82
                value: {index: 130, type: Single}
              - key: [128, 1856, 768]
                speed: 1878.63
                value: {index: 130, type: Single}
              - key: [128, 1856, 1792]
                speed: 2106.7
                value: {index: 136, type: Single}
              - key: [128, 1856, 3328]
                speed: 2465.16
                value: {index: 145, type: Single}
              - key: [128, 2368, 128]
                speed: 396.538
                value: {index: 126, type: Single}
              - key: [128, 2368, 256]
                speed: 1494.5
                value: {index: 130, type: Single}
              - key: [128, 2368, 768]
                speed: 2026.32
                value: {index: 130, type: Single}
              - key: [128, 2368, 1792]
                speed: 2234.13
                value: {index: 130, type: Single}
              - key: [128, 2368, 3328]
                speed: 2400.83
                value: {index: 134, type: Single}
              - key: [128, 2944, 128]
                speed: 455.042
                value: {index: 126, type: Single}
              - key: [128, 2944, 256]
                speed: 1863.77
                value: {index: 130, type: Single}
              - key: [128, 2944, 768]
                speed: 2488.02
                value: {index: 130, type: Single}
              - key: [128, 2944, 1792]
                speed: 2786.74
                value: {index: 130, type: Single}
              - key: [128, 2944, 3328]
                speed: 2894.43
                value: {index: 130, type: Single}
              - key: [128, 3584, 128]
                speed: 553.965
                value: {index: 126, type: Single}
              - key: [128, 3584, 256]
                speed: 2178.05
                value: {index: 130, type: Single}
              - key: [128, 3584, 768]
                speed: 2926.26
                value: {index: 130, type: Single}
              - key: [128, 3584, 1792]
                speed: 3262.24
                value: {index: 130, type: Single}
              - key: [128, 3584, 3328]
                speed: 3422.54
                value: {index: 130, type: Single}
              - key: [128, 4288, 128]
                speed: 607.739
                value: {index: 126, type: Single}
              - key: [128, 4288, 256]
                speed: 1715.2
                value: {index: 130, type: Single}
              - key: [128, 4288, 768]
                speed: 1987.59
                value: {index: 136, type: Single}
              - key: [128, 4288, 1792]
                speed: 2207.68
                value: {index: 139, type: Single}
              - key: [128, 4288, 3328]
                speed: 2639.32
                value: {index: 134, type: Single}
              - key: [128, 5056, 128]
                speed: 695.88
                value: {index: 126, type: Single}
              - key: [128, 5056, 256]
                speed: 1997.05
                value: {index: 130, type: Single}
              - key: [128, 5056, 768]
                speed: 2305.31
                value: {index: 136, type: Single}
              - key: [128, 5056, 1792]
                speed: 2458.71
                value: {index: 136, type: Single}
              - key: [128, 5056, 3328]
                speed: 2813.78
                value: {index: 131, type: Single}
              - key: [128, 5888, 128]
                speed: 779.484
                value: {index: 126, type: Single}
              - key: [128, 5888, 256]
                speed: 2063.07
                value: {index: 130, type: Single}
              - key: [128, 5888, 768]
                speed: 2647.34
                value: {index: 130, type: Single}
              - key: [128, 5888, 1792]
                speed: 2815.56
                value: {index: 130, type: Single}
              - key: [128, 5888, 3328]
                speed: 2939.2
                value: {index: 130, type: Single}
              - key: [128, 6784, 128]
                speed: 837.975
                value: {index: 126, type: Single}
              - key: [128, 6784, 256]
                speed: 2340.97
                value: {index: 130, type: Single}
              - key: [128, 6784, 768]
                speed: 2997.55
                value: {index: 130, type: Single}
              - key: [128, 6784, 1792]
                speed: 3294.01
                value: {index: 130, type: Single}
              - key: [128, 6784, 3328]
                speed: 3378.55
                value: {index: 130, type: Single}
              - key: [256, 4, 128]
                speed: 2.47869
                value: {index: 146, type: Single}
              - key: [256, 4, 256]
                speed: 5.80993
                value: {index: 150, type: Single}
              - key: [256, 4, 768]
                speed: 15.147
                value: {index: 150, type: Single}
              - key: [256, 4, 1792]
                speed: 28.5294
                value: {index: 150, type: Single}
              - key: [256, 4, 3328]
                speed: 39.7003
                value: {index: 150, type: Single}
              - key: [256, 64, 128]
                speed: 23.5741
                value: {index: 126, type: Single}
              - key: [256, 64, 256]
                speed: 106.563
                value: {index: 141, type: Single}
              - key: [256, 64, 768]
                speed: 150.226
                value: {index: 132, type: Single}
              - key: [256, 64, 1792]
                speed: 273.678
                value: {index: 132, type: Single}
              - key: [256, 64, 3328]
                speed: 414.331
                value: {index: 143, type: Single}
              - key: [256, 128, 128]
                speed: 47.5329
                value: {index: 126, type: Single}
              - key: [256, 128, 256]
                speed: 212.693
                value: {index: 141, type: Single}
              - key: [256, 128, 768]
                speed: 287.019
                value: {index: 141, type: Single}
              - key: [256, 128, 1792]
                speed: 492.62
                value: {index: 133, type: Single}
              - key: [256, 128, 3328]
                speed: 689.853
                value: {index: 133, type: Single}
              - key: [256, 256, 128]
                speed: 92.6304
                value: {index: 126, type: Single}
              - key: [256, 256, 256]
                speed: 409.6
                value: {index: 141, type: Single}
              - key: [256, 256, 768]
                speed: 562.239
                value: {index: 141, type: Single}
              - key: [256, 256, 1792]
                speed: 782.103
                value: {index: 135, type: Single}
              - key: [256, 256, 3328]
                speed: 1136.43
                value: {index: 135, type: Single}
              - key: [256, 448, 128]
                speed: 167.428
                value: {index: 126, type: Single}
              - key: [256, 448, 256]
                speed: 685.984
                value: {index: 130, type: Single}
              - key: [256, 448, 768]
                speed: 974.34
                value: {index: 130, type: Single}
              - key: [256, 448, 1792]
                speed: 1152.02
                value: {index: 135, type: Single}
              - key: [256, 448, 3328]
                speed: 1556.61
                value: {index: 129, type: Single}
              - key: [256, 704, 128]
                speed: 253.837
                value: {index: 126, type: Single}
              - key: [256, 704, 256]
                speed: 1042.89
                value: {index: 130, type: Single}
              - key: [256, 704, 768]
                speed: 1485.11
                value: {index: 130, type: Single}
              - key: [256, 704, 1792]
                speed: 1673.72
                value: {index: 136, type: Single}
              - key: [256, 704, 3328]
                speed: 1992.91
                value: {index: 145, type: Single}
              - key: [256, 1024, 128]
                speed: 317.991
                value: {index: 126, type: Single}
              - key: [256, 1024, 256]
                speed: 1294.54
                value: {index: 130, type: Single}
              - key: [256, 1024, 768]
                speed: 1726.05
                value: {index: 130, type: Single}
              - key: [256, 1024, 1792]
                speed: 1900.33
                value: {index: 130, type: Single}
              - key: [256, 1024, 3328]
                speed: 2134.51
                value: {index: 134, type: Single}
              - key: [256, 1408, 128]
                speed: 383.201
                value: {index: 126, type: Single}
              - key: [256, 1408, 256]
                speed: 1771.79
                value: {index: 130, type: Single}
              - key: [256, 1408, 768]
                speed: 2401.32
                value: {index: 130, type: Single}
              - key: [256, 1408, 1792]
                speed: 2660.31
                value: {index: 130, type: Single}
              - key: [256, 1408, 3328]
                speed: 2761.45
                value: {index: 130, type: Single}
              - key: [256, 1856, 128]
                speed: 468.981
                value: {index: 126, type: Single}
              - key: [256, 1856, 256]
                speed: 2286.37
                value: {index: 130, type: Single}
              - key: [256, 1856, 768]
                speed: 3139.23
                value: {index: 130, type: Single}
              - key: [256, 1856, 1792]
                speed: 3497.55
                value: {index: 130, type: Single}
              - key: [256, 1856, 3328]
                speed: 3632.06
                value: {index: 130, type: Single}
              - key: [256, 2368, 128]
                speed: 549.226
                value: {index: 126, type: Single}
              - key: [256, 2368, 256]
                speed: 1876.08
                value: {index: 130, type: Single}
              - key: [256, 2368, 768]
                speed: 2206.06
                value: {index: 136, type: Single}
              - key: [256, 2368, 1792]
                speed: 2382.29
                value: {index: 136, type: Single}
              - key: [256, 2368, 3328]
                speed: 2678.24
                value: {index: 131, type: Single}
              - key: [256, 2944, 128]
                speed: 628.381
                value: {index: 126, type: Single}
              - key: [256, 2944, 256]
                speed: 2064.83
                value: {index: 130, type: Single}
              - key: [256, 2944, 768]
                speed: 2668.82
                value: {index: 130, type: Single}
              - key: [256, 2944, 1792]
                speed: 2851.7
                value: {index: 130, type: Single}
              - key: [256, 2944, 3328]
                speed: 2941.68
                value: {index: 130, type: Single}
              - key: [256, 3584, 128]
                speed: 749.365
                value: {index: 126, type: Single}
              - key: [256, 3584, 256]
                speed: 2507.27
                value: {index: 130, type: Single}
              - key: [256, 3584, 768]
                speed: 3179.8
                value: {index: 130, type: Single}
              - key: [256, 3584, 1792]
                speed: 3451.82
                value: {index: 130, type: Single}
              - key: [256, 3584, 3328]
                speed: 3561.79
                value: {index: 130, type: Single}
              - key: [256, 4288, 128]
                speed: 726.371
                value: {index: 128, type: Single}
              - key: [256, 4288, 256]
                speed: 2314.05
                value: {index: 130, type: Single}
              - key: [256, 4288, 768]
                speed: 2643.8
                value: {index: 130, type: Single}
              - key: [256, 4288, 1792]
                speed: 2818.88
                value: {index: 130, type: Single}
              - key: [256, 4288, 3328]
                speed: 2978.45
                value: {index: 134, type: Single}
              - key: [256, 5056, 128]
                speed: 759.42
                value: {index: 128, type: Single}
              - key: [256, 5056, 256]
                speed: 2490.6
                value: {index: 130, type: Single}
              - key: [256, 5056, 768]
                speed: 3097.89
                value: {index: 130, type: Single}
              - key: [256, 5056, 1792]
                speed: 3304.44
                value: {index: 130, type: Single}
              - key: [256, 5056, 3328]
                speed: 3383.68
                value: {index: 130, type: Single}
              - key: [256, 5888, 128]
                speed: 841.789
                value: {index: 128, type: Single}
              - key: [256, 5888, 256]
                speed: 2676.72
                value: {index: 138, type: Single}
              - key: [256, 5888, 768]
                speed: 3117.94
                value: {index: 138, type: Single}
              - key: [256, 5888, 1792]
                speed: 3288.61
                value: {index: 138, type: Single}
              - key: [256, 5888, 3328]
                speed: 3349.44
                value: {index: 138, type: Single}
              - key: [256, 6784, 128]
                speed: 1128.19
                value: {index: 128, type: Single}
              - key: [256, 6784, 256]
                speed: 3002.41
                value: {index: 138, type: Single}
              - key: [256, 6784, 768]
                speed: 3530.04
                value: {index: 138, type: Single}
              - key: [256, 6784, 1792]
                speed: 3757.94
                value: {index: 138, type: Single}
              - key: [256, 6784, 3328]
                speed: 3848.24
                value: {index: 138, type: Single}
              - key: [448, 4, 128]
                speed: 4.39085
                value: {index: 146, type: Single}
              - key: [448, 4, 256]
                speed: 9.47835
                value: {index: 153, type: Single}
              - key: [448, 4, 768]
                speed: 24.8601
                value: {index: 150, type: Single}
              - key: [448, 4, 1792]
                speed: 46.0859
                value: {index: 150, type: Single}
              - key: [448, 4, 3328]
                speed: 64.8804
                value: {index: 150, type: Single}
              - key: [448, 64, 128]
                speed: 41.5536
                value: {index: 126, type: Single}
              - key: [448, 64, 256]
                speed: 184.608
                value: {index: 141, type: Single}
              - key: [448, 64, 768]
                speed: 250.913
                value: {index: 141, type: Single}
              - key: [448, 64, 1792]
                speed: 448.814
                value: {index: 133, type: Single}
              - key: [448, 64, 3328]
                speed: 674.254
                value: {index: 133, type: Single}
              - key: [448, 128, 128]
                speed: 84.8755
                value: {index: 126, type: Single}
              - key: [448, 128, 256]
                speed: 369.217
                value: {index: 141, type: Single}
              - key: [448, 128, 768]
                speed: 495.948
                value: {index: 141, type: Single}
              - key: [448, 128, 1792]
                speed: 768.705
                value: {index: 133, type: Single}
              - key: [448, 128, 3328]
                speed: 1160.83
                value: {index: 133, type: Single}
              - key: [448, 256, 128]
                speed: 168.814
                value: {index: 126, type: Single}
              - key: [448, 256, 256]
                speed: 689.853
                value: {index: 130, type: Single}
              - key: [448, 256, 768]
                speed: 975.204
                value: {index: 130, type: Single}
              - key: [448, 256, 1792]
                speed: 1222.76
                value: {index: 129, type: Single}
              - key: [448, 256, 3328]
                speed: 1674.63
                value: {index: 129, type: Single}
              - key: [448, 448, 128]
                speed: 283.681
                value: {index: 126, type: Single}
              - key: [448, 448, 256]
                speed: 1122.82
                value: {index: 130, type: Single}
              - key: [448, 448, 768]
                speed: 1645.4
                value: {index: 130, type: Single}
              - key: [448, 448, 1792]
                speed: 1856.99
                value: {index: 130, type: Single}
              - key: [448, 448, 3328]
                speed: 2173.73
                value: {index: 145, type: Single}
              - key: [448, 704, 128]
                speed: 416.016
                value: {index: 126, type: Single}
              - key: [448, 704, 256]
                speed: 1572.05
                value: {index: 130, type: Single}
              - key: [448, 704, 768]
                speed: 2102.61
                value: {index: 130, type: Single}
              - key: [448, 704, 1792]
                speed: 2310.26
                value: {index: 130, type: Single}
              - key: [448, 704, 3328]
                speed: 2489.62
                value: {index: 134, type: Single}
              - key: [448, 1024, 128]
                speed: 573.44
                value: {index: 126, type: Single}
              - key: [448, 1024, 256]
                speed: 2181.29
                value: {index: 130, type: Single}
              - key: [448, 1024, 768]
                speed: 2983.75
                value: {index: 130, type: Single}
              - key: [448, 1024, 1792]
                speed: 3161.86
                value: {index: 130, type: Single}
              - key: [448, 1024, 3328]
                speed: 3342.81
                value: {index: 130, type: Single}
              - key: [448, 1408, 128]
                speed: 729.23
                value: {index: 126, type: Single}
              - key: [448, 1408, 256]
                speed: 1969.28
                value: {index: 130, type: Single}
              - key: [448, 1408, 768]
                speed: 2300.73
                value: {index: 136, type: Single}
              - key: [448, 1408, 1792]
                speed: 2521.34
                value: {index: 131, type: Single}
              - key: [448, 1408, 3328]
                speed: 2863.76
                value: {index: 131, type: Single}
              - key: [448, 1856, 128]
                speed: 905.021
                value: {index: 126, type: Single}
              - key: [448, 1856, 256]
                speed: 2287.84
                value: {index: 130, type: Single}
              - key: [448, 1856, 768]
                speed: 2924.99
                value: {index: 130, type: Single}
              - key: [448, 1856, 1792]
                speed: 3150.96
                value: {index: 130, type: Single}
              - key: [448, 1856, 3328]
                speed: 3232.7
                value: {index: 130, type: Single}
              - key: [448, 2368, 128]
                speed: 826.781
                value: {index: 128, type: Single}
              - key: [448, 2368, 256]
                speed: 2260.16
                value: {index: 130, type: Single}
              - key: [448, 2368, 768]
                speed: 2753.26
                value: {index: 130, type: Single}
              - key: [448, 2368, 1792]
                speed: 2732.68
                value: {index: 130, type: Single}
              - key: [448, 2368, 3328]
                speed: 3093.07
                value: {index: 134, type: Single}
              - key: [448, 2944, 128]
                speed: 1047.28
                value: {index: 127, type: Single}
              - key: [448, 2944, 256]
                speed: 2537.89
                value: {index: 130, type: Single}
              - key: [448, 2944, 768]
                speed: 3160.65
                value: {index: 130, type: Single}
              - key: [448, 2944, 1792]
                speed: 3364.88
                value: {index: 130, type: Single}
              - key: [448, 2944, 3328]
                speed: 3444.89
                value: {index: 130, type: Single}
              - key: [448, 3584, 128]
                speed: 1223.34
                value: {index: 127, type: Single}
              - key: [448, 3584, 256]
                speed: 2990.7
                value: {index: 138, type: Single}
              - key: [448, 3584, 768]
                speed: 3378.8
                value: {index: 138, type: Single}
              - key: [448, 3584, 1792]
                speed: 3526.1
                value: {index: 138, type: Single}
              - key: [448, 3584, 3328]
                speed: 3583.58
                value: {index: 138, type: Single}
              - key: [448, 4288, 128]
                speed: 1417.73
                value: {index: 128, type: Single}
              - key: [448, 4288, 256]
                speed: 3351.84
                value: {index: 138, type: Single}
              - key: [448, 4288, 768]
                speed: 3971.96
                value: {index: 138, type: Single}
              - key: [448, 4288, 1792]
                speed: 4185.89
                value: {index: 138, type: Single}
              - key: [448, 4288, 3328]
                speed: 4266.67
                value: {index: 138, type: Single}
              - key: [448, 5056, 128]
                speed: 1355.83
                value: {index: 127, type: Single}
              - key: [448, 5056, 256]
                speed: 2973.04
                value: {index: 138, type: Single}
              - key: [448, 5056, 768]
                speed: 3322.36
                value: {index: 130, type: Single}
              - key: [448, 5056, 1792]
                speed: 3496.28
                value: {index: 130, type: Single}
              - key: [448, 5056, 3328]
                speed: 3570.58
                value: {index: 130, type: Single}
              - key: [448, 5888, 128]
                speed: 1484.01
                value: {index: 128, type: Single}
              - key: [448, 5888, 256]
                speed: 3543.68
                value: {index: 138, type: Single}
              - key: [448, 5888, 768]
                speed: 3880.34
                value: {index: 138, type: Single}
              - key: [448, 5888, 1792]
                speed: 3995.35
                value: {index: 138, type: Single}
              - key: [448, 5888, 3328]
                speed: 4034.17
                value: {index: 138, type: Single}
              - key: [448, 6784, 128]
                speed: 1479.4
                value: {index: 125, type: Single}
              - key: [448, 6784, 256]
                speed: 2993.4
                value: {index: 138, type: Single}
              - key: [448, 6784, 768]
                speed: 3315.91
                value: {index: 130, type: Single}
              - key: [448, 6784, 1792]
                speed: 3380.28
                value: {index: 130, type: Single}
              - key: [448, 6784, 3328]
                speed: 3468.55
                value: {index: 134, type: Single}
              - key: [704, 4, 128]
                speed: 6.84748
                value: {index: 146, type: Single}
              - key: [704, 4, 256]
                speed: 13.8209
                value: {index: 150, type: Single}
              - key: [704, 4, 768]
                speed: 36.0448
                value: {index: 150, type: Single}
              - key: [704, 4, 1792]
                speed: 67.3915
                value: {index: 150, type: Single}
              - key: [704, 4, 3328]
                speed: 96.496
                value: {index: 150, type: Single}
              - key: [704, 64, 128]
                speed: 64.8288
                value: {index: 126, type: Single}
              - key: [704, 64, 256]
                speed: 294.845
                value: {index: 141, type: Single}
              - key: [704, 64, 768]
                speed: 392.502
                value: {index: 141, type: Single}
              - key: [704, 64, 1792]
                speed: 655.36
                value: {index: 133, type: Single}
              - key: [704, 64, 3328]
                speed: 988.049
                value: {index: 133, type: Single}
              - key: [704, 128, 128]
                speed: 131.191
                value: {index: 126, type: Single}
              - key: [704, 128, 256]
                speed: 555.604
                value: {index: 130, type: Single}
              - key: [704, 128, 768]
                speed: 771.012
                value: {index: 130, type: Single}
              - key: [704, 128, 1792]
                speed: 1056.81
                value: {index: 129, type: Single}
              - key: [704, 128, 3328]
                speed: 1468.91
                value: {index: 135, type: Single}
              - key: [704, 256, 128]
                speed: 261.668
                value: {index: 126, type: Single}
              - key: [704, 256, 256]
                speed: 1035.4
                value: {index: 130, type: Single}
              - key: [704, 256, 768]
                speed: 1487.66
                value: {index: 130, type: Single}
              - key: [704, 256, 1792]
                speed: 1683.49
                value: {index: 130, type: Single}
              - key: [704, 256, 3328]
                speed: 2076.24
                value: {index: 129, type: Single}
              - key: [704, 448, 128]
                speed: 418.431
                value: {index: 126, type: Single}
              - key: [704, 448, 256]
                speed: 1559.9
                value: {index: 130, type: Single}
              - key: [704, 448, 768]
                speed: 2098.24
                value: {index: 130, type: Single}
              - key: [704, 448, 1792]
                speed: 2337.78
                value: {index: 130, type: Single}
              - key: [704, 448, 3328]
                speed: 2473.66
                value: {index: 134, type: Single}
              - key: [704, 704, 128]
                speed: 591.78
                value: {index: 126, type: Single}
              - key: [704, 704, 256]
                speed: 1564.07
                value: {index: 130, type: Single}
              - key: [704, 704, 768]
                speed: 1979.17
                value: {index: 130, type: Single}
              - key: [704, 704, 1792]
                speed: 2175.12
                value: {index: 129, type: Single}
              - key: [704, 704, 3328]
                speed: 2582.05
                value: {index: 129, type: Single}
              - key: [704, 1024, 128]
                speed: 813.997
                value: {index: 126, type: Single}
              - key: [704, 1024, 256]
                speed: 2072.66
                value: {index: 136, type: Single}
              - key: [704, 1024, 768]
                speed: 2607.61
                value: {index: 136, type: Single}
              - key: [704, 1024, 1792]
                speed: 2821.12
                value: {index: 136, type: Single}
              - key: [704, 1024, 3328]
                speed: 3177.17
                value: {index: 131, type: Single}
              - key: [704, 1408, 128]
                speed: 804.653
                value: {index: 128, type: Single}
              - key: [704, 1408, 256]
                speed: 2150.47
                value: {index: 130, type: Single}
              - key: [704, 1408, 768]
                speed: 2610.65
                value: {index: 130, type: Single}
              - key: [704, 1408, 1792]
                speed: 2735.11
                value: {index: 130, type: Single}
              - key: [704, 1408, 3328]
                speed: 3021.56
                value: {index: 134, type: Single}
              - key: [704, 1856, 128]
                speed: 1019.31
                value: {index: 127, type: Single}
              - key: [704, 1856, 256]
                speed: 2547.96
                value: {index: 130, type: Single}
              - key: [704, 1856, 768]
                speed: 3115.65
                value: {index: 130, type: Single}
              - key: [704, 1856, 1792]
                speed: 3329.36
                value: {index: 130, type: Single}
              - key: [704, 1856, 3328]
                speed: 3416.44
                value: {index: 130, type: Single}
              - key: [704, 2368, 128]
                speed: 1279.29
                value: {index: 127, type: Single}
              - key: [704, 2368, 256]
                speed: 2976.91
                value: {index: 138, type: Single}
              - key: [704, 2368, 768]
                speed: 3447.63
                value: {index: 138, type: Single}
              - key: [704, 2368, 1792]
                speed: 3634.65
                value: {index: 138, type: Single}
              - key: [704, 2368, 3328]
                speed: 3705.4
                value: {index: 138, type: Single}
              - key: [704, 2944, 128]
                speed: 1227.74
                value: {index: 127, type: Single}
              - key: [704, 2944, 256]
                speed: 2839.15
                value: {index: 138, type: Single}
              - key: [704, 2944, 768]
                speed: 3181.95
                value: {index: 130, type: Single}
              - key: [704, 2944, 1792]
                speed: 3225.35
                value: {index: 130, type: Single}
              - key: [704, 2944, 3328]
                speed: 3417.46
                value: {index: 134, type: Single}
              - key: [704, 3584, 128]
                speed: 1473.9
                value: {index: 127, type: Single}
              - key: [704, 3584, 256]
                speed: 3401.03
                value: {index: 138, type: Single}
              - key: [704, 3584, 768]
                speed: 3732.22
                value: {index: 138, type: Single}
              - key: [704, 3584, 1792]
                speed: 3824.23
                value: {index: 138, type: Single}
              - key: [704, 3584, 3328]
                speed: 3859.06
                value: {index: 138, type: Single}
              - key: [704, 4288, 128]
                speed: 1427.31
                value: {index: 125, type: Single}
              - key: [704, 4288, 256]
                speed: 2873.29
                value: {index: 138, type: Single}
              - key: [704, 4288, 768]
                speed: 3210.73
                value: {index: 130, type: Single}
              - key: [704, 4288, 1792]
                speed: 3371.23
                value: {index: 130, type: Single}
              - key: [704, 4288, 3328]
                speed: 3468.87
                value: {index: 134, type: Single}
              - key: [704, 5056, 128]
                speed: 1679.47
                value: {index: 125, type: Single}
              - key: [704, 5056, 256]
                speed: 3358.94
                value: {index: 138, type: Single}
              - key: [704, 5056, 768]
                speed: 3760.79
                value: {index: 140, type: Single}
              - key: [704, 5056, 1792]
                speed: 3949.63
                value: {index: 140, type: Single}
              - key: [704, 5056, 3328]
                speed: 4025.78
                value: {index: 140, type: Single}
              - key: [704, 5888, 128]
                speed: 1638.81
                value: {index: 127, type: Single}
              - key: [704, 5888, 256]
                speed: 3450.7
                value: {index: 138, type: Single}
              - key: [704, 5888, 768]
                speed: 3654.13
                value: {index: 138, type: Single}
              - key: [704, 5888, 1792]
                speed: 3722.55
                value: {index: 138, type: Single}
              - key: [704, 5888, 3328]
                speed: 3744.67
                value: {index: 138, type: Single}
              - key: [704, 6784, 128]
                speed: 1843.99
                value: {index: 128, type: Single}
              - key: [704, 6784, 256]
                speed: 3913.7
                value: {index: 138, type: Single}
              - key: [704, 6784, 768]
                speed: 4192.48
                value: {index: 138, type: Single}
              - key: [704, 6784, 1792]
                speed: 4278.9
                value: {index: 138, type: Single}
              - key: [704, 6784, 3328]
                speed: 4310.4
                value: {index: 138, type: Single}
              - key: [1024, 4, 128]
                speed: 9.79621
                value: {index: 146, type: Single}
              - key: [1024, 4, 256]
                speed: 18.5392
                value: {index: 150, type: Single}
              - key: [1024, 4, 768]
                speed: 48.7256
                value: {index: 153, type: Single}
              - key: [1024, 4, 1792]
                speed: 92.2115
                value: {index: 150, type: Single}
              - key: [1024, 4, 3328]
                speed: 131.073
                value: {index: 150, type: Single}
              - key: [1024, 64, 128]
                speed: 94.2117
                value: {index: 126, type: Single}
              - key: [1024, 64, 256]
                speed: 408.006
                value: {index: 141, type: Single}
              - key: [1024, 64, 768]
                speed: 564.256
                value: {index: 141, type: Single}
              - key: [1024, 64, 1792]
                speed: 666.972
                value: {index: 137, type: Single}
              - key: [1024, 64, 3328]
                speed: 967.458
                value: {index: 135, type: Single}
              - key: [1024, 128, 128]
                speed: 191.521
                value: {index: 126, type: Single}
              - key: [1024, 128, 256]
                speed: 773.857
                value: {index: 130, type: Single}
              - key: [1024, 128, 768]
                speed: 1101.83
                value: {index: 130, type: Single}
              - key: [1024, 128, 1792]
                speed: 1222.83
                value: {index: 136, type: Single}
              - key: [1024, 128, 3328]
                speed: 1407.48
                value: {index: 145, type: Single}
              - key: [1024, 256, 128]
                speed: 360.645
                value: {index: 126, type: Single}
              - key: [1024, 256, 256]
                speed: 1302.58
                value: {index: 130, type: Single}
              - key: [1024, 256, 768]
                speed: 1745.2
                value: {index: 130, type: Single}
              - key: [1024, 256, 1792]
                speed: 1935.41
                value: {index: 130, type: Single}
              - key: [1024, 256, 3328]
                speed: 2014.26
                value: {index: 130, type: Single}
              - key: [1024, 448, 128]
                speed: 524.288
                value: {index: 126, type: Single}
              - key: [1024, 448, 256]
                speed: 2168.4
                value: {index: 130, type: Single}
              - key: [1024, 448, 768]
                speed: 3006.16
                value: {index: 130, type: Single}
              - key: [1024, 448, 1792]
                speed: 3238.59
                value: {index: 130, type: Single}
              - key: [1024, 448, 3328]
                speed: 3512.62
                value: {index: 130, type: Single}
              - key: [1024, 704, 128]
                speed: 708.497
                value: {index: 126, type: Single}
              - key: [1024, 704, 256]
                speed: 1959.96
                value: {index: 130, type: Single}
              - key: [1024, 704, 768]
                speed: 2559.39
                value: {index: 136, type: Single}
              - key: [1024, 704, 1792]
                speed: 2801.05
                value: {index: 136, type: Single}
              - key: [1024, 704, 3328]
                speed: 2888.03
                value: {index: 136, type: Single}
              - key: [1024, 1024, 128]
                speed: 764.338
                value: {index: 128, type: Single}
              - key: [1024, 1024, 256]
                speed: 1959.96
                value: {index: 138, type: Single}
              - key: [1024, 1024, 768]
                speed: 2400.75
                value: {index: 136, type: Single}
              - key: [1024, 1024, 1792]
                speed: 2566.17
                value: {index: 136, type: Single}
              - key: [1024, 1024, 3328]
                speed: 2635.54
                value: {index: 136, type: Single}
              - key: [1024, 1408, 128]
                speed: 954.039
                value: {index: 128, type: Single}
              - key: [1024, 1408, 256]
                speed: 2690.22
                value: {index: 130, type: Single}
              - key: [1024, 1408, 768]
                speed: 3388.3
                value: {index: 130, type: Single}
              - key: [1024, 1408, 1792]
                speed: 3624.3
                value: {index: 130, type: Single}
              - key: [1024, 1408, 3328]
                speed: 3748.66
                value: {index: 130, type: Single}
              - key: [1024, 1856, 128]
                speed: 1211.02
                value: {index: 128, type: Single}
              - key: [1024, 1856, 256]
                speed: 2939.46
                value: {index: 142, type: Single}
              - key: [1024, 1856, 768]
                speed: 3665.17
                value: {index: 142, type: Single}
              - key: [1024, 1856, 1792]
                speed: 4007.93
                value: {index: 138, type: Single}
              - key: [1024, 1856, 3328]
                speed: 4135.08
                value: {index: 138, type: Single}
              - key: [1024, 2368, 128]
                speed: 1270.79
                value: {index: 128, type: Single}
              - key: [1024, 2368, 256]
                speed: 2806.32
                value: {index: 130, type: Single}
              - key: [1024, 2368, 768]
                speed: 3475.42
                value: {index: 130, type: Single}
              - key: [1024, 2368, 1792]
                speed: 3706.33
                value: {index: 130, type: Single}
              - key: [1024, 2368, 3328]
                speed: 3800.22
                value: {index: 130, type: Single}
              - key: [1024, 2944, 128]
                speed: 1234.25
                value: {index: 128, type: Single}
              - key: [1024, 2944, 256]
                speed: 2748.4
                value: {index: 140, type: Single}
              - key: [1024, 2944, 768]
                speed: 3267.55
                value: {index: 130, type: Single}
              - key: [1024, 2944, 1792]
                speed: 3360.79
                value: {index: 140, type: Single}
              - key: [1024, 2944, 3328]
                speed: 3411.77
                value: {index: 140, type: Single}
              - key: [1024, 3584, 128]
                speed: 1310.14
                value: {index: 128, type: Single}
              - key: [1024, 3584, 256]
                speed: 3197.4
                value: {index: 140, type: Single}
              - key: [1024, 3584, 768]
                speed: 3794.12
                value: {index: 140, type: Single}
              - key: [1024, 3584, 1792]
                speed: 4031.21
                value: {index: 140, type: Single}
              - key: [1024, 3584, 3328]
                speed: 4128.97
                value: {index: 140, type: Single}
              - key: [1024, 4288, 128]
                speed: 1486.24
                value: {index: 128, type: Single}
              - key: [1024, 4288, 256]
                speed: 3112.74
                value: {index: 138, type: Single}
              - key: [1024, 4288, 768]
                speed: 3635.11
                value: {index: 138, type: Single}
              - key: [1024, 4288, 1792]
                speed: 3844.0
                value: {index: 138, type: Single}
              - key: [1024, 4288, 3328]
                speed: 3919.7
                value: {index: 138, type: Single}
              - key: [1024, 5056, 128]
                speed: 1525.84
                value: {index: 128, type: Single}
              - key: [1024, 5056, 256]
                speed: 3223.25
                value: {index: 138, type: Single}
              - key: [1024, 5056, 768]
                speed: 3691.24
                value: {index: 138, type: Single}
              - key: [1024, 5056, 1792]
                speed: 3847.8
                value: {index: 138, type: Single}
              - key: [1024, 5056, 3328]
                speed: 3919.88
                value: {index: 138, type: Single}
              - key: [1024, 5888, 128]
                speed: 1494.02
                value: {index: 128, type: Single}
              - key: [1024, 5888, 256]
                speed: 3317.37
                value: {index: 138, type: Single}
              - key: [1024, 5888, 768]
                speed: 3729.95
                value: {index: 138, type: Single}
              - key: [1024, 5888, 1792]
                speed: 3829.55
                value: {index: 138, type: Single}
              - key: [1024, 5888, 3328]
                speed: 3898.41
                value: {index: 138, type: Single}
              - key: [1024, 6784, 128]
                speed: 1629.04
                value: {index: 128, type: Single}
              - key: [1024, 6784, 256]
                speed: 3378.9
                value: {index: 138, type: Single}
              - key: [1024, 6784, 768]
                speed: 3769.68
                value: {index: 138, type: Single}
              - key: [1024, 6784, 1792]
                speed: 3900.56
                value: {index: 138, type: Single}
              - key: [1024, 6784, 3328]
                speed: 3947.7
                value: {index: 138, type: Single}
              - key: [1408, 4, 128]
                speed: 13.3106
                value: {index: 146, type: Single}
              - key: [1408, 4, 256]
                speed: 24.9964
                value: {index: 149, type: Single}
              - key: [1408, 4, 768]
                speed: 65.8553
                value: {index: 150, type: Single}
              - key: [1408, 4, 1792]
                speed: 124.415
                value: {index: 150, type: Single}
              - key: [1408, 4, 3328]
                speed: 180.642
                value: {index: 150, type: Single}
              - key: [1408, 64, 128]
                speed: 129.541
                value: {index: 126, type: Single}
              - key: [1408, 64, 256]
                speed: 553.471
                value: {index: 130, type: Single}
              - key: [1408, 64, 768]
                speed: 773.77
                value: {index: 130, type: Single}
              - key: [1408, 64, 1792]
                speed: 1056.26
                value: {index: 135, type: Single}
              - key: [1408, 64, 3328]
                speed: 1539.49
                value: {index: 135, type: Single}
              - key: [1408, 128, 128]
                speed: 259.549
                value: {index: 126, type: Single}
              - key: [1408, 128, 256]
                speed: 1022.55
                value: {index: 130, type: Single}
              - key: [1408, 128, 768]
                speed: 1492.8
                value: {index: 130, type: Single}
              - key: [1408, 128, 1792]
                speed: 1668.88
                value: {index: 136, type: Single}
              - key: [1408, 128, 3328]
                speed: 2018.66
                value: {index: 129, type: Single}
              - key: [1408, 256, 128]
                speed: 462.855
                value: {index: 126, type: Single}
              - key: [1408, 256, 256]
                speed: 1782.74
                value: {index: 130, type: Single}
              - key: [1408, 256, 768]
                speed: 2406.33
                value: {index: 130, type: Single}
              - key: [1408, 256, 1792]
                speed: 2669.1
                value: {index: 130, type: Single}
              - key: [1408, 256, 3328]
                speed: 2813.25
                value: {index: 134, type: Single}
              - key: [1408, 448, 128]
                speed: 725.56
                value: {index: 126, type: Single}
              - key: [1408, 448, 256]
                speed: 1990.64
                value: {index: 130, type: Single}
              - key: [1408, 448, 768]
                speed: 2291.16
                value: {index: 136, type: Single}
              - key: [1408, 448, 1792]
                speed: 2471.93
                value: {index: 136, type: Single}
              - key: [1408, 448, 3328]
                speed: 2753.19
                value: {index: 134, type: Single}
              - key: [1408, 704, 128]
                speed: 790.22
                value: {index: 126, type: Single}
              - key: [1408, 704, 256]
                speed: 2146.1
                value: {index: 130, type: Single}
              - key: [1408, 704, 768]
                speed: 2588.64
                value: {index: 130, type: Single}
              - key: [1408, 704, 1792]
                speed: 2730.4
                value: {index: 130, type: Single}
              - key: [1408, 704, 3328]
                speed: 2987.41
                value: {index: 134, type: Single}
              - key: [1408, 1024, 128]
                speed: 1082.02
                value: {index: 127, type: Single}
              - key: [1408, 1024, 256]
                speed: 2614.01
                value: {index: 138, type: Single}
              - key: [1408, 1024, 768]
                speed: 3016.17
                value: {index: 138, type: Single}
              - key: [1408, 1024, 1792]
                speed: 3157.62
                value: {index: 138, type: Single}
              - key: [1408, 1024, 3328]
                speed: 3210.16
                value: {index: 138, type: Single}
              - key: [1408, 1408, 128]
                speed: 1123.61
                value: {index: 127, type: Single}
              - key: [1408, 1408, 256]
                speed: 2638.89
                value: {index: 138, type: Single}
              - key: [1408, 1408, 768]
                speed: 3070.61
                value: {index: 130, type: Single}
              - key: [1408, 1408, 1792]
                speed: 3221.42
                value: {index: 130, type: Single}
              - key: [1408, 1408, 3328]
                speed: 3344.44
                value: {index: 134, type: Single}
              - key: [1408, 1856, 128]
                speed: 1461.45
                value: {index: 127, type: Single}
              - key: [1408, 1856, 256]
                speed: 3188.1
                value: {index: 138, type: Single}
              - key: [1408, 1856, 768]
                speed: 3723.24
                value: {index: 138, type: Single}
              - key: [1408, 1856, 1792]
                speed: 3908.18
                value: {index: 138, type: Single}
              - key: [1408, 1856, 3328]
                speed: 3770.5
                value: {index: 138, type: Single}
              - key: [1408, 2368, 128]
                speed: 1529.87
                value: {index: 125, type: Single}
              - key: [1408, 2368, 256]
                speed: 3087.17
                value: {index: 140, type: Single}
              - key: [1408, 2368, 768]
                speed: 3550.11
                value: {index: 140, type: Single}
              - key: [1408, 2368, 1792]
                speed: 3716.22
                value: {index: 140, type: Single}
              - key: [1408, 2368, 3328]
                speed: 3772.83
                value: {index: 140, type: Single}
              - key: [1408, 2944, 128]
                speed: 1549.95
                value: {index: 127, type: Single}
              - key: [1408, 2944, 256]
                speed: 3351.31
                value: {index: 138, type: Single}
              - key: [1408, 2944, 768]
                speed: 3617.92
                value: {index: 138, type: Single}
              - key: [1408, 2944, 1792]
                speed: 3703.84
                value: {index: 138, type: Single}
              - key: [1408, 2944, 3328]
                speed: 3646.63
                value: {index: 130, type: Single}
              - key: [1408, 3584, 128]
                speed: 1719.35
                value: {index: 127, type: Single}
              - key: [1408, 3584, 256]
                speed: 3468.97
                value: {index: 138, type: Single}
              - key: [1408, 3584, 768]
                speed: 3747.81
                value: {index: 138, type: Single}
              - key: [1408, 3584, 1792]
                speed: 3825.52
                value: {index: 138, type: Single}
              - key: [1408, 3584, 3328]
                speed: 3619.9
                value: {index: 130, type: Single}
              - key: [1408, 4288, 128]
                speed: 1788.56
                value: {index: 127, type: Single}
              - key: [1408, 4288, 256]
                speed: 3453.09
                value: {index: 138, type: Single}
              - key: [1408, 4288, 768]
                speed: 3787.5
                value: {index: 138, type: Single}
              - key: [1408, 4288, 1792]
                speed: 3888.22
                value: {index: 138, type: Single}
              - key: [1408, 4288, 3328]
                speed: 3680.17
                value: {index: 130, type: Single}
              - key: [1408, 5056, 128]
                speed: 1828.28
                value: {index: 127, type: Single}
              - key: [1408, 5056, 256]
                speed: 3641.35
                value: {index: 138, type: Single}
              - key: [1408, 5056, 768]
                speed: 3944.87
                value: {index: 138, type: Single}
              - key: [1408, 5056, 1792]
                speed: 4027.44
                value: {index: 138, type: Single}
              - key: [1408, 5056, 3328]
                speed: 4047.07
                value: {index: 140, type: Single}
              - key: [1408, 5888, 128]
                speed: 1882.83
                value: {index: 127, type: Single}
              - key: [1408, 5888, 256]
                speed: 3847.57
                value: {index: 138, type: Single}
              - key: [1408, 5888, 768]
                speed: 4114.08
                value: {index: 138, type: Single}
              - key: [1408, 5888, 1792]
                speed: 4196.68
                value: {index: 138, type: Single}
              - key: [1408, 5888, 3328]
                speed: 3929.28
                value: {index: 138, type: Single}
              - key: [1408, 6784, 128]
                speed: 1970.73
                value: {index: 127, type: Single}
              - key: [1408, 6784, 256]
                speed: 3964.46
                value: {index: 138, type: Single}
              - key: [1408, 6784, 768]
                speed: 4236.26
                value: {index: 138, type: Single}
              - key: [1408, 6784, 1792]
                speed: 4357.86
                value: {index: 138, type: Single}
              - key: [1408, 6784, 3328]
                speed: 4118.04
                value: {index: 142, type: Single}
              - key: [1856, 4, 128]
                speed: 17.0668
                value: {index: 146, type: Single}
              - key: [1856, 4, 256]
                speed: 32.1908
                value: {index: 149, type: Single}
              - key: [1856, 4, 768]
                speed: 85.4561
                value: {index: 153, type: Single}
              - key: [1856, 4, 1792]
                speed: 154.122
                value: {index: 150, type: Single}
              - key: [1856, 4, 3328]
                speed: 173.019
                value: {index: 150, type: Single}
              - key: [1856, 64, 128]
                speed: 170.147
                value: {index: 126, type: Single}
              - key: [1856, 64, 256]
                speed: 697.447
                value: {index: 130, type: Single}
              - key: [1856, 64, 768]
                speed: 998.534
                value: {index: 130, type: Single}
              - key: [1856, 64, 1792]
                speed: 1318.51
                value: {index: 129, type: Single}
              - key: [1856, 64, 3328]
                speed: 1778.13
                value: {index: 129, type: Single}
              - key: [1856, 128, 128]
                speed: 331.973
                value: {index: 126, type: Single}
              - key: [1856, 128, 256]
                speed: 1319.82
                value: {index: 130, type: Single}
              - key: [1856, 128, 768]
                speed: 1927.86
                value: {index: 130, type: Single}
              - key: [1856, 128, 1792]
                speed: 2175.6
                value: {index: 136, type: Single}
              - key: [1856, 128, 3328]
                speed: 2379.11
                value: {index: 145, type: Single}
              - key: [1856, 256, 128]
                speed: 604.307
                value: {index: 126, type: Single}
              - key: [1856, 256, 256]
                speed: 2307.19
                value: {index: 130, type: Single}
              - key: [1856, 256, 768]
                speed: 3105.04
                value: {index: 130, type: Single}
              - key: [1856, 256, 1792]
                speed: 3491.81
                value: {index: 130, type: Single}
              - key: [1856, 256, 3328]
                speed: 3640.08
                value: {index: 130, type: Single}
              - key: [1856, 448, 128]
                speed: 900.732
                value: {index: 126, type: Single}
              - key: [1856, 448, 256]
                speed: 2293.76
                value: {index: 130, type: Single}
              - key: [1856, 448, 768]
                speed: 2922.84
                value: {index: 130, type: Single}
              - key: [1856, 448, 1792]
                speed: 3147.23
                value: {index: 130, type: Single}
              - key: [1856, 448, 3328]
                speed: 3238.45
                value: {index: 130, type: Single}
              - key: [1856, 704, 128]
                speed: 1047.92
                value: {index: 127, type: Single}
              - key: [1856, 704, 256]
                speed: 2511.23
                value: {index: 130, type: Single}
              - key: [1856, 704, 768]
                speed: 3118.74
                value: {index: 130, type: Single}
              - key: [1856, 704, 1792]
                speed: 3326.71
                value: {index: 130, type: Single}
              - key: [1856, 704, 3328]
                speed: 3413.65
                value: {index: 130, type: Single}
              - key: [1856, 1024, 128]
                speed: 1466.89
                value: {index: 127, type: Single}
              - key: [1856, 1024, 256]
                speed: 3445.75
                value: {index: 138, type: Single}
              - key: [1856, 1024, 768]
                speed: 3984.54
                value: {index: 138, type: Single}
              - key: [1856, 1024, 1792]
                speed: 4163.13
                value: {index: 138, type: Single}
              - key: [1856, 1024, 3328]
                speed: 4234.97
                value: {index: 138, type: Single}
              - key: [1856, 1408, 128]
                speed: 1593.44
                value: {index: 127, type: Single}
              - key: [1856, 1408, 256]
                speed: 3521.01
                value: {index: 138, type: Single}
              - key: [1856, 1408, 768]
                speed: 3857.79
                value: {index: 138, type: Single}
              - key: [1856, 1408, 1792]
                speed: 3959.2
                value: {index: 138, type: Single}
              - key: [1856, 1408, 3328]
                speed: 3985.6
                value: {index: 138, type: Single}
              - key: [1856, 1856, 128]
                speed: 1725.06
                value: {index: 125, type: Single}
              - key: [1856, 1856, 256]
                speed: 3270.0
                value: {index: 138, type: Single}
              - key: [1856, 1856, 768]
                speed: 3650.86
                value: {index: 140, type: Single}
              - key: [1856, 1856, 1792]
                speed: 3823.12
                value: {index: 140, type: Single}
              - key: [1856, 1856, 3328]
                speed: 3894.58
                value: {index: 140, type: Single}
              - key: [1856, 2368, 128]
                speed: 1761.97
                value: {index: 127, type: Single}
              - key: [1856, 2368, 256]
                speed: 3544.36
                value: {index: 138, type: Single}
              - key: [1856, 2368, 768]
                speed: 3825.21
                value: {index: 138, type: Single}
              - key: [1856, 2368, 1792]
                speed: 3920.37
                value: {index: 138, type: Single}
              - key: [1856, 2368, 3328]
                speed: 3846.67
                value: {index: 130, type: Single}
              - key: [1856, 2944, 128]
                speed: 1884.97
                value: {index: 127, type: Single}
              - key: [1856, 2944, 256]
                speed: 3846.24
                value: {index: 138, type: Single}
              - key: [1856, 2944, 768]
                speed: 4079.25
                value: {index: 138, type: Single}
              - key: [1856, 2944, 1792]
                speed: 4143.93
                value: {index: 138, type: Single}
              - key: [1856, 2944, 3328]
                speed: 3911.1
                value: {index: 142, type: Single}
              - key: [1856, 3584, 128]
                speed: 1996.07
                value: {index: 127, type: Single}
              - key: [1856, 3584, 256]
                speed: 3980.94
                value: {index: 138, type: Single}
              - key: [1856, 3584, 768]
                speed: 4233.23
                value: {index: 138, type: Single}
              - key: [1856, 3584, 1792]
                speed: 4286.86
                value: {index: 138, type: Single}
              - key: [1856, 3584, 3328]
                speed: 3951.38
                value: {index: 142, type: Single}
              - key: [1856, 4288, 128]
                speed: 1925.26
                value: {index: 127, type: Single}
              - key: [1856, 4288, 256]
                speed: 3760.67
                value: {index: 138, type: Single}
              - key: [1856, 4288, 768]
                speed: 3981.13
                value: {index: 138, type: Single}
              - key: [1856, 4288, 1792]
                speed: 4042.25
                value: {index: 138, type: Single}
              - key: [1856, 4288, 3328]
                speed: 3815.81
                value: {index: 138, type: Single}
              - key: [1856, 5056, 128]
                speed: 2114.69
                value: {index: 125, type: Single}
              - key: [1856, 5056, 256]
                speed: 3972.04
                value: {index: 138, type: Single}
              - key: [1856, 5056, 768]
                speed: 4217.11
                value: {index: 138, type: Single}
              - key: [1856, 5056, 1792]
                speed: 4282.46
                value: {index: 138, type: Single}
              - key: [1856, 5056, 3328]
                speed: 4036.73
                value: {index: 142, type: Single}
              - key: [1856, 5888, 128]
                speed: 2091.51
                value: {index: 125, type: Single}
              - key: [1856, 5888, 256]
                speed: 3975.22
                value: {index: 138, type: Single}
              - key: [1856, 5888, 768]
                speed: 4143.37
                value: {index: 138, type: Single}
              - key: [1856, 5888, 1792]
                speed: 4190.54
                value: {index: 138, type: Single}
              - key: [1856, 5888, 3328]
                speed: 4158.87
                value: {index: 140, type: Single}
              - key: [1856, 6784, 128]
                speed: 2107.3
                value: {index: 128, type: Single}
              - key: [1856, 6784, 256]
                speed: 4210.19
                value: {index: 138, type: Single}
              - key: [1856, 6784, 768]
                speed: 4398.8
                value: {index: 138, type: Single}
              - key: [1856, 6784, 1792]
                speed: 4453.3
                value: {index: 138, type: Single}
              - key: [1856, 6784, 3328]
                speed: 4189.55
                value: {index: 138, type: Single}
              - key: [2368, 4, 128]
                speed: 21.8377
                value: {index: 146, type: Single}
              - key: [2368, 4, 256]
                speed: 41.5211
                value: {index: 149, type: Single}
              - key: [2368, 4, 768]
                speed: 102.98
                value: {index: 150, type: Single}
              - key: [2368, 4, 1792]
                speed: 178.447
                value: {index: 150, type: Single}
              - key: [2368, 4, 3328]
                speed: 203.742
                value: {index: 149, type: Single}
              - key: [2368, 64, 128]
                speed: 211.038
                value: {index: 126, type: Single}
              - key: [2368, 64, 256]
                speed: 894.772
                value: {index: 130, type: Single}
              - key: [2368, 64, 768]
                speed: 1238.21
                value: {index: 130, type: Single}
              - key: [2368, 64, 1792]
                speed: 1522.32
                value: {index: 129, type: Single}
              - key: [2368, 64, 3328]
                speed: 1883.08
                value: {index: 129, type: Single}
              - key: [2368, 128, 128]
                speed: 404.813
                value: {index: 126, type: Single}
              - key: [2368, 128, 256]
                speed: 1510.8
                value: {index: 130, type: Single}
              - key: [2368, 128, 768]
                speed: 2026.32
                value: {index: 130, type: Single}
              - key: [2368, 128, 1792]
                speed: 2243.73
                value: {index: 130, type: Single}
              - key: [2368, 128, 3328]
                speed: 2487.01
                value: {index: 134, type: Single}
              - key: [2368, 256, 128]
                speed: 706.433
                value: {index: 126, type: Single}
              - key: [2368, 256, 256]
                speed: 1892.55
                value: {index: 130, type: Single}
              - key: [2368, 256, 768]
                speed: 2214.46
                value: {index: 136, type: Single}
              - key: [2368, 256, 1792]
                speed: 2453.31
                value: {index: 131, type: Single}
              - key: [2368, 256, 3328]
                speed: 3059.35
                value: {index: 134, type: Single}
              - key: [2368, 448, 128]
                speed: 851.245
                value: {index: 127, type: Single}
              - key: [2368, 448, 256]
                speed: 2239.29
                value: {index: 130, type: Single}
              - key: [2368, 448, 768]
                speed: 2739.19
                value: {index: 130, type: Single}
              - key: [2368, 448, 1792]
                speed: 2746.57
                value: {index: 130, type: Single}
              - key: [2368, 448, 3328]
                speed: 2982.7
                value: {index: 130, type: Single}
              - key: [2368, 704, 128]
                speed: 1337.0
                value: {index: 127, type: Single}
              - key: [2368, 704, 256]
                speed: 2940.81
                value: {index: 138, type: Single}
              - key: [2368, 704, 768]
                speed: 3474.57
                value: {index: 138, type: Single}
              - key: [2368, 704, 1792]
                speed: 3627.59
                value: {index: 138, type: Single}
              - key: [2368, 704, 3328]
                speed: 3696.9
                value: {index: 138, type: Single}
              - key: [2368, 1024, 128]
                speed: 1463.5
                value: {index: 127, type: Single}
              - key: [2368, 1024, 256]
                speed: 3278.18
                value: {index: 138, type: Single}
              - key: [2368, 1024, 768]
                speed: 3589.57
                value: {index: 138, type: Single}
              - key: [2368, 1024, 1792]
                speed: 3677.22
                value: {index: 138, type: Single}
              - key: [2368, 1024, 3328]
                speed: 3594.01
                value: {index: 138, type: Single}
              - key: [2368, 1408, 128]
                speed: 1675.45
                value: {index: 125, type: Single}
              - key: [2368, 1408, 256]
                speed: 3258.78
                value: {index: 138, type: Single}
              - key: [2368, 1408, 768]
                speed: 3596.38
                value: {index: 140, type: Single}
              - key: [2368, 1408, 1792]
                speed: 3733.68
                value: {index: 140, type: Single}
              - key: [2368, 1408, 3328]
                speed: 3786.73
                value: {index: 140, type: Single}
              - key: [2368, 1856, 128]
                speed: 1769.51
                value: {index: 127, type: Single}
              - key: [2368, 1856, 256]
                speed: 3523.05
                value: {index: 138, type: Single}
              - key: [2368, 1856, 768]
                speed: 3826.95
                value: {index: 138, type: Single}
              - key: [2368, 1856, 1792]
                speed: 3779.2
                value: {index: 130, type: Single}
              - key: [2368, 1856, 3328]
                speed: 3852.02
                value: {index: 130, type: Single}
              - key: [2368, 2368, 128]
                speed: 1930.68
                value: {index: 127, type: Single}
              - key: [2368, 2368, 256]
                speed: 3841.52
                value: {index: 138, type: Single}
              - key: [2368, 2368, 768]
                speed: 4141.82
                value: {index: 138, type: Single}
              - key: [2368, 2368, 1792]
                speed: 3975.89
                value: {index: 142, type: Single}
              - key: [2368, 2368, 3328]
                speed: 4015.85
                value: {index: 142, type: Single}
              - key: [2368, 2944, 128]
                speed: 1930.13
                value: {index: 125, type: Single}
              - key: [2368, 2944, 256]
                speed: 3733.63
                value: {index: 138, type: Single}
              - key: [2368, 2944, 768]
                speed: 3916.51
                value: {index: 138, type: Single}
              - key: [2368, 2944, 1792]
                speed: 3926.46
                value: {index: 140, type: Single}
              - key: [2368, 2944, 3328]
                speed: 3965.52
                value: {index: 140, type: Single}
              - key: [2368, 3584, 128]
                speed: 2050.91
                value: {index: 127, type: Single}
              - key: [2368, 3584, 256]
                speed: 4061.33
                value: {index: 138, type: Single}
              - key: [2368, 3584, 768]
                speed: 4256.09
                value: {index: 138, type: Single}
              - key: [2368, 3584, 1792]
                speed: 4235.04
                value: {index: 138, type: Single}
              - key: [2368, 3584, 3328]
                speed: 3979.75
                value: {index: 142, type: Single}
              - key: [2368, 4288, 128]
                speed: 2038.44
                value: {index: 127, type: Single}
              - key: [2368, 4288, 256]
                speed: 3951.93
                value: {index: 138, type: Single}
              - key: [2368, 4288, 768]
                speed: 4161.65
                value: {index: 138, type: Single}
              - key: [2368, 4288, 1792]
                speed: 4033.43
                value: {index: 138, type: Single}
              - key: [2368, 4288, 3328]
                speed: 3925.89
                value: {index: 142, type: Single}
              - key: [2368, 5056, 128]
                speed: 2100.23
                value: {index: 127, type: Single}
              - key: [2368, 5056, 256]
                speed: 3987.13
                value: {index: 138, type: Single}
              - key: [2368, 5056, 768]
                speed: 4173.16
                value: {index: 138, type: Single}
              - key: [2368, 5056, 1792]
                speed: 4166.78
                value: {index: 138, type: Single}
              - key: [2368, 5056, 3328]
                speed: 4028.67
                value: {index: 138, type: Single}
              - key: [2368, 5888, 128]
                speed: 2147.11
                value: {index: 127, type: Single}
              - key: [2368, 5888, 256]
                speed: 4101.95
                value: {index: 138, type: Single}
              - key: [2368, 5888, 768]
                speed: 4243.3
                value: {index: 138, type: Single}
              - key: [2368, 5888, 1792]
                speed: 4216.99
                value: {index: 138, type: Single}
              - key: [2368, 5888, 3328]
                speed: 4135.56
                value: {index: 138, type: Single}
              - key: [2368, 6784, 128]
                speed: 2206.67
                value: {index: 127, type: Single}
              - key: [2368, 6784, 256]
                speed: 4167.19
                value: {index: 138, type: Single}
              - key: [2368, 6784, 768]
                speed: 4317.69
                value: {index: 138, type: Single}
              - key: [2368, 6784, 1792]
                speed: 4264.23
                value: {index: 138, type: Single}
              - key: [2368, 6784, 3328]
                speed: 4207.7
                value: {index: 138, type: Single}
              - key: [2944, 4, 128]
                speed: 27.0715
                value: {index: 146, type: Single}
              - key: [2944, 4, 256]
                speed: 49.2591
                value: {index: 152, type: Single}
              - key: [2944, 4, 768]
                speed: 119.125
                value: {index: 150, type: Single}
              - key: [2944, 4, 1792]
                speed: 196.122
                value: {index: 150, type: Single}
              - key: [2944, 4, 3328]
                speed: 168.114
                value: {index: 149, type: Single}
              - key: [2944, 64, 128]
                speed: 262.601
                value: {index: 126, type: Single}
              - key: [2944, 64, 256]
                speed: 1043.13
                value: {index: 130, type: Single}
              - key: [2944, 64, 768]
                speed: 1488.72
                value: {index: 136, type: Single}
              - key: [2944, 64, 1792]
                speed: 1738.99
                value: {index: 136, type: Single}
              - key: [2944, 64, 3328]
                speed: 2101.37
                value: {index: 145, type: Single}
              - key: [2944, 128, 128]
                speed: 483.118
                value: {index: 126, type: Single}
              - key: [2944, 128, 256]
                speed: 1858.03
                value: {index: 130, type: Single}
              - key: [2944, 128, 768]
                speed: 2489.74
                value: {index: 130, type: Single}
              - key: [2944, 128, 1792]
                speed: 2722.04
                value: {index: 130, type: Single}
              - key: [2944, 128, 3328]
                speed: 2748.28
                value: {index: 130, type: Single}
              - key: [2944, 256, 128]
                speed: 831.629
                value: {index: 126, type: Single}
              - key: [2944, 256, 256]
                speed: 2064.83
                value: {index: 130, type: Single}
              - key: [2944, 256, 768]
                speed: 2633.85
                value: {index: 130, type: Single}
              - key: [2944, 256, 1792]
                speed: 2846.41
                value: {index: 130, type: Single}
              - key: [2944, 256, 3328]
                speed: 2935.9
                value: {index: 130, type: Single}
              - key: [2944, 448, 128]
                speed: 1000.12
                value: {index: 127, type: Single}
              - key: [2944, 448, 256]
                speed: 2533.32
                value: {index: 130, type: Single}
              - key: [2944, 448, 768]
                speed: 3140.27
                value: {index: 130, type: Single}
              - key: [2944, 448, 1792]
                speed: 3355.71
                value: {index: 130, type: Single}
              - key: [2944, 448, 3328]
                speed: 3440.14
                value: {index: 130, type: Single}
              - key: [2944, 704, 128]
                speed: 1162.33
                value: {index: 127, type: Single}
              - key: [2944, 704, 256]
                speed: 2674.29
                value: {index: 130, type: Single}
              - key: [2944, 704, 768]
                speed: 3061.04
                value: {index: 130, type: Single}
              - key: [2944, 704, 1792]
                speed: 3214.41
                value: {index: 130, type: Single}
              - key: [2944, 704, 3328]
                speed: 3279.17
                value: {index: 130, type: Single}
              - key: [2944, 1024, 128]
                speed: 1425.79
                value: {index: 125, type: Single}
              - key: [2944, 1024, 256]
                speed: 2927.74
                value: {index: 140, type: Single}
              - key: [2944, 1024, 768]
                speed: 3262.03
                value: {index: 140, type: Single}
              - key: [2944, 1024, 1792]
                speed: 3385.73
                value: {index: 140, type: Single}
              - key: [2944, 1024, 3328]
                speed: 3429.59
                value: {index: 140, type: Single}
              - key: [2944, 1408, 128]
                speed: 1564.95
                value: {index: 127, type: Single}
              - key: [2944, 1408, 256]
                speed: 3365.77
                value: {index: 138, type: Single}
              - key: [2944, 1408, 768]
                speed: 3617.59
                value: {index: 138, type: Single}
              - key: [2944, 1408, 1792]
                speed: 3662.35
                value: {index: 138, type: Single}
              - key: [2944, 1408, 3328]
                speed: 3645.25
                value: {index: 130, type: Single}
              - key: [2944, 1856, 128]
                speed: 1723.68
                value: {index: 125, type: Single}
              - key: [2944, 1856, 256]
                speed: 3600.7
                value: {index: 138, type: Single}
              - key: [2944, 1856, 768]
                speed: 3984.73
                value: {index: 138, type: Single}
              - key: [2944, 1856, 1792]
                speed: 3880.26
                value: {index: 142, type: Single}
              - key: [2944, 1856, 3328]
                speed: 3916.08
                value: {index: 142, type: Single}
              - key: [2944, 2368, 128]
                speed: 1832.77
                value: {index: 127, type: Single}
              - key: [2944, 2368, 256]
                speed: 3583.69
                value: {index: 138, type: Single}
              - key: [2944, 2368, 768]
                speed: 3857.82
                value: {index: 138, type: Single}
              - key: [2944, 2368, 1792]
                speed: 3908.77
                value: {index: 140, type: Single}
              - key: [2944, 2368, 3328]
                speed: 3961.51
                value: {index: 140, type: Single}
              - key: [2944, 2944, 128]
                speed: 1963.95
                value: {index: 127, type: Single}
              - key: [2944, 2944, 256]
                speed: 3988.33
                value: {index: 138, type: Single}
              - key: [2944, 2944, 768]
                speed: 4291.77
                value: {index: 138, type: Single}
              - key: [2944, 2944, 1792]
                speed: 4052.77
                value: {index: 138, type: Single}
              - key: [2944, 2944, 3328]
                speed: 4067.43
                value: {index: 142, type: Single}
              - key: [2944, 3584, 128]
                speed: 2035.7
                value: {index: 127, type: Single}
              - key: [2944, 3584, 256]
                speed: 3935.22
                value: {index: 138, type: Single}
              - key: [2944, 3584, 768]
                speed: 4292.05
                value: {index: 138, type: Single}
              - key: [2944, 3584, 1792]
                speed: 4051.1
                value: {index: 142, type: Single}
              - key: [2944, 3584, 3328]
                speed: 4076.96
                value: {index: 142, type: Single}
              - key: [2944, 4288, 128]
                speed: 2052.87
                value: {index: 127, type: Single}
              - key: [2944, 4288, 256]
                speed: 3879.42
                value: {index: 138, type: Single}
              - key: [2944, 4288, 768]
                speed: 4078.8
                value: {index: 138, type: Single}
              - key: [2944, 4288, 1792]
                speed: 4121.48
                value: {index: 142, type: Single}
              - key: [2944, 4288, 3328]
                speed: 4146.53
                value: {index: 142, type: Single}
              - key: [2944, 5056, 128]
                speed: 2157.62
                value: {index: 127, type: Single}
              - key: [2944, 5056, 256]
                speed: 3992.59
                value: {index: 138, type: Single}
              - key: [2944, 5056, 768]
                speed: 4209.84
                value: {index: 138, type: Single}
              - key: [2944, 5056, 1792]
                speed: 4197.09
                value: {index: 140, type: Single}
              - key: [2944, 5056, 3328]
                speed: 4242.85
                value: {index: 140, type: Single}
              - key: [2944, 5888, 128]
                speed: 2121.21
                value: {index: 125, type: Single}
              - key: [2944, 5888, 256]
                speed: 4152.54
                value: {index: 138, type: Single}
              - key: [2944, 5888, 768]
                speed: 4365.29
                value: {index: 138, type: Single}
              - key: [2944, 5888, 1792]
                speed: 4255.07
                value: {index: 138, type: Single}
              - key: [2944, 5888, 3328]
                speed: 4209.39
                value: {index: 138, type: Single}
              - key: [2944, 6784, 128]
                speed: 2142.93
                value: {index: 127, type: Single}
              - key: [2944, 6784, 256]
                speed: 4174.99
                value: {index: 138, type: Single}
              - key: [2944, 6784, 768]
                speed: 4334.69
                value: {index: 138, type: Single}
              - key: [2944, 6784, 1792]
                speed: 4257.19
                value: {index: 138, type: Single}
              - key: [2944, 6784, 3328]
                speed: 4285.9
                value: {index: 138, type: Single}
              - key: [3584, 4, 128]
                speed: 32.9093
                value: {index: 146, type: Single}
              - key: [3584, 4, 256]
                speed: 58.9656
                value: {index: 149, type: Single}
              - key: [3584, 4, 768]
                speed: 135.325
                value: {index: 149, type: Single}
              - key: [3584, 4, 1792]
                speed: 114.729
                value: {index: 148, type: Single}
              - key: [3584, 4, 3328]
                speed: 62.5727
                value: {index: 148, type: Single}
              - key: [3584, 64, 128]
                speed: 313.945
                value: {index: 126, type: Single}
              - key: [3584, 64, 256]
                speed: 1239.87
                value: {index: 130, type: Single}
              - key: [3584, 64, 768]
                speed: 1804.93
                value: {index: 130, type: Single}
              - key: [3584, 64, 1792]
                speed: 2102.3
                value: {index: 136, type: Single}
              - key: [3584, 64, 3328]
                speed: 2238.86
                value: {index: 136, type: Single}
              - key: [3584, 128, 128]
                speed: 532.272
                value: {index: 126, type: Single}
              - key: [3584, 128, 256]
                speed: 2191.05
                value: {index: 130, type: Single}
              - key: [3584, 128, 768]
                speed: 2977.7
                value: {index: 130, type: Single}
              - key: [3584, 128, 1792]
                speed: 3345.07
                value: {index: 130, type: Single}
              - key: [3584, 128, 3328]
                speed: 3511.33
                value: {index: 130, type: Single}
              - key: [3584, 256, 128]
                speed: 870.704
                value: {index: 126, type: Single}
              - key: [3584, 256, 256]
                speed: 2348.81
                value: {index: 130, type: Single}
              - key: [3584, 256, 768]
                speed: 2987.8
                value: {index: 130, type: Single}
              - key: [3584, 256, 1792]
                speed: 3242.17
                value: {index: 130, type: Single}
              - key: [3584, 256, 3328]
                speed: 3388.51
                value: {index: 130, type: Single}
              - key: [3584, 448, 128]
                speed: 1026.78
                value: {index: 128, type: Single}
              - key: [3584, 448, 256]
                speed: 2750.55
                value: {index: 142, type: Single}
              - key: [3584, 448, 768]
                speed: 3217.97
                value: {index: 142, type: Single}
              - key: [3584, 448, 1792]
                speed: 3411.7
                value: {index: 138, type: Single}
              - key: [3584, 448, 3328]
                speed: 3517.53
                value: {index: 138, type: Single}
              - key: [3584, 704, 128]
                speed: 1246.76
                value: {index: 128, type: Single}
              - key: [3584, 704, 256]
                speed: 2849.99
                value: {index: 138, type: Single}
              - key: [3584, 704, 768]
                speed: 3455.36
                value: {index: 138, type: Single}
              - key: [3584, 704, 1792]
                speed: 3697.87
                value: {index: 138, type: Single}
              - key: [3584, 704, 3328]
                speed: 3790.63
                value: {index: 138, type: Single}
              - key: [3584, 1024, 128]
                speed: 1365.91
                value: {index: 128, type: Single}
              - key: [3584, 1024, 256]
                speed: 3332.59
                value: {index: 140, type: Single}
              - key: [3584, 1024, 768]
                speed: 3881.05
                value: {index: 140, type: Single}
              - key: [3584, 1024, 1792]
                speed: 4073.76
                value: {index: 140, type: Single}
              - key: [3584, 1024, 3328]
                speed: 4142.52
                value: {index: 140, type: Single}
              - key: [3584, 1408, 128]
                speed: 1501.31
                value: {index: 128, type: Single}
              - key: [3584, 1408, 256]
                speed: 3317.19
                value: {index: 138, type: Single}
              - key: [3584, 1408, 768]
                speed: 3715.62
                value: {index: 138, type: Single}
              - key: [3584, 1408, 1792]
                speed: 3751.5
                value: {index: 138, type: Single}
              - key: [3584, 1408, 3328]
                speed: 3631.36
                value: {index: 130, type: Single}
              - key: [3584, 1856, 128]
                speed: 1677.39
                value: {index: 128, type: Single}
              - key: [3584, 1856, 256]
                speed: 3378.74
                value: {index: 138, type: Single}
              - key: [3584, 1856, 768]
                speed: 4009.94
                value: {index: 138, type: Single}
              - key: [3584, 1856, 1792]
                speed: 4161.04
                value: {index: 138, type: Single}
              - key: [3584, 1856, 3328]
                speed: 3958.11
                value: {index: 142, type: Single}
              - key: [3584, 2368, 128]
                speed: 1789.31
                value: {index: 128, type: Single}
              - key: [3584, 2368, 256]
                speed: 3578.14
                value: {index: 138, type: Single}
              - key: [3584, 2368, 768]
                speed: 4051.23
                value: {index: 138, type: Single}
              - key: [3584, 2368, 1792]
                speed: 4220.1
                value: {index: 138, type: Single}
              - key: [3584, 2368, 3328]
                speed: 3972.14
                value: {index: 142, type: Single}
              - key: [3584, 2944, 128]
                speed: 1806.54
                value: {index: 128, type: Single}
              - key: [3584, 2944, 256]
                speed: 3778.86
                value: {index: 138, type: Single}
              - key: [3584, 2944, 768]
                speed: 4197.61
                value: {index: 138, type: Single}
              - key: [3584, 2944, 1792]
                speed: 4327.23
                value: {index: 138, type: Single}
              - key: [3584, 2944, 3328]
                speed: 4067.41
                value: {index: 142, type: Single}
              - key: [3584, 3584, 128]
                speed: 1787.76
                value: {index: 128, type: Single}
              - key: [3584, 3584, 256]
                speed: 3844.03
                value: {index: 138, type: Single}
              - key: [3584, 3584, 768]
                speed: 4133.01
                value: {index: 138, type: Single}
              - key: [3584, 3584, 1792]
                speed: 4199.39
                value: {index: 138, type: Single}
              - key: [3584, 3584, 3328]
                speed: 4065.82
                value: {index: 138, type: Single}
              - key: [3584, 4288, 128]
                speed: 1896.14
                value: {index: 128, type: Single}
              - key: [3584, 4288, 256]
                speed: 3830.08
                value: {index: 138, type: Single}
              - key: [3584, 4288, 768]
                speed: 4246.58
                value: {index: 138, type: Single}
              - key: [3584, 4288, 1792]
                speed: 4335.12
                value: {index: 138, type: Single}
              - key: [3584, 4288, 3328]
                speed: 4356.68
                value: {index: 140, type: Single}
              - key: [3584, 5056, 128]
                speed: 1979.33
                value: {index: 128, type: Single}
              - key: [3584, 5056, 256]
                speed: 3915.61
                value: {index: 138, type: Single}
              - key: [3584, 5056, 768]
                speed: 4250.78
                value: {index: 138, type: Single}
              - key: [3584, 5056, 1792]
                speed: 4215.39
                value: {index: 138, type: Single}
              - key: [3584, 5056, 3328]
                speed: 4185.97
                value: {index: 138, type: Single}
              - key: [3584, 5888, 128]
                speed: 1885.32
                value: {index: 128, type: Single}
              - key: [3584, 5888, 256]
                speed: 4077.8
                value: {index: 138, type: Single}
              - key: [3584, 5888, 768]
                speed: 4322.83
                value: {index: 138, type: Single}
              - key: [3584, 5888, 1792]
                speed: 4374.04
                value: {index: 138, type: Single}
              - key: [3584, 5888, 3328]
                speed: 4288.37
                value: {index: 138, type: Single}
              - key: [3584, 6784, 128]
                speed: 2006.92
                value: {index: 128, type: Single}
              - key: [3584, 6784, 256]
                speed: 4096.48
                value: {index: 138, type: Single}
              - key: [3584, 6784, 768]
                speed: 4369.31
                value: {index: 138, type: Single}
              - key: [3584, 6784, 1792]
                speed: 4448.94
                value: {index: 138, type: Single}
              - key: [3584, 6784, 3328]
                speed: 4338.11
                value: {index: 138, type: Single}
              - key: [4288, 4, 128]
                speed: 39.5439
                value: {index: 146, type: Single}
              - key: [4288, 4, 256]
                speed: 67.1804
                value: {index: 148, type: Single}
              - key: [4288, 4, 768]
                speed: 150.511
                value: {index: 149, type: Single}
              - key: [4288, 4, 1792]
                speed: 96.6558
                value: {index: 148, type: Single}
              - key: [4288, 4, 3328]
                speed: 65.7507
                value: {index: 149, type: Single}
              - key: [4288, 64, 128]
                speed: 365.605
                value: {index: 126, type: Single}
              - key: [4288, 64, 256]
                speed: 1361.52
                value: {index: 130, type: Single}
              - key: [4288, 64, 768]
                speed: 1820.7
                value: {index: 130, type: Single}
              - key: [4288, 64, 1792]
                speed: 2028.13
                value: {index: 130, type: Single}
              - key: [4288, 64, 3328]
                speed: 2120.43
                value: {index: 144, type: Single}
              - key: [4288, 128, 128]
                speed: 649.543
                value: {index: 126, type: Single}
              - key: [4288, 128, 256]
                speed: 1705.21
                value: {index: 130, type: Single}
              - key: [4288, 128, 768]
                speed: 2171.03
                value: {index: 130, type: Single}
              - key: [4288, 128, 1792]
                speed: 2334.7
                value: {index: 134, type: Single}
              - key: [4288, 128, 3328]
                speed: 2817.47
                value: {index: 134, type: Single}
              - key: [4288, 256, 128]
                speed: 855.928
                value: {index: 127, type: Single}
              - key: [4288, 256, 256]
                speed: 2185.89
                value: {index: 130, type: Single}
              - key: [4288, 256, 768]
                speed: 2550.38
                value: {index: 136, type: Single}
              - key: [4288, 256, 1792]
                speed: 2826.33
                value: {index: 134, type: Single}
              - key: [4288, 256, 3328]
                speed: 3293.34
                value: {index: 134, type: Single}
              - key: [4288, 448, 128]
                speed: 1419.04
                value: {index: 127, type: Single}
              - key: [4288, 448, 256]
                speed: 3261.15
                value: {index: 142, type: Single}
              - key: [4288, 448, 768]
                speed: 3810.3
                value: {index: 142, type: Single}
              - key: [4288, 448, 1792]
                speed: 3995.45
                value: {index: 142, type: Single}
              - key: [4288, 448, 3328]
                speed: 4074.16
                value: {index: 142, type: Single}
              - key: [4288, 704, 128]
                speed: 1473.01
                value: {index: 125, type: Single}
              - key: [4288, 704, 256]
                speed: 2796.76
                value: {index: 130, type: Single}
              - key: [4288, 704, 768]
                speed: 3207.17
                value: {index: 130, type: Single}
              - key: [4288, 704, 1792]
                speed: 3450.18
                value: {index: 130, type: Single}
              - key: [4288, 704, 3328]
                speed: 3414.55
                value: {index: 140, type: Single}
              - key: [4288, 1024, 128]
                speed: 1680.33
                value: {index: 127, type: Single}
              - key: [4288, 1024, 256]
                speed: 3492.65
                value: {index: 138, type: Single}
              - key: [4288, 1024, 768]
                speed: 3782.89
                value: {index: 138, type: Single}
              - key: [4288, 1024, 1792]
                speed: 3900.87
                value: {index: 138, type: Single}
              - key: [4288, 1024, 3328]
                speed: 3593.02
                value: {index: 142, type: Single}
              - key: [4288, 1408, 128]
                speed: 1817.16
                value: {index: 127, type: Single}
              - key: [4288, 1408, 256]
                speed: 3637.74
                value: {index: 138, type: Single}
              - key: [4288, 1408, 768]
                speed: 3841.47
                value: {index: 138, type: Single}
              - key: [4288, 1408, 1792]
                speed: 3898.2
                value: {index: 138, type: Single}
              - key: [4288, 1408, 3328]
                speed: 3679.57
                value: {index: 130, type: Single}
              - key: [4288, 1856, 128]
                speed: 1905.95
                value: {index: 127, type: Single}
              - key: [4288, 1856, 256]
                speed: 3709.73
                value: {index: 138, type: Single}
              - key: [4288, 1856, 768]
                speed: 3954.34
                value: {index: 138, type: Single}
              - key: [4288, 1856, 1792]
                speed: 4013.58
                value: {index: 138, type: Single}
              - key: [4288, 1856, 3328]
                speed: 3792.69
                value: {index: 138, type: Single}
              - key: [4288, 2368, 128]
                speed: 2005.23
                value: {index: 127, type: Single}
              - key: [4288, 2368, 256]
                speed: 3926.62
                value: {index: 138, type: Single}
              - key: [4288, 2368, 768]
                speed: 4154.2
                value: {index: 138, type: Single}
              - key: [4288, 2368, 1792]
                speed: 4180.98
                value: {index: 138, type: Single}
              - key: [4288, 2368, 3328]
                speed: 3920.2
                value: {index: 142, type: Single}
              - key: [4288, 2944, 128]
                speed: 2146.46
                value: {index: 127, type: Single}
              - key: [4288, 2944, 256]
                speed: 4208.83
                value: {index: 138, type: Single}
              - key: [4288, 2944, 768]
                speed: 4090.91
                value: {index: 138, type: Single}
              - key: [4288, 2944, 1792]
                speed: 4391.66
                value: {index: 138, type: Single}
              - key: [4288, 2944, 3328]
                speed: 4131.78
                value: {index: 138, type: Single}
              - key: [4288, 3584, 128]
                speed: 2207.28
                value: {index: 125, type: Single}
              - key: [4288, 3584, 256]
                speed: 4224.57
                value: {index: 138, type: Single}
              - key: [4288, 3584, 768]
                speed: 4359.77
                value: {index: 138, type: Single}
              - key: [4288, 3584, 1792]
                speed: 4344.42
                value: {index: 140, type: Single}
              - key: [4288, 3584, 3328]
                speed: 4385.76
                value: {index: 140, type: Single}
              - key: [4288, 4288, 128]
                speed: 2208.98
                value: {index: 125, type: Single}
              - key: [4288, 4288, 256]
                speed: 4229.92
                value: {index: 138, type: Single}
              - key: [4288, 4288, 768]
                speed: 4079.0
                value: {index: 138, type: Single}
              - key: [4288, 4288, 1792]
                speed: 4194.22
                value: {index: 138, type: Single}
              - key: [4288, 4288, 3328]
                speed: 4223.36
                value: {index: 138, type: Single}
              - key: [4288, 5056, 128]
                speed: 2244.03
                value: {index: 127, type: Single}
              - key: [4288, 5056, 256]
                speed: 4160.01
                value: {index: 138, type: Single}
              - key: [4288, 5056, 768]
                speed: 4150.22
                value: {index: 138, type: Single}
              - key: [4288, 5056, 1792]
                speed: 4267.29
                value: {index: 138, type: Single}
              - key: [4288, 5056, 3328]
                speed: 4258.78
                value: {index: 138, type: Single}
              - key: [4288, 5888, 128]
                speed: 2271.12
                value: {index: 127, type: Single}
              - key: [4288, 5888, 256]
                speed: 4324.17
                value: {index: 138, type: Single}
              - key: [4288, 5888, 768]
                speed: 4298.63
                value: {index: 138, type: Single}
              - key: [4288, 5888, 1792]
                speed: 4387.75
                value: {index: 138, type: Single}
              - key: [4288, 5888, 3328]
                speed: 4367.11
                value: {index: 138, type: Single}
              - key: [4288, 6784, 128]
                speed: 2306.66
                value: {index: 127, type: Single}
              - key: [4288, 6784, 256]
                speed: 4327.63
                value: {index: 138, type: Single}
              - key: [4288, 6784, 768]
                speed: 4303.23
                value: {index: 138, type: Single}
              - key: [4288, 6784, 1792]
                speed: 4416.18
                value: {index: 138, type: Single}
              - key: [4288, 6784, 3328]
                speed: 4388.3
                value: {index: 138, type: Single}
              - key: [5056, 4, 128]
                speed: 46.4924
                value: {index: 146, type: Single}
              - key: [5056, 4, 256]
                speed: 77.5981
                value: {index: 151, type: Single}
              - key: [5056, 4, 768]
                speed: 167.805
                value: {index: 150, type: Single}
              - key: [5056, 4, 1792]
                speed: 82.9858
                value: {index: 148, type: Single}
              - key: [5056, 4, 3328]
                speed: 65.4216
                value: {index: 151, type: Single}
              - key: [5056, 64, 128]
                speed: 421.951
                value: {index: 126, type: Single}
              - key: [5056, 64, 256]
                speed: 1568.89
                value: {index: 130, type: Single}
              - key: [5056, 64, 768]
                speed: 2140.87
                value: {index: 130, type: Single}
              - key: [5056, 64, 1792]
                speed: 2386.66
                value: {index: 130, type: Single}
              - key: [5056, 64, 3328]
                speed: 2484.51
                value: {index: 130, type: Single}
              - key: [5056, 128, 128]
                speed: 739.621
                value: {index: 126, type: Single}
              - key: [5056, 128, 256]
                speed: 2030.33
                value: {index: 130, type: Single}
              - key: [5056, 128, 768]
                speed: 2365.88
                value: {index: 136, type: Single}
              - key: [5056, 128, 1792]
                speed: 2579.92
                value: {index: 131, type: Single}
              - key: [5056, 128, 3328]
                speed: 2928.23
                value: {index: 131, type: Single}
              - key: [5056, 256, 128]
                speed: 983.351
                value: {index: 127, type: Single}
              - key: [5056, 256, 256]
                speed: 2456.63
                value: {index: 138, type: Single}
              - key: [5056, 256, 768]
                speed: 2749.03
                value: {index: 138, type: Single}
              - key: [5056, 256, 1792]
                speed: 2849.45
                value: {index: 138, type: Single}
              - key: [5056, 256, 3328]
                speed: 3246.57
                value: {index: 134, type: Single}
              - key: [5056, 448, 128]
                speed: 1343.77
                value: {index: 128, type: Single}
              - key: [5056, 448, 256]
                speed: 2941.67
                value: {index: 138, type: Single}
              - key: [5056, 448, 768]
                speed: 3300.17
                value: {index: 138, type: Single}
              - key: [5056, 448, 1792]
                speed: 3481.88
                value: {index: 130, type: Single}
              - key: [5056, 448, 3328]
                speed: 3561.0
                value: {index: 130, type: Single}
              - key: [5056, 704, 128]
                speed: 1705.62
                value: {index: 125, type: Single}
              - key: [5056, 704, 256]
                speed: 3331.43
                value: {index: 138, type: Single}
              - key: [5056, 704, 768]
                speed: 3762.02
                value: {index: 140, type: Single}
              - key: [5056, 704, 1792]
                speed: 3949.24
                value: {index: 140, type: Single}
              - key: [5056, 704, 3328]
                speed: 4020.86
                value: {index: 140, type: Single}
              - key: [5056, 1024, 128]
                speed: 1745.42
                value: {index: 125, type: Single}
              - key: [5056, 1024, 256]
                speed: 3578.29
                value: {index: 138, type: Single}
              - key: [5056, 1024, 768]
                speed: 3841.0
                value: {index: 138, type: Single}
              - key: [5056, 1024, 1792]
                speed: 3922.5
                value: {index: 138, type: Single}
              - key: [5056, 1024, 3328]
                speed: 3753.73
                value: {index: 138, type: Single}
              - key: [5056, 1408, 128]
                speed: 1943.71
                value: {index: 125, type: Single}
              - key: [5056, 1408, 256]
                speed: 3804.96
                value: {index: 138, type: Single}
              - key: [5056, 1408, 768]
                speed: 3992.11
                value: {index: 138, type: Single}
              - key: [5056, 1408, 1792]
                speed: 4049.32
                value: {index: 138, type: Single}
              - key: [5056, 1408, 3328]
                speed: 4056.44
                value: {index: 140, type: Single}
              - key: [5056, 1856, 128]
                speed: 2074.09
                value: {index: 125, type: Single}
              - key: [5056, 1856, 256]
                speed: 3969.94
                value: {index: 138, type: Single}
              - key: [5056, 1856, 768]
                speed: 4209.42
                value: {index: 138, type: Single}
              - key: [5056, 1856, 1792]
                speed: 4279.93
                value: {index: 138, type: Single}
              - key: [5056, 1856, 3328]
                speed: 4034.94
                value: {index: 142, type: Single}
              - key: [5056, 2368, 128]
                speed: 2044.64
                value: {index: 127, type: Single}
              - key: [5056, 2368, 256]
                speed: 3958.7
                value: {index: 138, type: Single}
              - key: [5056, 2368, 768]
                speed: 4153.7
                value: {index: 138, type: Single}
              - key: [5056, 2368, 1792]
                speed: 4220.49
                value: {index: 138, type: Single}
              - key: [5056, 2368, 3328]
                speed: 4036.35
                value: {index: 138, type: Single}
              - key: [5056, 2944, 128]
                speed: 2165.47
                value: {index: 125, type: Single}
              - key: [5056, 2944, 256]
                speed: 4112.91
                value: {index: 138, type: Single}
              - key: [5056, 2944, 768]
                speed: 4249.66
                value: {index: 138, type: Single}
              - key: [5056, 2944, 1792]
                speed: 4290.09
                value: {index: 138, type: Single}
              - key: [5056, 2944, 3328]
                speed: 4246.43
                value: {index: 140, type: Single}
              - key: [5056, 3584, 128]
                speed: 2200.45
                value: {index: 127, type: Single}
              - key: [5056, 3584, 256]
                speed: 4218.1
                value: {index: 138, type: Single}
              - key: [5056, 3584, 768]
                speed: 4360.31
                value: {index: 138, type: Single}
              - key: [5056, 3584, 1792]
                speed: 4400.95
                value: {index: 138, type: Single}
              - key: [5056, 3584, 3328]
                speed: 4280.57
                value: {index: 138, type: Single}
              - key: [5056, 4288, 128]
                speed: 2187.57
                value: {index: 127, type: Single}
              - key: [5056, 4288, 256]
                speed: 4142.12
                value: {index: 138, type: Single}
              - key: [5056, 4288, 768]
                speed: 4305.44
                value: {index: 138, type: Single}
              - key: [5056, 4288, 1792]
                speed: 4353.68
                value: {index: 138, type: Single}
              - key: [5056, 4288, 3328]
                speed: 4255.32
                value: {index: 138, type: Single}
              - key: [5056, 5056, 128]
                speed: 2249.91
                value: {index: 125, type: Single}
              - key: [5056, 5056, 256]
                speed: 4205.98
                value: {index: 138, type: Single}
              - key: [5056, 5056, 768]
                speed: 4336.72
                value: {index: 138, type: Single}
              - key: [5056, 5056, 1792]
                speed: 4378.79
                value: {index: 138, type: Single}
              - key: [5056, 5056, 3328]
                speed: 4299.56
                value: {index: 138, type: Single}
              - key: [5056, 5888, 128]
                speed: 2289.54
                value: {index: 127, type: Single}
              - key: [5056, 5888, 256]
                speed: 4297.72
                value: {index: 138, type: Single}
              - key: [5056, 5888, 768]
                speed: 4415.85
                value: {index: 138, type: Single}
              - key: [5056, 5888, 1792]
                speed: 4451.22
                value: {index: 138, type: Single}
              - key: [5056, 5888, 3328]
                speed: 4378.32
                value: {index: 138, type: Single}
              - key: [5056, 6784, 128]
                speed: 2331.35
                value: {index: 125, type: Single}
              - key: [5056, 6784, 256]
                speed: 4377.96
                value: {index: 138, type: Single}
              - key: [5056, 6784, 768]
                speed: 4503.64
                value: {index: 138, type: Single}
              - key: [5056, 6784, 1792]
                speed: 4541.16
                value: {index: 138, type: Single}
              - key: [5056, 6784, 3328]
                speed: 4423.66
                value: {index: 138, type: Single}
              - key: [5888, 4, 128]
                speed: 54.5348
                value: {index: 146, type: Single}
              - key: [5888, 4, 256]
                speed: 87.2296
                value: {index: 148, type: Single}
              - key: [5888, 4, 768]
                speed: 181.46
                value: {index: 153, type: Single}
              - key: [5888, 4, 1792]
                speed: 141.819
                value: {index: 148, type: Single}
              - key: [5888, 4, 3328]
                speed: 65.3308
                value: {index: 153, type: Single}
              - key: [5888, 64, 128]
                speed: 477.758
                value: {index: 126, type: Single}
              - key: [5888, 64, 256]
                speed: 1791.77
                value: {index: 130, type: Single}
              - key: [5888, 64, 768]
                speed: 2498.33
                value: {index: 130, type: Single}
              - key: [5888, 64, 1792]
                speed: 2774.83
                value: {index: 130, type: Single}
              - key: [5888, 64, 3328]
                speed: 2889.09
                value: {index: 130, type: Single}
              - key: [5888, 128, 128]
                speed: 793.853
                value: {index: 126, type: Single}
              - key: [5888, 128, 256]
                speed: 2077.28
                value: {index: 130, type: Single}
              - key: [5888, 128, 768]
                speed: 2650.25
                value: {index: 130, type: Single}
              - key: [5888, 128, 1792]
                speed: 2845.93
                value: {index: 130, type: Single}
              - key: [5888, 128, 3328]
                speed: 2934.25
                value: {index: 130, type: Single}
              - key: [5888, 256, 128]
                speed: 1058.24
                value: {index: 124, type: Single}
              - key: [5888, 256, 256]
                speed: 2735.93
                value: {index: 138, type: Single}
              - key: [5888, 256, 768]
                speed: 3150.52
                value: {index: 138, type: Single}
              - key: [5888, 256, 1792]
                speed: 3296.31
                value: {index: 138, type: Single}
              - key: [5888, 256, 3328]
                speed: 3357.33
                value: {index: 138, type: Single}
              - key: [5888, 448, 128]
                speed: 1173.34
                value: {index: 127, type: Single}
              - key: [5888, 448, 256]
                speed: 2718.53
                value: {index: 130, type: Single}
              - key: [5888, 448, 768]
                speed: 3289.57
                value: {index: 142, type: Single}
              - key: [5888, 448, 1792]
                speed: 3403.06
                value: {index: 130, type: Single}
              - key: [5888, 448, 3328]
                speed: 3465.34
                value: {index: 130, type: Single}
              - key: [5888, 704, 128]
                speed: 1378.85
                value: {index: 127, type: Single}
              - key: [5888, 704, 256]
                speed: 3156.71
                value: {index: 138, type: Single}
              - key: [5888, 704, 768]
                speed: 3545.39
                value: {index: 138, type: Single}
              - key: [5888, 704, 1792]
                speed: 3667.12
                value: {index: 138, type: Single}
              - key: [5888, 704, 3328]
                speed: 3708.99
                value: {index: 138, type: Single}
              - key: [5888, 1024, 128]
                speed: 1486.43
                value: {index: 127, type: Single}
              - key: [5888, 1024, 256]
                speed: 3360.12
                value: {index: 138, type: Single}
              - key: [5888, 1024, 768]
                speed: 3716.54
                value: {index: 138, type: Single}
              - key: [5888, 1024, 1792]
                speed: 3788.51
                value: {index: 138, type: Single}
              - key: [5888, 1024, 3328]
                speed: 3867.15
                value: {index: 138, type: Single}
              - key: [5888, 1408, 128]
                speed: 1773.33
                value: {index: 128, type: Single}
              - key: [5888, 1408, 256]
                speed: 3806.17
                value: {index: 138, type: Single}
              - key: [5888, 1408, 768]
                speed: 4103.69
                value: {index: 138, type: Single}
              - key: [5888, 1408, 1792]
                speed: 4198.29
                value: {index: 138, type: Single}
              - key: [5888, 1408, 3328]
                speed: 4148.84
                value: {index: 138, type: Single}
              - key: [5888, 1856, 128]
                speed: 1818.52
                value: {index: 128, type: Single}
              - key: [5888, 1856, 256]
                speed: 3794.9
                value: {index: 138, type: Single}
              - key: [5888, 1856, 768]
                speed: 4054.97
                value: {index: 138, type: Single}
              - key: [5888, 1856, 1792]
                speed: 4146.18
                value: {index: 138, type: Single}
              - key: [5888, 1856, 3328]
                speed: 4130.38
                value: {index: 140, type: Single}
              - key: [5888, 2368, 128]
                speed: 1891.19
                value: {index: 128, type: Single}
              - key: [5888, 2368, 256]
                speed: 3949.8
                value: {index: 138, type: Single}
              - key: [5888, 2368, 768]
                speed: 4166.69
                value: {index: 138, type: Single}
              - key: [5888, 2368, 1792]
                speed: 4144.19
                value: {index: 138, type: Single}
              - key: [5888, 2368, 3328]
                speed: 4064.93
                value: {index: 138, type: Single}
              - key: [5888, 2944, 128]
                speed: 1793.74
                value: {index: 127, type: Single}
              - key: [5888, 2944, 256]
                speed: 4136.75
                value: {index: 138, type: Single}
              - key: [5888, 2944, 768]
                speed: 4345.57
                value: {index: 138, type: Single}
              - key: [5888, 2944, 1792]
                speed: 4353.0
                value: {index: 138, type: Single}
              - key: [5888, 2944, 3328]
                speed: 4306.35
                value: {index: 138, type: Single}
              - key: [5888, 3584, 128]
                speed: 1850.8
                value: {index: 127, type: Single}
              - key: [5888, 3584, 256]
                speed: 4167.9
                value: {index: 138, type: Single}
              - key: [5888, 3584, 768]
                speed: 4358.45
                value: {index: 138, type: Single}
              - key: [5888, 3584, 1792]
                speed: 4394.05
                value: {index: 138, type: Single}
              - key: [5888, 3584, 3328]
                speed: 4319.35
                value: {index: 138, type: Single}
              - key: [5888, 4288, 128]
                speed: 2015.49
                value: {index: 128, type: Single}
              - key: [5888, 4288, 256]
                speed: 4139.4
                value: {index: 138, type: Single}
              - key: [5888, 4288, 768]
                speed: 4273.47
                value: {index: 138, type: Single}
              - key: [5888, 4288, 1792]
                speed: 4300.73
                value: {index: 138, type: Single}
              - key: [5888, 4288, 3328]
                speed: 4290.87
                value: {index: 138, type: Single}
              - key: [5888, 5056, 128]
                speed: 1902.68
                value: {index: 125, type: Single}
              - key: [5888, 5056, 256]
                speed: 4204.58
                value: {index: 138, type: Single}
              - key: [5888, 5056, 768]
                speed: 4365.93
                value: {index: 138, type: Single}
              - key: [5888, 5056, 1792]
                speed: 4393.36
                value: {index: 138, type: Single}
              - key: [5888, 5056, 3328]
                speed: 4340.31
                value: {index: 138, type: Single}
              - key: [5888, 5888, 128]
                speed: 1910.58
                value: {index: 125, type: Single}
              - key: [5888, 5888, 256]
                speed: 4289.0
                value: {index: 138, type: Single}
              - key: [5888, 5888, 768]
                speed: 4418.72
                value: {index: 138, type: Single}
              - key: [5888, 5888, 1792]
                speed: 4439.56
                value: {index: 138, type: Single}
              - key: [5888, 5888, 3328]
                speed: 4414.82
                value: {index: 138, type: Single}
              - key: [5888, 6784, 128]
                speed: 2078.06
                value: {index: 128, type: Single}
              - key: [5888, 6784, 256]
                speed: 4304.48
                value: {index: 138, type: Single}
              - key: [5888, 6784, 768]
                speed: 4460.5
                value: {index: 138, type: Single}
              - key: [5888, 6784, 1792]
                speed: 4470.8
                value: {index: 138, type: Single}
              - key: [5888, 6784, 3328]
                speed: 4442.22
                value: {index: 138, type: Single}
              - key: [6784, 4, 128]
                speed: 62.8336
                value: {index: 146, type: Single}
              - key: [6784, 4, 256]
                speed: 98.3411
                value: {index: 151, type: Single}
              - key: [6784, 4, 768]
                speed: 194.699
                value: {index: 153, type: Single}
              - key: [6784, 4, 1792]
                speed: 104.693
                value: {index: 148, type: Single}
              - key: [6784, 4, 3328]
                speed: 67.877
                value: {index: 148, type: Single}
              - key: [6784, 64, 128]
                speed: 554.415
                value: {index: 126, type: Single}
              - key: [6784, 64, 256]
                speed: 2089.27
                value: {index: 130, type: Single}
              - key: [6784, 64, 768]
                speed: 2852.9
                value: {index: 130, type: Single}
              - key: [6784, 64, 1792]
                speed: 3174.13
                value: {index: 130, type: Single}
              - key: [6784, 64, 3328]
                speed: 3311.04
                value: {index: 130, type: Single}
              - key: [6784, 128, 128]
                speed: 942.58
                value: {index: 126, type: Single}
              - key: [6784, 128, 256]
                speed: 2391.33
                value: {index: 130, type: Single}
              - key: [6784, 128, 768]
                speed: 3042.4
                value: {index: 130, type: Single}
              - key: [6784, 128, 1792]
                speed: 3176.72
                value: {index: 130, type: Single}
              - key: [6784, 128, 3328]
                speed: 3288.44
                value: {index: 130, type: Single}
              - key: [6784, 256, 128]
                speed: 1268.25
                value: {index: 127, type: Single}
              - key: [6784, 256, 256]
                speed: 3004.03
                value: {index: 138, type: Single}
              - key: [6784, 256, 768]
                speed: 3541.28
                value: {index: 138, type: Single}
              - key: [6784, 256, 1792]
                speed: 3765.58
                value: {index: 138, type: Single}
              - key: [6784, 256, 3328]
                speed: 3844.35
                value: {index: 138, type: Single}
              - key: [6784, 448, 128]
                speed: 1454.61
                value: {index: 125, type: Single}
              - key: [6784, 448, 256]
                speed: 2830.48
                value: {index: 142, type: Single}
              - key: [6784, 448, 768]
                speed: 3301.27
                value: {index: 130, type: Single}
              - key: [6784, 448, 1792]
                speed: 3378.1
                value: {index: 140, type: Single}
              - key: [6784, 448, 3328]
                speed: 3531.03
                value: {index: 130, type: Single}
              - key: [6784, 704, 128]
                speed: 1772.56
                value: {index: 127, type: Single}
              - key: [6784, 704, 256]
                speed: 3344.2
                value: {index: 142, type: Single}
              - key: [6784, 704, 768]
                speed: 3772.65
                value: {index: 142, type: Single}
              - key: [6784, 704, 1792]
                speed: 3873.6
                value: {index: 142, type: Single}
              - key: [6784, 704, 3328]
                speed: 3912.39
                value: {index: 142, type: Single}
              - key: [6784, 1024, 128]
                speed: 1820.63
                value: {index: 127, type: Single}
              - key: [6784, 1024, 256]
                speed: 3444.88
                value: {index: 140, type: Single}
              - key: [6784, 1024, 768]
                speed: 3786.81
                value: {index: 140, type: Single}
              - key: [6784, 1024, 1792]
                speed: 3911.83
                value: {index: 140, type: Single}
              - key: [6784, 1024, 3328]
                speed: 3956.68
                value: {index: 140, type: Single}
              - key: [6784, 1408, 128]
                speed: 2008.81
                value: {index: 127, type: Single}
              - key: [6784, 1408, 256]
                speed: 3974.25
                value: {index: 138, type: Single}
              - key: [6784, 1408, 768]
                speed: 4257.5
                value: {index: 138, type: Single}
              - key: [6784, 1408, 1792]
                speed: 4348.82
                value: {index: 138, type: Single}
              - key: [6784, 1408, 3328]
                speed: 4115.4
                value: {index: 142, type: Single}
              - key: [6784, 1856, 128]
                speed: 2059.9
                value: {index: 127, type: Single}
              - key: [6784, 1856, 256]
                speed: 3832.55
                value: {index: 138, type: Single}
              - key: [6784, 1856, 768]
                speed: 4043.31
                value: {index: 142, type: Single}
              - key: [6784, 1856, 1792]
                speed: 4110.42
                value: {index: 142, type: Single}
              - key: [6784, 1856, 3328]
                speed: 4133.48
                value: {index: 142, type: Single}
              - key: [6784, 2368, 128]
                speed: 2136.24
                value: {index: 127, type: Single}
              - key: [6784, 2368, 256]
                speed: 3983.14
                value: {index: 138, type: Single}
              - key: [6784, 2368, 768]
                speed: 4243.79
                value: {index: 138, type: Single}
              - key: [6784, 2368, 1792]
                speed: 4284.79
                value: {index: 138, type: Single}
              - key: [6784, 2368, 3328]
                speed: 4110.62
                value: {index: 138, type: Single}
              - key: [6784, 2944, 128]
                speed: 2195.79
                value: {index: 127, type: Single}
              - key: [6784, 2944, 256]
                speed: 4170.09
                value: {index: 138, type: Single}
              - key: [6784, 2944, 768]
                speed: 4336.07
                value: {index: 138, type: Single}
              - key: [6784, 2944, 1792]
                speed: 4350.29
                value: {index: 138, type: Single}
              - key: [6784, 2944, 3328]
                speed: 4282.68
                value: {index: 138, type: Single}
              - key: [6784, 3584, 128]
                speed: 2206.09
                value: {index: 127, type: Single}
              - key: [6784, 3584, 256]
                speed: 4231.49
                value: {index: 138, type: Single}
              - key: [6784, 3584, 768]
                speed: 4278.18
                value: {index: 138, type: Single}
              - key: [6784, 3584, 1792]
                speed: 4458.34
                value: {index: 138, type: Single}
              - key: [6784, 3584, 3328]
                speed: 4366.79
                value: {index: 138, type: Single}
              - key: [6784, 4288, 128]
                speed: 2247.95
                value: {index: 127, type: Single}
              - key: [6784, 4288, 256]
                speed: 4149.39
                value: {index: 138, type: Single}
              - key: [6784, 4288, 768]
                speed: 4224.84
                value: {index: 138, type: Single}
              - key: [6784, 4288, 1792]
                speed: 4311.37
                value: {index: 138, type: Single}
              - key: [6784, 4288, 3328]
                speed: 4289.98
                value: {index: 138, type: Single}
              - key: [6784, 5056, 128]
                speed: 2253.43
                value: {index: 127, type: Single}
              - key: [6784, 5056, 256]
                speed: 4202.94
                value: {index: 138, type: Single}
              - key: [6784, 5056, 768]
                speed: 4309.54
                value: {index: 138, type: Single}
              - key: [6784, 5056, 1792]
                speed: 4363.54
                value: {index: 138, type: Single}
              - key: [6784, 5056, 3328]
                speed: 4350.66
                value: {index: 140, type: Single}
              - key: [6784, 5888, 128]
                speed: 2291.94
                value: {index: 127, type: Single}
              - key: [6784, 5888, 256]
                speed: 4321.94
                value: {index: 138, type: Single}
              - key: [6784, 5888, 768]
                speed: 4440.15
                value: {index: 138, type: Single}
              - key: [6784, 5888, 1792]
                speed: 4469.75
                value: {index: 138, type: Single}
              - key: [6784, 5888, 3328]
                speed: 4445.64
                value: {index: 138, type: Single}
              - key: [6784, 6784, 128]
                speed: 2315.32
                value: {index: 127, type: Single}
              - key: [6784, 6784, 256]
                speed: 4354.86
                value: {index: 138, type: Single}
              - key: [6784, 6784, 768]
                speed: 4449.05
                value: {index: 138, type: Single}
              - key: [6784, 6784, 1792]
                speed: 4463.66
                value: {index: 138, type: Single}
              - key: [6784, 6784, 3328]
                speed: 4472.49
                value: {index: 138, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
        Contraction_l_Alik_Bljk_Cijk_Dijk:
          rows:
          - library:
              distance: Euclidean
              properties:
              - {index: 0, type: FreeSizeA}
              - {index: 0, type: FreeSizeB}
              - {index: 0, type: BoundSize}
              table:
              - key: [4, 4, 128]
                speed: 0.0353594
                value: {index: 92, type: Single}
              - key: [4, 4, 256]
                speed: 0.0973384
                value: {index: 98, type: Single}
              - key: [4, 4, 768]
                speed: 0.255574
                value: {index: 98, type: Single}
              - key: [4, 4, 1792]
                speed: 0.463648
                value: {index: 98, type: Single}
              - key: [4, 4, 3328]
                speed: 0.646846
                value: {index: 95, type: Single}
              - key: [4, 64, 128]
                speed: 0.571274
                value: {index: 92, type: Single}
              - key: [4, 64, 256]
                speed: 1.64498
                value: {index: 98, type: Single}
              - key: [4, 64, 768]
                speed: 4.28153
                value: {index: 95, type: Single}
              - key: [4, 64, 1792]
                speed: 7.7179
                value: {index: 95, type: Single}
              - key: [4, 64, 3328]
                speed: 10.5861
                value: {index: 95, type: Single}
              - key: [4, 128, 128]
                speed: 1.15381
                value: {index: 92, type: Single}
              - key: [4, 128, 256]
                speed: 3.25726
                value: {index: 97, type: Single}
              - key: [4, 128, 768]
                speed: 7.8019
                value: {index: 95, type: Single}
              - key: [4, 128, 1792]
                speed: 14.39
                value: {index: 95, type: Single}
              - key: [4, 128, 3328]
                speed: 20.0746
                value: {index: 95, type: Single}
              - key: [4, 256, 128]
                speed: 2.35404
                value: {index: 91, type: Single}
              - key: [4, 256, 256]
                speed: 5.67903
                value: {index: 98, type: Single}
              - key: [4, 256, 768]
                speed: 14.9171
                value: {index: 95, type: Single}
              - key: [4, 256, 1792]
                speed: 27.7695
                value: {index: 95, type: Single}
              - key: [4, 256, 3328]
                speed: 39.7373
                value: {index: 95, type: Single}
              - key: [4, 448, 128]
                speed: 4.1554
                value: {index: 92, type: Single}
              - key: [4, 448, 256]
                speed: 9.30909
                value: {index: 95, type: Single}
              - key: [4, 448, 768]
                speed: 24.3327
                value: {index: 95, type: Single}
              - key: [4, 448, 1792]
                speed: 46.0859
                value: {index: 95, type: Single}
              - key: [4, 448, 3328]
                speed: 66.7989
                value: {index: 95, type: Single}
              - key: [4, 704, 128]
                speed: 6.40006
                value: {index: 92, type: Single}
              - key: [4, 704, 256]
                speed: 13.1743
                value: {index: 95, type: Single}
              - key: [4, 704, 768]
                speed: 35.0176
                value: {index: 98, type: Single}
              - key: [4, 704, 1792]
                speed: 67.1761
                value: {index: 95, type: Single}
              - key: [4, 704, 3328]
                speed: 97.0557
                value: {index: 95, type: Single}
              - key: [4, 1024, 128]
                speed: 9.60947
                value: {index: 92, type: Single}
              - key: [4, 1024, 256]
                speed: 17.9305
                value: {index: 94, type: Single}
              - key: [4, 1024, 768]
                speed: 48.0117
                value: {index: 95, type: Single}
              - key: [4, 1024, 1792]
                speed: 91.8428
                value: {index: 95, type: Single}
              - key: [4, 1024, 3328]
                speed: 133.433
                value: {index: 95, type: Single}
              - key: [4, 1408, 128]
                speed: 12.4122
                value: {index: 92, type: Single}
              - key: [4, 1408, 256]
                speed: 24.2237
                value: {index: 94, type: Single}
              - key: [4, 1408, 768]
                speed: 63.9092
                value: {index: 98, type: Single}
              - key: [4, 1408, 1792]
                speed: 120.494
                value: {index: 95, type: Single}
              - key: [4, 1408, 3328]
                speed: 174.066
                value: {index: 95, type: Single}
              - key: [4, 1856, 128]
                speed: 17.1407
                value: {index: 91, type: Single}
              - key: [4, 1856, 256]
                speed: 31.5077
                value: {index: 97, type: Single}
              - key: [4, 1856, 768]
                speed: 79.8101
                value: {index: 95, type: Single}
              - key: [4, 1856, 1792]
                speed: 146.777
                value: {index: 95, type: Single}
              - key: [4, 1856, 3328]
                speed: 205.209
                value: {index: 98, type: Single}
              - key: [4, 2368, 128]
                speed: 21.7437
                value: {index: 91, type: Single}
              - key: [4, 2368, 256]
                speed: 39.8297
                value: {index: 97, type: Single}
              - key: [4, 2368, 768]
                speed: 94.6214
                value: {index: 97, type: Single}
              - key: [4, 2368, 1792]
                speed: 166.672
                value: {index: 98, type: Single}
              - key: [4, 2368, 3328]
                speed: 205.978
                value: {index: 94, type: Single}
              - key: [4, 2944, 128]
                speed: 27.0715
                value: {index: 91, type: Single}
              - key: [4, 2944, 256]
                speed: 47.7607
                value: {index: 94, type: Single}
              - key: [4, 2944, 768]
                speed: 113.732
                value: {index: 94, type: Single}
              - key: [4, 2944, 1792]
                speed: 192.543
                value: {index: 94, type: Single}
              - key: [4, 2944, 3328]
                speed: 158.538
                value: {index: 93, type: Single}
              - key: [4, 3584, 128]
                speed: 33.0993
                value: {index: 91, type: Single}
              - key: [4, 3584, 256]
                speed: 57.201
                value: {index: 94, type: Single}
              - key: [4, 3584, 768]
                speed: 132.972
                value: {index: 97, type: Single}
              - key: [4, 3584, 1792]
                speed: 80.5842
                value: {index: 98, type: Single}
              - key: [4, 3584, 3328]
                speed: 68.3061
                value: {index: 93, type: Single}
              - key: [4, 4288, 128]
                speed: 39.261
                value: {index: 91, type: Single}
              - key: [4, 4288, 256]
                speed: 64.9543
                value: {index: 94, type: Single}
              - key: [4, 4288, 768]
                speed: 147.149
                value: {index: 97, type: Single}
              - key: [4, 4288, 1792]
                speed: 80.7835
                value: {index: 98, type: Single}
              - key: [4, 4288, 3328]
                speed: 64.8543
                value: {index: 98, type: Single}
              - key: [4, 5056, 128]
                speed: 46.2928
                value: {index: 91, type: Single}
              - key: [4, 5056, 256]
                speed: 73.8776
                value: {index: 97, type: Single}
              - key: [4, 5056, 768]
                speed: 165.235
                value: {index: 94, type: Single}
              - key: [4, 5056, 1792]
                speed: 80.0529
                value: {index: 95, type: Single}
              - key: [4, 5056, 3328]
                speed: 68.6962
                value: {index: 98, type: Single}
              - key: [4, 5888, 128]
                speed: 53.6802
                value: {index: 91, type: Single}
              - key: [4, 5888, 256]
                speed: 82.2777
                value: {index: 94, type: Single}
              - key: [4, 5888, 768]
                speed: 180.735
                value: {index: 97, type: Single}
              - key: [4, 5888, 1792]
                speed: 92.1515
                value: {index: 95, type: Single}
              - key: [4, 5888, 3328]
                speed: 69.9434
                value: {index: 95, type: Single}
              - key: [4, 6784, 128]
                speed: 62.1144
                value: {index: 91, type: Single}
              - key: [4, 6784, 256]
                speed: 92.084
                value: {index: 94, type: Single}
              - key: [4, 6784, 768]
                speed: 170.936
                value: {index: 94, type: Single}
              - key: [4, 6784, 1792]
                speed: 97.5212
                value: {index: 95, type: Single}
              - key: [4, 6784, 3328]
                speed: 70.3341
                value: {index: 98, type: Single}
              - key: [64, 4, 128]
                speed: 0.629192
                value: {index: 91, type: Single}
              - key: [64, 4, 256]
                speed: 1.76172
                value: {index: 97, type: Single}
              - key: [64, 4, 768]
                speed: 4.33439
                value: {index: 95, type: Single}
              - key: [64, 4, 1792]
                speed: 7.77019
                value: {index: 95, type: Single}
              - key: [64, 4, 3328]
                speed: 10.768
                value: {index: 95, type: Single}
              - key: [64, 64, 128]
                speed: 5.116
                value: {index: 71, type: Single}
              - key: [64, 64, 256]
                speed: 27.8877
                value: {index: 86, type: Single}
              - key: [64, 64, 768]
                speed: 42.7874
                value: {index: 86, type: Single}
              - key: [64, 64, 1792]
                speed: 88.9917
                value: {index: 73, type: Single}
              - key: [64, 64, 3328]
                speed: 139.438
                value: {index: 78, type: Single}
              - key: [64, 128, 128]
                speed: 10.1922
                value: {index: 71, type: Single}
              - key: [64, 128, 256]
                speed: 63.1672
                value: {index: 86, type: Single}
              - key: [64, 128, 768]
                speed: 88.8624
                value: {index: 73, type: Single}
              - key: [64, 128, 1792]
                speed: 165.914
                value: {index: 73, type: Single}
              - key: [64, 128, 3328]
                speed: 258.172
                value: {index: 78, type: Single}
              - key: [64, 256, 128]
                speed: 20.5281
                value: {index: 71, type: Single}
              - key: [64, 256, 256]
                speed: 126.64
                value: {index: 86, type: Single}
              - key: [64, 256, 768]
                speed: 171.898
                value: {index: 86, type: Single}
              - key: [64, 256, 1792]
                speed: 302.807
                value: {index: 73, type: Single}
              - key: [64, 256, 3328]
                speed: 436.068
                value: {index: 73, type: Single}
              - key: [64, 448, 128]
                speed: 38.3893
                value: {index: 71, type: Single}
              - key: [64, 448, 256]
                speed: 224.878
                value: {index: 86, type: Single}
              - key: [64, 448, 768]
                speed: 304.481
                value: {index: 86, type: Single}
              - key: [64, 448, 1792]
                speed: 466.076
                value: {index: 73, type: Single}
              - key: [64, 448, 3328]
                speed: 692.657
                value: {index: 73, type: Single}
              - key: [64, 704, 128]
                speed: 55.0723
                value: {index: 71, type: Single}
              - key: [64, 704, 256]
                speed: 348.259
                value: {index: 86, type: Single}
              - key: [64, 704, 768]
                speed: 477.415
                value: {index: 86, type: Single}
              - key: [64, 704, 1792]
                speed: 650.293
                value: {index: 73, type: Single}
              - key: [64, 704, 3328]
                speed: 936.229
                value: {index: 73, type: Single}
              - key: [64, 1024, 128]
                speed: 84.223
                value: {index: 71, type: Single}
              - key: [64, 1024, 256]
                speed: 496.955
                value: {index: 86, type: Single}
              - key: [64, 1024, 768]
                speed: 682.37
                value: {index: 86, type: Single}
              - key: [64, 1024, 1792]
                speed: 745.559
                value: {index: 73, type: Single}
              - key: [64, 1024, 3328]
                speed: 988.505
                value: {index: 73, type: Single}
              - key: [64, 1408, 128]
                speed: 117.505
                value: {index: 71, type: Single}
              - key: [64, 1408, 256]
                speed: 637.961
                value: {index: 86, type: Single}
              - key: [64, 1408, 768]
                speed: 900.182
                value: {index: 86, type: Single}
              - key: [64, 1408, 1792]
                speed: 922.536
                value: {index: 89, type: Single}
              - key: [64, 1408, 3328]
                speed: 1321.81
                value: {index: 73, type: Single}
              - key: [64, 1856, 128]
                speed: 151.801
                value: {index: 71, type: Single}
              - key: [64, 1856, 256]
                speed: 782.117
                value: {index: 86, type: Single}
              - key: [64, 1856, 768]
                speed: 1108.19
                value: {index: 86, type: Single}
              - key: [64, 1856, 1792]
                speed: 1191.56
                value: {index: 86, type: Single}
              - key: [64, 1856, 3328]
                speed: 1518.57
                value: {index: 87, type: Single}
              - key: [64, 2368, 128]
                speed: 187.681
                value: {index: 71, type: Single}
              - key: [64, 2368, 256]
                speed: 866.011
                value: {index: 86, type: Single}
              - key: [64, 2368, 768]
                speed: 1125.21
                value: {index: 86, type: Single}
              - key: [64, 2368, 1792]
                speed: 1248.08
                value: {index: 86, type: Single}
              - key: [64, 2368, 3328]
                speed: 1505.39
                value: {index: 83, type: Single}
              - key: [64, 2944, 128]
                speed: 225.648
                value: {index: 71, type: Single}
              - key: [64, 2944, 256]
                speed: 1057.77
                value: {index: 86, type: Single}
              - key: [64, 2944, 768]
                speed: 1396.75
                value: {index: 86, type: Single}
              - key: [64, 2944, 1792]
                speed: 1551.09
                value: {index: 86, type: Single}
              - key: [64, 2944, 3328]
                speed: 1807.68
                value: {index: 83, type: Single}
              - key: [64, 3584, 128]
                speed: 264.41
                value: {index: 71, type: Single}
              - key: [64, 3584, 256]
                speed: 1248.3
                value: {index: 86, type: Single}
              - key: [64, 3584, 768]
                speed: 1675.81
                value: {index: 86, type: Single}
              - key: [64, 3584, 1792]
                speed: 1869.05
                value: {index: 86, type: Single}
              - key: [64, 3584, 3328]
                speed: 2147.66
                value: {index: 83, type: Single}
              - key: [64, 4288, 128]
                speed: 319.107
                value: {index: 71, type: Single}
              - key: [64, 4288, 256]
                speed: 1149.45
                value: {index: 74, type: Single}
              - key: [64, 4288, 768]
                speed: 1534.39
                value: {index: 76, type: Single}
              - key: [64, 4288, 1792]
                speed: 1704.74
                value: {index: 76, type: Single}
              - key: [64, 4288, 3328]
                speed: 1916.79
                value: {index: 82, type: Single}
              - key: [64, 5056, 128]
                speed: 373.815
                value: {index: 71, type: Single}
              - key: [64, 5056, 256]
                speed: 1336.09
                value: {index: 86, type: Single}
              - key: [64, 5056, 768]
                speed: 1704.94
                value: {index: 76, type: Single}
              - key: [64, 5056, 1792]
                speed: 1963.24
                value: {index: 76, type: Single}
              - key: [64, 5056, 3328]
                speed: 2211.45
                value: {index: 82, type: Single}
              - key: [64, 5888, 128]
                speed: 416.965
                value: {index: 71, type: Single}
              - key: [64, 5888, 256]
                speed: 1345.83
                value: {index: 74, type: Single}
              - key: [64, 5888, 768]
                speed: 1845.71
                value: {index: 74, type: Single}
              - key: [64, 5888, 1792]
                speed: 2076.01
                value: {index: 74, type: Single}
              - key: [64, 5888, 3328]
                speed: 2227.37
                value: {index: 74, type: Single}
              - key: [64, 6784, 128]
                speed: 486.472
                value: {index: 71, type: Single}
              - key: [64, 6784, 256]
                speed: 1473.34
                value: {index: 80, type: Single}
              - key: [64, 6784, 768]
                speed: 1971.66
                value: {index: 76, type: Single}
              - key: [64, 6784, 1792]
                speed: 2248.16
                value: {index: 76, type: Single}
              - key: [64, 6784, 3328]
                speed: 2428.63
                value: {index: 76, type: Single}
              - key: [128, 4, 128]
                speed: 1.26812
                value: {index: 91, type: Single}
              - key: [128, 4, 256]
                speed: 3.25726
                value: {index: 97, type: Single}
              - key: [128, 4, 768]
                speed: 7.81431
                value: {index: 95, type: Single}
              - key: [128, 4, 1792]
                speed: 14.4808
                value: {index: 95, type: Single}
              - key: [128, 4, 3328]
                speed: 20.2464
                value: {index: 95, type: Single}
              - key: [128, 64, 128]
                speed: 10.3943
                value: {index: 71, type: Single}
              - key: [128, 64, 256]
                speed: 63.3198
                value: {index: 86, type: Single}
              - key: [128, 64, 768]
                speed: 92.9589
                value: {index: 73, type: Single}
              - key: [128, 64, 1792]
                speed: 172.14
                value: {index: 73, type: Single}
              - key: [128, 64, 3328]
                speed: 273.067
                value: {index: 78, type: Single}
              - key: [128, 128, 128]
                speed: 20.7228
                value: {index: 71, type: Single}
              - key: [128, 128, 256]
                speed: 126.334
                value: {index: 86, type: Single}
              - key: [128, 128, 768]
                speed: 172.463
                value: {index: 86, type: Single}
              - key: [128, 128, 1792]
                speed: 316.927
                value: {index: 73, type: Single}
              - key: [128, 128, 3328]
                speed: 453.174
                value: {index: 73, type: Single}
              - key: [128, 256, 128]
                speed: 41.1206
                value: {index: 71, type: Single}
              - key: [128, 256, 256]
                speed: 257.635
                value: {index: 86, type: Single}
              - key: [128, 256, 768]
                speed: 351.871
                value: {index: 86, type: Single}
              - key: [128, 256, 1792]
                speed: 517.998
                value: {index: 73, type: Single}
              - key: [128, 256, 3328]
                speed: 703.742
                value: {index: 73, type: Single}
              - key: [128, 448, 128]
                speed: 70.7951
                value: {index: 71, type: Single}
              - key: [128, 448, 256]
                speed: 436.907
                value: {index: 86, type: Single}
              - key: [128, 448, 768]
                speed: 592.575
                value: {index: 86, type: Single}
              - key: [128, 448, 1792]
                speed: 785.15
                value: {index: 73, type: Single}
              - key: [128, 448, 3328]
                speed: 1135.42
                value: {index: 73, type: Single}
              - key: [128, 704, 128]
                speed: 117.986
                value: {index: 71, type: Single}
              - key: [128, 704, 256]
                speed: 639.376
                value: {index: 86, type: Single}
              - key: [128, 704, 768]
                speed: 905.838
                value: {index: 86, type: Single}
              - key: [128, 704, 1792]
                speed: 998.767
                value: {index: 73, type: Single}
              - key: [128, 704, 3328]
                speed: 1338.33
                value: {index: 73, type: Single}
              - key: [128, 1024, 128]
                speed: 170.778
                value: {index: 71, type: Single}
              - key: [128, 1024, 256]
                speed: 773.857
                value: {index: 74, type: Single}
              - key: [128, 1024, 768]
                speed: 1057.39
                value: {index: 74, type: Single}
              - key: [128, 1024, 1792]
                speed: 1121.04
                value: {index: 73, type: Single}
              - key: [128, 1024, 3328]
                speed: 1398.46
                value: {index: 73, type: Single}
              - key: [128, 1408, 128]
                speed: 217.958
                value: {index: 71, type: Single}
              - key: [128, 1408, 256]
                speed: 1046.67
                value: {index: 74, type: Single}
              - key: [128, 1408, 768]
                speed: 1425.17
                value: {index: 74, type: Single}
              - key: [128, 1408, 1792]
                speed: 1509.17
                value: {index: 74, type: Single}
              - key: [128, 1408, 3328]
                speed: 1777.04
                value: {index: 90, type: Single}
              - key: [128, 1856, 128]
                speed: 277.654
                value: {index: 71, type: Single}
              - key: [128, 1856, 256]
                speed: 1303.98
                value: {index: 86, type: Single}
              - key: [128, 1856, 768]
                speed: 1784.55
                value: {index: 74, type: Single}
              - key: [128, 1856, 1792]
                speed: 1942.87
                value: {index: 74, type: Single}
              - key: [128, 1856, 3328]
                speed: 2233.92
                value: {index: 90, type: Single}
              - key: [128, 2368, 128]
                speed: 354.249
                value: {index: 71, type: Single}
              - key: [128, 2368, 256]
                speed: 1358.45
                value: {index: 74, type: Single}
              - key: [128, 2368, 768]
                speed: 1750.78
                value: {index: 74, type: Single}
              - key: [128, 2368, 1792]
                speed: 1878.67
                value: {index: 74, type: Single}
              - key: [128, 2368, 3328]
                speed: 2101.52
                value: {index: 88, type: Single}
              - key: [128, 2944, 128]
                speed: 413.533
                value: {index: 71, type: Single}
              - key: [128, 2944, 256]
                speed: 1627.34
                value: {index: 74, type: Single}
              - key: [128, 2944, 768]
                speed: 2139.32
                value: {index: 74, type: Single}
              - key: [128, 2944, 1792]
                speed: 2353.89
                value: {index: 74, type: Single}
              - key: [128, 2944, 3328]
                speed: 2425.53
                value: {index: 74, type: Single}
              - key: [128, 3584, 128]
                speed: 489.662
                value: {index: 71, type: Single}
              - key: [128, 3584, 256]
                speed: 2000.01
                value: {index: 74, type: Single}
              - key: [128, 3584, 768]
                speed: 2590.6
                value: {index: 74, type: Single}
              - key: [128, 3584, 1792]
                speed: 2830.09
                value: {index: 74, type: Single}
              - key: [128, 3584, 3328]
                speed: 2936.92
                value: {index: 74, type: Single}
              - key: [128, 4288, 128]
                speed: 530.624
                value: {index: 68, type: Single}
              - key: [128, 4288, 256]
                speed: 1638.4
                value: {index: 74, type: Single}
              - key: [128, 4288, 768]
                speed: 1943.6
                value: {index: 74, type: Single}
              - key: [128, 4288, 1792]
                speed: 2087.01
                value: {index: 74, type: Single}
              - key: [128, 4288, 3328]
                speed: 2361.69
                value: {index: 88, type: Single}
              - key: [128, 5056, 128]
                speed: 625.661
                value: {index: 68, type: Single}
              - key: [128, 5056, 256]
                speed: 1905.19
                value: {index: 74, type: Single}
              - key: [128, 5056, 768]
                speed: 2266.62
                value: {index: 74, type: Single}
              - key: [128, 5056, 1792]
                speed: 2436.81
                value: {index: 74, type: Single}
              - key: [128, 5056, 3328]
                speed: 2501.83
                value: {index: 74, type: Single}
              - key: [128, 5888, 128]
                speed: 671.416
                value: {index: 68, type: Single}
              - key: [128, 5888, 256]
                speed: 2113.69
                value: {index: 80, type: Single}
              - key: [128, 5888, 768]
                speed: 2484.61
                value: {index: 80, type: Single}
              - key: [128, 5888, 1792]
                speed: 2594.05
                value: {index: 80, type: Single}
              - key: [128, 5888, 3328]
                speed: 2641.32
                value: {index: 80, type: Single}
              - key: [128, 6784, 128]
                speed: 773.157
                value: {index: 68, type: Single}
              - key: [128, 6784, 256]
                speed: 2414.18
                value: {index: 80, type: Single}
              - key: [128, 6784, 768]
                speed: 2845.11
                value: {index: 80, type: Single}
              - key: [128, 6784, 1792]
                speed: 2990.64
                value: {index: 80, type: Single}
              - key: [128, 6784, 3328]
                speed: 3040.19
                value: {index: 80, type: Single}
              - key: [256, 4, 128]
                speed: 2.54018
                value: {index: 91, type: Single}
              - key: [256, 4, 256]
                speed: 5.82025
                value: {index: 98, type: Single}
              - key: [256, 4, 768]
                speed: 15.2409
                value: {index: 95, type: Single}
              - key: [256, 4, 1792]
                speed: 28.1789
                value: {index: 95, type: Single}
              - key: [256, 4, 3328]
                speed: 38.6205
                value: {index: 95, type: Single}
              - key: [256, 64, 128]
                speed: 20.7228
                value: {index: 71, type: Single}
              - key: [256, 64, 256]
                speed: 128.188
                value: {index: 86, type: Single}
              - key: [256, 64, 768]
                speed: 171.336
                value: {index: 86, type: Single}
              - key: [256, 64, 1792]
                speed: 318.855
                value: {index: 73, type: Single}
              - key: [256, 64, 3328]
                speed: 456.513
                value: {index: 73, type: Single}
              - key: [256, 128, 128]
                speed: 40.5796
                value: {index: 71, type: Single}
              - key: [256, 128, 256]
                speed: 256.376
                value: {index: 86, type: Single}
              - key: [256, 128, 768]
                speed: 349.914
                value: {index: 86, type: Single}
              - key: [256, 128, 1792]
                speed: 534.988
                value: {index: 73, type: Single}
              - key: [256, 128, 3328]
                speed: 711.084
                value: {index: 73, type: Single}
              - key: [256, 256, 128]
                speed: 81.984
                value: {index: 71, type: Single}
              - key: [256, 256, 256]
                speed: 488.847
                value: {index: 86, type: Single}
              - key: [256, 256, 768]
                speed: 682.37
                value: {index: 86, type: Single}
              - key: [256, 256, 1792]
                speed: 766.984
                value: {index: 86, type: Single}
              - key: [256, 256, 3328]
                speed: 1030.35
                value: {index: 84, type: Single}
              - key: [256, 448, 128]
                speed: 146.449
                value: {index: 71, type: Single}
              - key: [256, 448, 256]
                speed: 756.704
                value: {index: 86, type: Single}
              - key: [256, 448, 768]
                speed: 936.229
                value: {index: 74, type: Single}
              - key: [256, 448, 1792]
                speed: 1286.44
                value: {index: 86, type: Single}
              - key: [256, 448, 3328]
                speed: 1519.92
                value: {index: 87, type: Single}
              - key: [256, 704, 128]
                speed: 215.193
                value: {index: 71, type: Single}
              - key: [256, 704, 256]
                speed: 1035.4
                value: {index: 74, type: Single}
              - key: [256, 704, 768]
                speed: 1427.52
                value: {index: 76, type: Single}
              - key: [256, 704, 1792]
                speed: 1541.43
                value: {index: 74, type: Single}
              - key: [256, 704, 3328]
                speed: 1780.41
                value: {index: 90, type: Single}
              - key: [256, 1024, 128]
                speed: 305.707
                value: {index: 71, type: Single}
              - key: [256, 1024, 256]
                speed: 1200.09
                value: {index: 76, type: Single}
              - key: [256, 1024, 768]
                speed: 1534.5
                value: {index: 76, type: Single}
              - key: [256, 1024, 1792]
                speed: 1680.12
                value: {index: 76, type: Single}
              - key: [256, 1024, 3328]
                speed: 1737.05
                value: {index: 76, type: Single}
              - key: [256, 1408, 128]
                speed: 404.146
                value: {index: 71, type: Single}
              - key: [256, 1408, 256]
                speed: 1613.19
                value: {index: 76, type: Single}
              - key: [256, 1408, 768]
                speed: 2121.58
                value: {index: 76, type: Single}
              - key: [256, 1408, 1792]
                speed: 2297.68
                value: {index: 76, type: Single}
              - key: [256, 1408, 3328]
                speed: 2378.22
                value: {index: 76, type: Single}
              - key: [256, 1856, 128]
                speed: 505.464
                value: {index: 71, type: Single}
              - key: [256, 1856, 256]
                speed: 2082.79
                value: {index: 76, type: Single}
              - key: [256, 1856, 768]
                speed: 2710.22
                value: {index: 76, type: Single}
              - key: [256, 1856, 1792]
                speed: 3001.42
                value: {index: 76, type: Single}
              - key: [256, 1856, 3328]
                speed: 3101.47
                value: {index: 76, type: Single}
              - key: [256, 2368, 128]
                speed: 570.549
                value: {index: 68, type: Single}
              - key: [256, 2368, 256]
                speed: 1786.25
                value: {index: 74, type: Single}
              - key: [256, 2368, 768]
                speed: 2165.03
                value: {index: 74, type: Single}
              - key: [256, 2368, 1792]
                speed: 2316.85
                value: {index: 76, type: Single}
              - key: [256, 2368, 3328]
                speed: 2396.49
                value: {index: 90, type: Single}
              - key: [256, 2944, 128]
                speed: 680.893
                value: {index: 72, type: Single}
              - key: [256, 2944, 256]
                speed: 2117.41
                value: {index: 80, type: Single}
              - key: [256, 2944, 768]
                speed: 2469.34
                value: {index: 80, type: Single}
              - key: [256, 2944, 1792]
                speed: 2602.85
                value: {index: 80, type: Single}
              - key: [256, 2944, 3328]
                speed: 2641.1
                value: {index: 80, type: Single}
              - key: [256, 3584, 128]
                speed: 774.674
                value: {index: 68, type: Single}
              - key: [256, 3584, 256]
                speed: 2528.87
                value: {index: 80, type: Single}
              - key: [256, 3584, 768]
                speed: 3001.04
                value: {index: 80, type: Single}
              - key: [256, 3584, 1792]
                speed: 3158.95
                value: {index: 80, type: Single}
              - key: [256, 3584, 3328]
                speed: 3044.44
                value: {index: 76, type: Single}
              - key: [256, 4288, 128]
                speed: 796.176
                value: {index: 68, type: Single}
              - key: [256, 4288, 256]
                speed: 2234.56
                value: {index: 80, type: Single}
              - key: [256, 4288, 768]
                speed: 2538.1
                value: {index: 74, type: Single}
              - key: [256, 4288, 1792]
                speed: 2708.35
                value: {index: 76, type: Single}
              - key: [256, 4288, 3328]
                speed: 2778.39
                value: {index: 76, type: Single}
              - key: [256, 5056, 128]
                speed: 803.0
                value: {index: 68, type: Single}
              - key: [256, 5056, 256]
                speed: 2614.82
                value: {index: 80, type: Single}
              - key: [256, 5056, 768]
                speed: 2887.0
                value: {index: 80, type: Single}
              - key: [256, 5056, 1792]
                speed: 2979.77
                value: {index: 80, type: Single}
              - key: [256, 5056, 3328]
                speed: 2903.45
                value: {index: 76, type: Single}
              - key: [256, 5888, 128]
                speed: 1061.5
                value: {index: 68, type: Single}
              - key: [256, 5888, 256]
                speed: 2644.44
                value: {index: 85, type: Single}
              - key: [256, 5888, 768]
                speed: 2973.77
                value: {index: 79, type: Single}
              - key: [256, 5888, 1792]
                speed: 3087.43
                value: {index: 85, type: Single}
              - key: [256, 5888, 3328]
                speed: 3129.61
                value: {index: 85, type: Single}
              - key: [256, 6784, 128]
                speed: 1206.57
                value: {index: 68, type: Single}
              - key: [256, 6784, 256]
                speed: 2962.39
                value: {index: 79, type: Single}
              - key: [256, 6784, 768]
                speed: 3396.28
                value: {index: 79, type: Single}
              - key: [256, 6784, 1792]
                speed: 3547.2
                value: {index: 85, type: Single}
              - key: [256, 6784, 3328]
                speed: 3599.03
                value: {index: 85, type: Single}
              - key: [448, 4, 128]
                speed: 4.40434
                value: {index: 91, type: Single}
              - key: [448, 4, 256]
                speed: 9.40066
                value: {index: 95, type: Single}
              - key: [448, 4, 768]
                speed: 24.7885
                value: {index: 95, type: Single}
              - key: [448, 4, 1792]
                speed: 46.2452
                value: {index: 95, type: Single}
              - key: [448, 4, 3328]
                speed: 64.6553
                value: {index: 95, type: Single}
              - key: [448, 64, 128]
                speed: 36.2363
                value: {index: 71, type: Single}
              - key: [448, 64, 256]
                speed: 221.619
                value: {index: 86, type: Single}
              - key: [448, 64, 768]
                speed: 303.14
                value: {index: 86, type: Single}
              - key: [448, 64, 1792]
                speed: 483.624
                value: {index: 73, type: Single}
              - key: [448, 64, 3328]
                speed: 715.94
                value: {index: 73, type: Single}
              - key: [448, 128, 128]
                speed: 70.6316
                value: {index: 71, type: Single}
              - key: [448, 128, 256]
                speed: 440.05
                value: {index: 86, type: Single}
              - key: [448, 128, 768]
                speed: 594.495
                value: {index: 86, type: Single}
              - key: [448, 128, 1792]
                speed: 803.821
                value: {index: 73, type: Single}
              - key: [448, 128, 3328]
                speed: 1125.77
                value: {index: 73, type: Single}
              - key: [448, 256, 128]
                speed: 147.746
                value: {index: 71, type: Single}
              - key: [448, 256, 256]
                speed: 752.052
                value: {index: 86, type: Single}
              - key: [448, 256, 768]
                speed: 1128.08
                value: {index: 86, type: Single}
              - key: [448, 256, 1792]
                speed: 1300.77
                value: {index: 86, type: Single}
              - key: [448, 256, 3328]
                speed: 1548.03
                value: {index: 84, type: Single}
              - key: [448, 448, 128]
                speed: 244.388
                value: {index: 71, type: Single}
              - key: [448, 448, 256]
                speed: 1116.96
                value: {index: 76, type: Single}
              - key: [448, 448, 768]
                speed: 1583.2
                value: {index: 76, type: Single}
              - key: [448, 448, 1792]
                speed: 1731.14
                value: {index: 74, type: Single}
              - key: [448, 448, 3328]
                speed: 1923.8
                value: {index: 90, type: Single}
              - key: [448, 704, 128]
                speed: 373.521
                value: {index: 71, type: Single}
              - key: [448, 704, 256]
                speed: 1433.6
                value: {index: 74, type: Single}
              - key: [448, 704, 768]
                speed: 1848.45
                value: {index: 76, type: Single}
              - key: [448, 704, 1792]
                speed: 2004.76
                value: {index: 76, type: Single}
              - key: [448, 704, 3328]
                speed: 2213.28
                value: {index: 82, type: Single}
              - key: [448, 1024, 128]
                speed: 515.452
                value: {index: 71, type: Single}
              - key: [448, 1024, 256]
                speed: 2019.27
                value: {index: 76, type: Single}
              - key: [448, 1024, 768]
                speed: 2659.43
                value: {index: 76, type: Single}
              - key: [448, 1024, 1792]
                speed: 2902.84
                value: {index: 76, type: Single}
              - key: [448, 1024, 3328]
                speed: 3007.74
                value: {index: 76, type: Single}
              - key: [448, 1408, 128]
                speed: 635.951
                value: {index: 68, type: Single}
              - key: [448, 1408, 256]
                speed: 1898.88
                value: {index: 76, type: Single}
              - key: [448, 1408, 768]
                speed: 2334.44
                value: {index: 76, type: Single}
              - key: [448, 1408, 1792]
                speed: 2471.5
                value: {index: 76, type: Single}
              - key: [448, 1408, 3328]
                speed: 2535.08
                value: {index: 76, type: Single}
              - key: [448, 1856, 128]
                speed: 845.223
                value: {index: 68, type: Single}
              - key: [448, 1856, 256]
                speed: 2379.93
                value: {index: 80, type: Single}
              - key: [448, 1856, 768]
                speed: 2740.23
                value: {index: 80, type: Single}
              - key: [448, 1856, 1792]
                speed: 2866.32
                value: {index: 80, type: Single}
              - key: [448, 1856, 3328]
                speed: 2914.06
                value: {index: 80, type: Single}
              - key: [448, 2368, 128]
                speed: 809.434
                value: {index: 68, type: Single}
              - key: [448, 2368, 256]
                speed: 2156.78
                value: {index: 80, type: Single}
              - key: [448, 2368, 768]
                speed: 2550.54
                value: {index: 76, type: Single}
              - key: [448, 2368, 1792]
                speed: 2683.31
                value: {index: 76, type: Single}
              - key: [448, 2368, 3328]
                speed: 2746.92
                value: {index: 76, type: Single}
              - key: [448, 2944, 128]
                speed: 1033.93
                value: {index: 68, type: Single}
              - key: [448, 2944, 256]
                speed: 2674.6
                value: {index: 80, type: Single}
              - key: [448, 2944, 768]
                speed: 2944.55
                value: {index: 80, type: Single}
              - key: [448, 2944, 1792]
                speed: 2911.28
                value: {index: 76, type: Single}
              - key: [448, 2944, 3328]
                speed: 2964.17
                value: {index: 76, type: Single}
              - key: [448, 3584, 128]
                speed: 1277.48
                value: {index: 68, type: Single}
              - key: [448, 3584, 256]
                speed: 2821.54
                value: {index: 79, type: Single}
              - key: [448, 3584, 768]
                speed: 3156.68
                value: {index: 79, type: Single}
              - key: [448, 3584, 1792]
                speed: 3281.29
                value: {index: 79, type: Single}
              - key: [448, 3584, 3328]
                speed: 3321.78
                value: {index: 79, type: Single}
              - key: [448, 4288, 128]
                speed: 1477.0
                value: {index: 68, type: Single}
              - key: [448, 4288, 256]
                speed: 3188.42
                value: {index: 79, type: Single}
              - key: [448, 4288, 768]
                speed: 3691.32
                value: {index: 79, type: Single}
              - key: [448, 4288, 1792]
                speed: 3867.95
                value: {index: 79, type: Single}
              - key: [448, 4288, 3328]
                speed: 3956.37
                value: {index: 79, type: Single}
              - key: [448, 5056, 128]
                speed: 1412.92
                value: {index: 68, type: Single}
              - key: [448, 5056, 256]
                speed: 2941.67
                value: {index: 80, type: Single}
              - key: [448, 5056, 768]
                speed: 3044.65
                value: {index: 80, type: Single}
              - key: [448, 5056, 1792]
                speed: 3051.36
                value: {index: 76, type: Single}
              - key: [448, 5056, 3328]
                speed: 3099.6
                value: {index: 76, type: Single}
              - key: [448, 5888, 128]
                speed: 1622.03
                value: {index: 68, type: Single}
              - key: [448, 5888, 256]
                speed: 2938.06
                value: {index: 80, type: Single}
              - key: [448, 5888, 768]
                speed: 3235.36
                value: {index: 79, type: Single}
              - key: [448, 5888, 1792]
                speed: 3337.89
                value: {index: 79, type: Single}
              - key: [448, 5888, 3328]
                speed: 3315.82
                value: {index: 79, type: Single}
              - key: [448, 6784, 128]
                speed: 1508.3
                value: {index: 68, type: Single}
              - key: [448, 6784, 256]
                speed: 2944.46
                value: {index: 80, type: Single}
              - key: [448, 6784, 768]
                speed: 3178.98
                value: {index: 81, type: Single}
              - key: [448, 6784, 1792]
                speed: 3359.6
                value: {index: 81, type: Single}
              - key: [448, 6784, 3328]
                speed: 3429.41
                value: {index: 81, type: Single}
              - key: [704, 4, 128]
                speed: 6.76523
                value: {index: 91, type: Single}
              - key: [704, 4, 256]
                speed: 13.7786
                value: {index: 95, type: Single}
              - key: [704, 4, 768]
                speed: 36.0448
                value: {index: 95, type: Single}
              - key: [704, 4, 1792]
                speed: 67.4635
                value: {index: 95, type: Single}
              - key: [704, 4, 3328]
                speed: 95.7072
                value: {index: 95, type: Single}
              - key: [704, 64, 128]
                speed: 56.4523
                value: {index: 71, type: Single}
              - key: [704, 64, 256]
                speed: 344.103
                value: {index: 86, type: Single}
              - key: [704, 64, 768]
                speed: 471.688
                value: {index: 86, type: Single}
              - key: [704, 64, 1792]
                speed: 707.256
                value: {index: 73, type: Single}
              - key: [704, 64, 3328]
                speed: 956.291
                value: {index: 73, type: Single}
              - key: [704, 128, 128]
                speed: 113.259
                value: {index: 71, type: Single}
              - key: [704, 128, 256]
                speed: 629.604
                value: {index: 86, type: Single}
              - key: [704, 128, 768]
                speed: 917.365
                value: {index: 86, type: Single}
              - key: [704, 128, 1792]
                speed: 1021.51
                value: {index: 73, type: Single}
              - key: [704, 128, 3328]
                speed: 1347.95
                value: {index: 73, type: Single}
              - key: [704, 256, 128]
                speed: 225.104
                value: {index: 71, type: Single}
              - key: [704, 256, 256]
                speed: 1028.02
                value: {index: 76, type: Single}
              - key: [704, 256, 768]
                speed: 1426.34
                value: {index: 74, type: Single}
              - key: [704, 256, 1792]
                speed: 1603.9
                value: {index: 76, type: Single}
              - key: [704, 256, 3328]
                speed: 1771.58
                value: {index: 90, type: Single}
              - key: [704, 448, 128]
                speed: 379.134
                value: {index: 71, type: Single}
              - key: [704, 448, 256]
                speed: 1433.6
                value: {index: 76, type: Single}
              - key: [704, 448, 768]
                speed: 1858.66
                value: {index: 76, type: Single}
              - key: [704, 448, 1792]
                speed: 2007.04
                value: {index: 76, type: Single}
              - key: [704, 448, 3328]
                speed: 2175.48
                value: {index: 82, type: Single}
              - key: [704, 704, 128]
                speed: 486.494
                value: {index: 68, type: Single}
              - key: [704, 704, 256]
                speed: 1516.22
                value: {index: 76, type: Single}
              - key: [704, 704, 768]
                speed: 1833.49
                value: {index: 76, type: Single}
              - key: [704, 704, 1792]
                speed: 1908.51
                value: {index: 74, type: Single}
              - key: [704, 704, 3328]
                speed: 2221.25
                value: {index: 75, type: Single}
              - key: [704, 1024, 128]
                speed: 726.344
                value: {index: 68, type: Single}
              - key: [704, 1024, 256]
                speed: 2139.95
                value: {index: 76, type: Single}
              - key: [704, 1024, 768]
                speed: 2657.68
                value: {index: 76, type: Single}
              - key: [704, 1024, 1792]
                speed: 2814.72
                value: {index: 76, type: Single}
              - key: [704, 1024, 3328]
                speed: 2876.39
                value: {index: 76, type: Single}
              - key: [704, 1408, 128]
                speed: 818.777
                value: {index: 68, type: Single}
              - key: [704, 1408, 256]
                speed: 2047.74
                value: {index: 80, type: Single}
              - key: [704, 1408, 768]
                speed: 2392.71
                value: {index: 76, type: Single}
              - key: [704, 1408, 1792]
                speed: 2501.25
                value: {index: 76, type: Single}
              - key: [704, 1408, 3328]
                speed: 2683.72
                value: {index: 82, type: Single}
              - key: [704, 1856, 128]
                speed: 1031.38
                value: {index: 68, type: Single}
              - key: [704, 1856, 256]
                speed: 2648.0
                value: {index: 80, type: Single}
              - key: [704, 1856, 768]
                speed: 2918.47
                value: {index: 80, type: Single}
              - key: [704, 1856, 1792]
                speed: 2897.86
                value: {index: 76, type: Single}
              - key: [704, 1856, 3328]
                speed: 2947.22
                value: {index: 76, type: Single}
              - key: [704, 2368, 128]
                speed: 1317.84
                value: {index: 68, type: Single}
              - key: [704, 2368, 256]
                speed: 2813.62
                value: {index: 85, type: Single}
              - key: [704, 2368, 768]
                speed: 3220.1
                value: {index: 85, type: Single}
              - key: [704, 2368, 1792]
                speed: 3388.3
                value: {index: 85, type: Single}
              - key: [704, 2368, 3328]
                speed: 3424.87
                value: {index: 79, type: Single}
              - key: [704, 2944, 128]
                speed: 1285.32
                value: {index: 68, type: Single}
              - key: [704, 2944, 256]
                speed: 2691.66
                value: {index: 80, type: Single}
              - key: [704, 2944, 768]
                speed: 2922.98
                value: {index: 76, type: Single}
              - key: [704, 2944, 1792]
                speed: 3059.56
                value: {index: 76, type: Single}
              - key: [704, 2944, 3328]
                speed: 3111.93
                value: {index: 76, type: Single}
              - key: [704, 3584, 128]
                speed: 1544.97
                value: {index: 68, type: Single}
              - key: [704, 3584, 256]
                speed: 2819.15
                value: {index: 80, type: Single}
              - key: [704, 3584, 768]
                speed: 3101.42
                value: {index: 79, type: Single}
              - key: [704, 3584, 1792]
                speed: 3194.21
                value: {index: 79, type: Single}
              - key: [704, 3584, 3328]
                speed: 3103.29
                value: {index: 76, type: Single}
              - key: [704, 4288, 128]
                speed: 1489.36
                value: {index: 68, type: Single}
              - key: [704, 4288, 256]
                speed: 2933.5
                value: {index: 80, type: Single}
              - key: [704, 4288, 768]
                speed: 3163.07
                value: {index: 81, type: Single}
              - key: [704, 4288, 1792]
                speed: 3343.39
                value: {index: 81, type: Single}
              - key: [704, 4288, 3328]
                speed: 3408.24
                value: {index: 81, type: Single}
              - key: [704, 5056, 128]
                speed: 1729.98
                value: {index: 68, type: Single}
              - key: [704, 5056, 256]
                speed: 3112.92
                value: {index: 79, type: Single}
              - key: [704, 5056, 768]
                speed: 3712.17
                value: {index: 81, type: Single}
              - key: [704, 5056, 1792]
                speed: 3933.26
                value: {index: 81, type: Single}
              - key: [704, 5056, 3328]
                speed: 4014.32
                value: {index: 81, type: Single}
              - key: [704, 5888, 128]
                speed: 1701.45
                value: {index: 68, type: Single}
              - key: [704, 5888, 256]
                speed: 3163.48
                value: {index: 80, type: Single}
              - key: [704, 5888, 768]
                speed: 3278.42
                value: {index: 80, type: Single}
              - key: [704, 5888, 1792]
                speed: 3308.8
                value: {index: 76, type: Single}
              - key: [704, 5888, 3328]
                speed: 3277.49
                value: {index: 76, type: Single}
              - key: [704, 6784, 128]
                speed: 1932.6
                value: {index: 68, type: Single}
              - key: [704, 6784, 256]
                speed: 3347.13
                value: {index: 79, type: Single}
              - key: [704, 6784, 768]
                speed: 3707.07
                value: {index: 79, type: Single}
              - key: [704, 6784, 1792]
                speed: 3783.06
                value: {index: 79, type: Single}
              - key: [704, 6784, 3328]
                speed: 3358.39
                value: {index: 81, type: Single}
              - key: [1024, 4, 128]
                speed: 9.72353
                value: {index: 91, type: Single}
              - key: [1024, 4, 256]
                speed: 18.2046
                value: {index: 98, type: Single}
              - key: [1024, 4, 768]
                speed: 48.0117
                value: {index: 98, type: Single}
              - key: [1024, 4, 1792]
                speed: 91.8422
                value: {index: 98, type: Single}
              - key: [1024, 4, 3328]
                speed: 131.477
                value: {index: 95, type: Single}
              - key: [1024, 64, 128]
                speed: 82.7605
                value: {index: 71, type: Single}
              - key: [1024, 64, 256]
                speed: 480.998
                value: {index: 86, type: Single}
              - key: [1024, 64, 768]
                speed: 682.37
                value: {index: 86, type: Single}
              - key: [1024, 64, 1792]
                speed: 720.671
                value: {index: 73, type: Single}
              - key: [1024, 64, 3328]
                speed: 967.458
                value: {index: 73, type: Single}
              - key: [1024, 128, 128]
                speed: 162.444
                value: {index: 71, type: Single}
              - key: [1024, 128, 256]
                speed: 773.857
                value: {index: 74, type: Single}
              - key: [1024, 128, 768]
                speed: 1056.5
                value: {index: 74, type: Single}
              - key: [1024, 128, 1792]
                speed: 1127.5
                value: {index: 74, type: Single}
              - key: [1024, 128, 3328]
                speed: 1301.34
                value: {index: 90, type: Single}
              - key: [1024, 256, 128]
                speed: 303.276
                value: {index: 71, type: Single}
              - key: [1024, 256, 256]
                speed: 1178.18
                value: {index: 76, type: Single}
              - key: [1024, 256, 768]
                speed: 1531.7
                value: {index: 76, type: Single}
              - key: [1024, 256, 1792]
                speed: 1670.56
                value: {index: 76, type: Single}
              - key: [1024, 256, 3328]
                speed: 1718.16
                value: {index: 76, type: Single}
              - key: [1024, 448, 128]
                speed: 474.162
                value: {index: 68, type: Single}
              - key: [1024, 448, 256]
                speed: 1965.2
                value: {index: 74, type: Single}
              - key: [1024, 448, 768]
                speed: 2586.04
                value: {index: 76, type: Single}
              - key: [1024, 448, 1792]
                speed: 2864.0
                value: {index: 76, type: Single}
              - key: [1024, 448, 3328]
                speed: 2980.96
                value: {index: 76, type: Single}
              - key: [1024, 704, 128]
                speed: 685.751
                value: {index: 68, type: Single}
              - key: [1024, 704, 256]
                speed: 2036.07
                value: {index: 74, type: Single}
              - key: [1024, 704, 768]
                speed: 2545.27
                value: {index: 74, type: Single}
              - key: [1024, 704, 1792]
                speed: 2693.14
                value: {index: 74, type: Single}
              - key: [1024, 704, 3328]
                speed: 2523.29
                value: {index: 80, type: Single}
              - key: [1024, 1024, 128]
                speed: 732.95
                value: {index: 68, type: Single}
              - key: [1024, 1024, 256]
                speed: 2131.79
                value: {index: 80, type: Single}
              - key: [1024, 1024, 768]
                speed: 2384.26
                value: {index: 74, type: Single}
              - key: [1024, 1024, 1792]
                speed: 2559.45
                value: {index: 76, type: Single}
              - key: [1024, 1024, 3328]
                speed: 2427.02
                value: {index: 80, type: Single}
              - key: [1024, 1408, 128]
                speed: 937.37
                value: {index: 68, type: Single}
              - key: [1024, 1408, 256]
                speed: 2816.69
                value: {index: 80, type: Single}
              - key: [1024, 1408, 768]
                speed: 3197.32
                value: {index: 80, type: Single}
              - key: [1024, 1408, 1792]
                speed: 3301.59
                value: {index: 80, type: Single}
              - key: [1024, 1408, 3328]
                speed: 2988.92
                value: {index: 85, type: Single}
              - key: [1024, 1856, 128]
                speed: 1165.53
                value: {index: 68, type: Single}
              - key: [1024, 1856, 256]
                speed: 3247.06
                value: {index: 85, type: Single}
              - key: [1024, 1856, 768]
                speed: 3703.86
                value: {index: 85, type: Single}
              - key: [1024, 1856, 1792]
                speed: 3870.2
                value: {index: 85, type: Single}
              - key: [1024, 1856, 3328]
                speed: 3913.99
                value: {index: 85, type: Single}
              - key: [1024, 2368, 128]
                speed: 1177.11
                value: {index: 68, type: Single}
              - key: [1024, 2368, 256]
                speed: 3098.83
                value: {index: 80, type: Single}
              - key: [1024, 2368, 768]
                speed: 3324.06
                value: {index: 80, type: Single}
              - key: [1024, 2368, 1792]
                speed: 3211.89
                value: {index: 80, type: Single}
              - key: [1024, 2368, 3328]
                speed: 3106.56
                value: {index: 85, type: Single}
              - key: [1024, 2944, 128]
                speed: 1258.73
                value: {index: 68, type: Single}
              - key: [1024, 2944, 256]
                speed: 2892.62
                value: {index: 80, type: Single}
              - key: [1024, 2944, 768]
                speed: 3151.21
                value: {index: 81, type: Single}
              - key: [1024, 2944, 1792]
                speed: 3339.02
                value: {index: 81, type: Single}
              - key: [1024, 2944, 3328]
                speed: 3405.1
                value: {index: 81, type: Single}
              - key: [1024, 3584, 128]
                speed: 1464.35
                value: {index: 68, type: Single}
              - key: [1024, 3584, 256]
                speed: 3302.6
                value: {index: 85, type: Single}
              - key: [1024, 3584, 768]
                speed: 3754.09
                value: {index: 81, type: Single}
              - key: [1024, 3584, 1792]
                speed: 4012.71
                value: {index: 81, type: Single}
              - key: [1024, 3584, 3328]
                speed: 4105.76
                value: {index: 81, type: Single}
              - key: [1024, 4288, 128]
                speed: 1517.71
                value: {index: 68, type: Single}
              - key: [1024, 4288, 256]
                speed: 3308.43
                value: {index: 80, type: Single}
              - key: [1024, 4288, 768]
                speed: 3441.89
                value: {index: 80, type: Single}
              - key: [1024, 4288, 1792]
                speed: 3493.15
                value: {index: 85, type: Single}
              - key: [1024, 4288, 3328]
                speed: 3516.59
                value: {index: 85, type: Single}
              - key: [1024, 5056, 128]
                speed: 1562.97
                value: {index: 68, type: Single}
              - key: [1024, 5056, 256]
                speed: 3265.82
                value: {index: 80, type: Single}
              - key: [1024, 5056, 768]
                speed: 3528.76
                value: {index: 85, type: Single}
              - key: [1024, 5056, 1792]
                speed: 3591.48
                value: {index: 85, type: Single}
              - key: [1024, 5056, 3328]
                speed: 3615.11
                value: {index: 85, type: Single}
              - key: [1024, 5888, 128]
                speed: 1585.36
                value: {index: 68, type: Single}
              - key: [1024, 5888, 256]
                speed: 3240.48
                value: {index: 80, type: Single}
              - key: [1024, 5888, 768]
                speed: 3432.04
                value: {index: 85, type: Single}
              - key: [1024, 5888, 1792]
                speed: 3500.51
                value: {index: 85, type: Single}
              - key: [1024, 5888, 3328]
                speed: 3504.78
                value: {index: 79, type: Single}
              - key: [1024, 6784, 128]
                speed: 1645.92
                value: {index: 68, type: Single}
              - key: [1024, 6784, 256]
                speed: 3329.81
                value: {index: 85, type: Single}
              - key: [1024, 6784, 768]
                speed: 3655.82
                value: {index: 81, type: Single}
              - key: [1024, 6784, 1792]
                speed: 3848.18
                value: {index: 81, type: Single}
              - key: [1024, 6784, 3328]
                speed: 3923.21
                value: {index: 81, type: Single}
              - key: [1408, 4, 128]
                speed: 13.213
                value: {index: 91, type: Single}
              - key: [1408, 4, 256]
                speed: 24.9618
                value: {index: 94, type: Single}
              - key: [1408, 4, 768]
                speed: 66.7496
                value: {index: 95, type: Single}
              - key: [1408, 4, 1792]
                speed: 124.17
                value: {index: 95, type: Single}
              - key: [1408, 4, 3328]
                speed: 179.123
                value: {index: 95, type: Single}
              - key: [1408, 64, 128]
                speed: 112.905
                value: {index: 71, type: Single}
              - key: [1408, 64, 256]
                speed: 636.553
                value: {index: 86, type: Single}
              - key: [1408, 64, 768]
                speed: 909.648
                value: {index: 86, type: Single}
              - key: [1408, 64, 1792]
                speed: 1052.4
                value: {index: 73, type: Single}
              - key: [1408, 64, 3328]
                speed: 1406.1
                value: {index: 84, type: Single}
              - key: [1408, 128, 128]
                speed: 226.697
                value: {index: 71, type: Single}
              - key: [1408, 128, 256]
                speed: 1028.02
                value: {index: 74, type: Single}
              - key: [1408, 128, 768]
                speed: 1432.24
                value: {index: 76, type: Single}
              - key: [1408, 128, 1792]
                speed: 1508.6
                value: {index: 74, type: Single}
              - key: [1408, 128, 3328]
                speed: 1769.49
                value: {index: 83, type: Single}
              - key: [1408, 256, 128]
                speed: 427.514
                value: {index: 71, type: Single}
              - key: [1408, 256, 256]
                speed: 1622.27
                value: {index: 76, type: Single}
              - key: [1408, 256, 768]
                speed: 2095.88
                value: {index: 76, type: Single}
              - key: [1408, 256, 1792]
                speed: 2301.61
                value: {index: 76, type: Single}
              - key: [1408, 256, 3328]
                speed: 2415.76
                value: {index: 88, type: Single}
              - key: [1408, 448, 128]
                speed: 609.453
                value: {index: 72, type: Single}
              - key: [1408, 448, 256]
                speed: 1845.07
                value: {index: 74, type: Single}
              - key: [1408, 448, 768]
                speed: 2289.42
                value: {index: 76, type: Single}
              - key: [1408, 448, 1792]
                speed: 2447.1
                value: {index: 76, type: Single}
              - key: [1408, 448, 3328]
                speed: 2385.51
                value: {index: 88, type: Single}
              - key: [1408, 704, 128]
                speed: 756.666
                value: {index: 68, type: Single}
              - key: [1408, 704, 256]
                speed: 2046.41
                value: {index: 80, type: Single}
              - key: [1408, 704, 768]
                speed: 2359.49
                value: {index: 76, type: Single}
              - key: [1408, 704, 1792]
                speed: 2476.98
                value: {index: 76, type: Single}
              - key: [1408, 704, 3328]
                speed: 2643.46
                value: {index: 88, type: Single}
              - key: [1408, 1024, 128]
                speed: 1059.17
                value: {index: 68, type: Single}
              - key: [1408, 1024, 256]
                speed: 2912.71
                value: {index: 80, type: Single}
              - key: [1408, 1024, 768]
                speed: 3216.64
                value: {index: 80, type: Single}
              - key: [1408, 1024, 1792]
                speed: 3155.77
                value: {index: 76, type: Single}
              - key: [1408, 1024, 3328]
                speed: 2991.75
                value: {index: 79, type: Single}
              - key: [1408, 1408, 128]
                speed: 1181.8
                value: {index: 68, type: Single}
              - key: [1408, 1408, 256]
                speed: 2590.4
                value: {index: 80, type: Single}
              - key: [1408, 1408, 768]
                speed: 2771.47
                value: {index: 76, type: Single}
              - key: [1408, 1408, 1792]
                speed: 2899.21
                value: {index: 76, type: Single}
              - key: [1408, 1408, 3328]
                speed: 2886.11
                value: {index: 88, type: Single}
              - key: [1408, 1856, 128]
                speed: 1554.93
                value: {index: 68, type: Single}
              - key: [1408, 1856, 256]
                speed: 2902.6
                value: {index: 80, type: Single}
              - key: [1408, 1856, 768]
                speed: 3209.72
                value: {index: 85, type: Single}
              - key: [1408, 1856, 1792]
                speed: 3285.08
                value: {index: 79, type: Single}
              - key: [1408, 1856, 3328]
                speed: 3334.09
                value: {index: 79, type: Single}
              - key: [1408, 2368, 128]
                speed: 1575.96
                value: {index: 68, type: Single}
              - key: [1408, 2368, 256]
                speed: 3201.1
                value: {index: 80, type: Single}
              - key: [1408, 2368, 768]
                speed: 3515.8
                value: {index: 81, type: Single}
              - key: [1408, 2368, 1792]
                speed: 3702.04
                value: {index: 81, type: Single}
              - key: [1408, 2368, 3328]
                speed: 3768.93
                value: {index: 81, type: Single}
              - key: [1408, 2944, 128]
                speed: 1623.96
                value: {index: 68, type: Single}
              - key: [1408, 2944, 256]
                speed: 3176.36
                value: {index: 80, type: Single}
              - key: [1408, 2944, 768]
                speed: 3259.36
                value: {index: 80, type: Single}
              - key: [1408, 2944, 1792]
                speed: 3301.5
                value: {index: 79, type: Single}
              - key: [1408, 2944, 3328]
                speed: 3292.32
                value: {index: 79, type: Single}
              - key: [1408, 3584, 128]
                speed: 1707.71
                value: {index: 68, type: Single}
              - key: [1408, 3584, 256]
                speed: 3192.58
                value: {index: 80, type: Single}
              - key: [1408, 3584, 768]
                speed: 3438.44
                value: {index: 85, type: Single}
              - key: [1408, 3584, 1792]
                speed: 3512.42
                value: {index: 81, type: Single}
              - key: [1408, 3584, 3328]
                speed: 3560.83
                value: {index: 81, type: Single}
              - key: [1408, 4288, 128]
                speed: 1802.58
                value: {index: 68, type: Single}
              - key: [1408, 4288, 256]
                speed: 3255.82
                value: {index: 80, type: Single}
              - key: [1408, 4288, 768]
                speed: 3437.32
                value: {index: 85, type: Single}
              - key: [1408, 4288, 1792]
                speed: 3490.16
                value: {index: 79, type: Single}
              - key: [1408, 4288, 3328]
                speed: 3490.96
                value: {index: 79, type: Single}
              - key: [1408, 5056, 128]
                speed: 1867.24
                value: {index: 68, type: Single}
              - key: [1408, 5056, 256]
                speed: 3354.98
                value: {index: 80, type: Single}
              - key: [1408, 5056, 768]
                speed: 3826.91
                value: {index: 81, type: Single}
              - key: [1408, 5056, 1792]
                speed: 3986.16
                value: {index: 81, type: Single}
              - key: [1408, 5056, 3328]
                speed: 4045.69
                value: {index: 81, type: Single}
              - key: [1408, 5888, 128]
                speed: 1957.86
                value: {index: 68, type: Single}
              - key: [1408, 5888, 256]
                speed: 3474.2
                value: {index: 79, type: Single}
              - key: [1408, 5888, 768]
                speed: 3719.54
                value: {index: 79, type: Single}
              - key: [1408, 5888, 1792]
                speed: 3776.06
                value: {index: 79, type: Single}
              - key: [1408, 5888, 3328]
                speed: 3778.27
                value: {index: 79, type: Single}
              - key: [1408, 6784, 128]
                speed: 2040.18
                value: {index: 68, type: Single}
              - key: [1408, 6784, 256]
                speed: 3683.98
                value: {index: 79, type: Single}
              - key: [1408, 6784, 768]
                speed: 3931.66
                value: {index: 79, type: Single}
              - key: [1408, 6784, 1792]
                speed: 3986.03
                value: {index: 79, type: Single}
              - key: [1408, 6784, 3328]
                speed: 3976.21
                value: {index: 79, type: Single}
              - key: [1856, 4, 128]
                speed: 17.0914
                value: {index: 91, type: Single}
              - key: [1856, 4, 256]
                speed: 32.3662
                value: {index: 97, type: Single}
              - key: [1856, 4, 768]
                speed: 83.9463
                value: {index: 95, type: Single}
              - key: [1856, 4, 1792]
                speed: 152.287
                value: {index: 95, type: Single}
              - key: [1856, 4, 3328]
                speed: 206.72
                value: {index: 95, type: Single}
              - key: [1856, 64, 128]
                speed: 145.413
                value: {index: 71, type: Single}
              - key: [1856, 64, 256]
                speed: 796.874
                value: {index: 86, type: Single}
              - key: [1856, 64, 768]
                speed: 1144.91
                value: {index: 86, type: Single}
              - key: [1856, 64, 1792]
                speed: 1240.45
                value: {index: 86, type: Single}
              - key: [1856, 64, 3328]
                speed: 1638.94
                value: {index: 84, type: Single}
              - key: [1856, 128, 128]
                speed: 286.011
                value: {index: 71, type: Single}
              - key: [1856, 128, 256]
                speed: 1288.5
                value: {index: 76, type: Single}
              - key: [1856, 128, 768]
                speed: 1840.72
                value: {index: 76, type: Single}
              - key: [1856, 128, 1792]
                speed: 2001.32
                value: {index: 76, type: Single}
              - key: [1856, 128, 3328]
                speed: 2244.06
                value: {index: 90, type: Single}
              - key: [1856, 256, 128]
                speed: 531.993
                value: {index: 71, type: Single}
              - key: [1856, 256, 256]
                speed: 2102.95
                value: {index: 76, type: Single}
              - key: [1856, 256, 768]
                speed: 2747.77
                value: {index: 76, type: Single}
              - key: [1856, 256, 1792]
                speed: 3011.61
                value: {index: 76, type: Single}
              - key: [1856, 256, 3328]
                speed: 3046.49
                value: {index: 74, type: Single}
              - key: [1856, 448, 128]
                speed: 814.685
                value: {index: 68, type: Single}
              - key: [1856, 448, 256]
                speed: 2382.06
                value: {index: 80, type: Single}
              - key: [1856, 448, 768]
                speed: 2744.0
                value: {index: 80, type: Single}
              - key: [1856, 448, 1792]
                speed: 2875.17
                value: {index: 80, type: Single}
              - key: [1856, 448, 3328]
                speed: 2911.61
                value: {index: 80, type: Single}
              - key: [1856, 704, 128]
                speed: 1018.31
                value: {index: 68, type: Single}
              - key: [1856, 704, 256]
                speed: 2663.18
                value: {index: 80, type: Single}
              - key: [1856, 704, 768]
                speed: 2925.96
                value: {index: 80, type: Single}
              - key: [1856, 704, 1792]
                speed: 3009.91
                value: {index: 80, type: Single}
              - key: [1856, 704, 3328]
                speed: 2857.36
                value: {index: 74, type: Single}
              - key: [1856, 1024, 128]
                speed: 1435.05
                value: {index: 68, type: Single}
              - key: [1856, 1024, 256]
                speed: 3292.77
                value: {index: 79, type: Single}
              - key: [1856, 1024, 768]
                speed: 3735.71
                value: {index: 79, type: Single}
              - key: [1856, 1024, 1792]
                speed: 3878.66
                value: {index: 79, type: Single}
              - key: [1856, 1024, 3328]
                speed: 3927.6
                value: {index: 79, type: Single}
              - key: [1856, 1408, 128]
                speed: 1610.01
                value: {index: 68, type: Single}
              - key: [1856, 1408, 256]
                speed: 2918.81
                value: {index: 80, type: Single}
              - key: [1856, 1408, 768]
                speed: 3222.09
                value: {index: 79, type: Single}
              - key: [1856, 1408, 1792]
                speed: 3305.3
                value: {index: 79, type: Single}
              - key: [1856, 1408, 3328]
                speed: 3341.36
                value: {index: 79, type: Single}
              - key: [1856, 1856, 128]
                speed: 1674.75
                value: {index: 68, type: Single}
              - key: [1856, 1856, 256]
                speed: 3092.05
                value: {index: 81, type: Single}
              - key: [1856, 1856, 768]
                speed: 3616.52
                value: {index: 81, type: Single}
              - key: [1856, 1856, 1792]
                speed: 3813.49
                value: {index: 81, type: Single}
              - key: [1856, 1856, 3328]
                speed: 3886.13
                value: {index: 81, type: Single}
              - key: [1856, 2368, 128]
                speed: 1808.65
                value: {index: 68, type: Single}
              - key: [1856, 2368, 256]
                speed: 3341.42
                value: {index: 80, type: Single}
              - key: [1856, 2368, 768]
                speed: 3462.63
                value: {index: 80, type: Single}
              - key: [1856, 2368, 1792]
                speed: 3481.2
                value: {index: 85, type: Single}
              - key: [1856, 2368, 3328]
                speed: 3506.5
                value: {index: 79, type: Single}
              - key: [1856, 2944, 128]
                speed: 1932.9
                value: {index: 68, type: Single}
              - key: [1856, 2944, 256]
                speed: 3415.04
                value: {index: 79, type: Single}
              - key: [1856, 2944, 768]
                speed: 3723.65
                value: {index: 79, type: Single}
              - key: [1856, 2944, 1792]
                speed: 3791.67
                value: {index: 81, type: Single}
              - key: [1856, 2944, 3328]
                speed: 3847.74
                value: {index: 81, type: Single}
              - key: [1856, 3584, 128]
                speed: 2014.59
                value: {index: 68, type: Single}
              - key: [1856, 3584, 256]
                speed: 3492.96
                value: {index: 79, type: Single}
              - key: [1856, 3584, 768]
                speed: 3779.49
                value: {index: 79, type: Single}
              - key: [1856, 3584, 1792]
                speed: 3842.95
                value: {index: 79, type: Single}
              - key: [1856, 3584, 3328]
                speed: 3872.86
                value: {index: 79, type: Single}
              - key: [1856, 4288, 128]
                speed: 1988.7
                value: {index: 68, type: Single}
              - key: [1856, 4288, 256]
                speed: 3319.94
                value: {index: 80, type: Single}
              - key: [1856, 4288, 768]
                speed: 3560.04
                value: {index: 85, type: Single}
              - key: [1856, 4288, 1792]
                speed: 3622.0
                value: {index: 85, type: Single}
              - key: [1856, 4288, 3328]
                speed: 3643.87
                value: {index: 85, type: Single}
              - key: [1856, 5056, 128]
                speed: 2132.41
                value: {index: 68, type: Single}
              - key: [1856, 5056, 256]
                speed: 3562.96
                value: {index: 79, type: Single}
              - key: [1856, 5056, 768]
                speed: 3845.39
                value: {index: 85, type: Single}
              - key: [1856, 5056, 1792]
                speed: 3907.43
                value: {index: 85, type: Single}
              - key: [1856, 5056, 3328]
                speed: 3919.67
                value: {index: 79, type: Single}
              - key: [1856, 5888, 128]
                speed: 2112.74
                value: {index: 68, type: Single}
              - key: [1856, 5888, 256]
                speed: 3628.73
                value: {index: 81, type: Single}
              - key: [1856, 5888, 768]
                speed: 3979.44
                value: {index: 81, type: Single}
              - key: [1856, 5888, 1792]
                speed: 4110.25
                value: {index: 81, type: Single}
              - key: [1856, 5888, 3328]
                speed: 4156.02
                value: {index: 81, type: Single}
              - key: [1856, 6784, 128]
                speed: 2231.48
                value: {index: 68, type: Single}
              - key: [1856, 6784, 256]
                speed: 3743.18
                value: {index: 79, type: Single}
              - key: [1856, 6784, 768]
                speed: 3964.27
                value: {index: 79, type: Single}
              - key: [1856, 6784, 1792]
                speed: 4008.71
                value: {index: 79, type: Single}
              - key: [1856, 6784, 3328]
                speed: 4030.09
                value: {index: 79, type: Single}
              - key: [2368, 4, 128]
                speed: 21.8692
                value: {index: 91, type: Single}
              - key: [2368, 4, 256]
                speed: 40.8496
                value: {index: 94, type: Single}
              - key: [2368, 4, 768]
                speed: 103.448
                value: {index: 95, type: Single}
              - key: [2368, 4, 1792]
                speed: 174.198
                value: {index: 95, type: Single}
              - key: [2368, 4, 3328]
                speed: 194.298
                value: {index: 94, type: Single}
              - key: [2368, 64, 128]
                speed: 183.006
                value: {index: 71, type: Single}
              - key: [2368, 64, 256]
                speed: 886.593
                value: {index: 74, type: Single}
              - key: [2368, 64, 768]
                speed: 1194.5
                value: {index: 76, type: Single}
              - key: [2368, 64, 1792]
                speed: 1292.26
                value: {index: 73, type: Single}
              - key: [2368, 64, 3328]
                speed: 1602.99
                value: {index: 73, type: Single}
              - key: [2368, 128, 128]
                speed: 360.57
                value: {index: 71, type: Single}
              - key: [2368, 128, 256]
                speed: 1385.62
                value: {index: 76, type: Single}
              - key: [2368, 128, 768]
                speed: 1757.12
                value: {index: 76, type: Single}
              - key: [2368, 128, 1792]
                speed: 1926.65
                value: {index: 76, type: Single}
              - key: [2368, 128, 3328]
                speed: 2163.91
                value: {index: 82, type: Single}
              - key: [2368, 256, 128]
                speed: 608.872
                value: {index: 68, type: Single}
              - key: [2368, 256, 256]
                speed: 1838.74
                value: {index: 76, type: Single}
              - key: [2368, 256, 768]
                speed: 2183.71
                value: {index: 76, type: Single}
              - key: [2368, 256, 1792]
                speed: 2341.62
                value: {index: 76, type: Single}
              - key: [2368, 256, 3328]
                speed: 2652.88
                value: {index: 82, type: Single}
              - key: [2368, 448, 128]
                speed: 844.469
                value: {index: 68, type: Single}
              - key: [2368, 448, 256]
                speed: 2165.03
                value: {index: 80, type: Single}
              - key: [2368, 448, 768]
                speed: 2503.51
                value: {index: 76, type: Single}
              - key: [2368, 448, 1792]
                speed: 2643.9
                value: {index: 76, type: Single}
              - key: [2368, 448, 3328]
                speed: 2655.51
                value: {index: 74, type: Single}
              - key: [2368, 704, 128]
                speed: 1245.25
                value: {index: 68, type: Single}
              - key: [2368, 704, 256]
                speed: 2788.62
                value: {index: 85, type: Single}
              - key: [2368, 704, 768]
                speed: 3227.24
                value: {index: 85, type: Single}
              - key: [2368, 704, 1792]
                speed: 3376.66
                value: {index: 85, type: Single}
              - key: [2368, 704, 3328]
                speed: 3438.97
                value: {index: 85, type: Single}
              - key: [2368, 1024, 128]
                speed: 1491.06
                value: {index: 68, type: Single}
              - key: [2368, 1024, 256]
                speed: 3130.08
                value: {index: 80, type: Single}
              - key: [2368, 1024, 768]
                speed: 3355.2
                value: {index: 80, type: Single}
              - key: [2368, 1024, 1792]
                speed: 3246.64
                value: {index: 76, type: Single}
              - key: [2368, 1024, 3328]
                speed: 3223.71
                value: {index: 74, type: Single}
              - key: [2368, 1408, 128]
                speed: 1625.92
                value: {index: 68, type: Single}
              - key: [2368, 1408, 256]
                speed: 3194.39
                value: {index: 80, type: Single}
              - key: [2368, 1408, 768]
                speed: 3559.59
                value: {index: 81, type: Single}
              - key: [2368, 1408, 1792]
                speed: 3728.09
                value: {index: 81, type: Single}
              - key: [2368, 1408, 3328]
                speed: 3782.09
                value: {index: 81, type: Single}
              - key: [2368, 1856, 128]
                speed: 1784.32
                value: {index: 68, type: Single}
              - key: [2368, 1856, 256]
                speed: 3350.97
                value: {index: 80, type: Single}
              - key: [2368, 1856, 768]
                speed: 3420.8
                value: {index: 80, type: Single}
              - key: [2368, 1856, 1792]
                speed: 3486.99
                value: {index: 85, type: Single}
              - key: [2368, 1856, 3328]
                speed: 3507.78
                value: {index: 79, type: Single}
              - key: [2368, 2368, 128]
                speed: 1979.68
                value: {index: 68, type: Single}
              - key: [2368, 2368, 256]
                speed: 3427.0
                value: {index: 79, type: Single}
              - key: [2368, 2368, 768]
                speed: 3788.54
                value: {index: 79, type: Single}
              - key: [2368, 2368, 1792]
                speed: 3871.12
                value: {index: 85, type: Single}
              - key: [2368, 2368, 3328]
                speed: 3898.8
                value: {index: 79, type: Single}
              - key: [2368, 2944, 128]
                speed: 1952.09
                value: {index: 68, type: Single}
              - key: [2368, 2944, 256]
                speed: 3399.64
                value: {index: 81, type: Single}
              - key: [2368, 2944, 768]
                speed: 3795.25
                value: {index: 81, type: Single}
              - key: [2368, 2944, 1792]
                speed: 3923.01
                value: {index: 81, type: Single}
              - key: [2368, 2944, 3328]
                speed: 3970.57
                value: {index: 81, type: Single}
              - key: [2368, 3584, 128]
                speed: 2093.92
                value: {index: 68, type: Single}
              - key: [2368, 3584, 256]
                speed: 3546.84
                value: {index: 79, type: Single}
              - key: [2368, 3584, 768]
                speed: 3808.28
                value: {index: 79, type: Single}
              - key: [2368, 3584, 1792]
                speed: 3861.69
                value: {index: 79, type: Single}
              - key: [2368, 3584, 3328]
                speed: 3788.23
                value: {index: 85, type: Single}
              - key: [2368, 4288, 128]
                speed: 2101.73
                value: {index: 68, type: Single}
              - key: [2368, 4288, 256]
                speed: 3489.34
                value: {index: 79, type: Single}
              - key: [2368, 4288, 768]
                speed: 3745.13
                value: {index: 85, type: Single}
              - key: [2368, 4288, 1792]
                speed: 3816.46
                value: {index: 81, type: Single}
              - key: [2368, 4288, 3328]
                speed: 3857.27
                value: {index: 81, type: Single}
              - key: [2368, 5056, 128]
                speed: 2121.4
                value: {index: 68, type: Single}
              - key: [2368, 5056, 256]
                speed: 3540.88
                value: {index: 85, type: Single}
              - key: [2368, 5056, 768]
                speed: 3745.47
                value: {index: 85, type: Single}
              - key: [2368, 5056, 1792]
                speed: 3814.29
                value: {index: 85, type: Single}
              - key: [2368, 5056, 3328]
                speed: 3811.33
                value: {index: 85, type: Single}
              - key: [2368, 5888, 128]
                speed: 2166.5
                value: {index: 68, type: Single}
              - key: [2368, 5888, 256]
                speed: 3638.34
                value: {index: 79, type: Single}
              - key: [2368, 5888, 768]
                speed: 3866.96
                value: {index: 81, type: Single}
              - key: [2368, 5888, 1792]
                speed: 3949.4
                value: {index: 81, type: Single}
              - key: [2368, 5888, 3328]
                speed: 3985.49
                value: {index: 81, type: Single}
              - key: [2368, 6784, 128]
                speed: 2192.74
                value: {index: 68, type: Single}
              - key: [2368, 6784, 256]
                speed: 3706.31
                value: {index: 79, type: Single}
              - key: [2368, 6784, 768]
                speed: 3896.4
                value: {index: 79, type: Single}
              - key: [2368, 6784, 1792]
                speed: 3941.22
                value: {index: 79, type: Single}
              - key: [2368, 6784, 3328]
                speed: 3917.33
                value: {index: 79, type: Single}
              - key: [2944, 4, 128]
                speed: 27.1495
                value: {index: 91, type: Single}
              - key: [2944, 4, 256]
                speed: 49.9777
                value: {index: 97, type: Single}
              - key: [2944, 4, 768]
                speed: 119.503
                value: {index: 98, type: Single}
              - key: [2944, 4, 1792]
                speed: 194.818
                value: {index: 95, type: Single}
              - key: [2944, 4, 3328]
                speed: 212.438
                value: {index: 94, type: Single}
              - key: [2944, 64, 128]
                speed: 226.496
                value: {index: 71, type: Single}
              - key: [2944, 64, 256]
                speed: 1076.66
                value: {index: 74, type: Single}
              - key: [2944, 64, 768]
                speed: 1409.82
                value: {index: 86, type: Single}
              - key: [2944, 64, 1792]
                speed: 1563.73
                value: {index: 86, type: Single}
              - key: [2944, 64, 3328]
                speed: 1865.77
                value: {index: 90, type: Single}
              - key: [2944, 128, 128]
                speed: 451.972
                value: {index: 71, type: Single}
              - key: [2944, 128, 256]
                speed: 1681.82
                value: {index: 76, type: Single}
              - key: [2944, 128, 768]
                speed: 2207.19
                value: {index: 76, type: Single}
              - key: [2944, 128, 1792]
                speed: 2400.07
                value: {index: 76, type: Single}
              - key: [2944, 128, 3328]
                speed: 2469.08
                value: {index: 76, type: Single}
              - key: [2944, 256, 128]
                speed: 755.553
                value: {index: 68, type: Single}
              - key: [2944, 256, 256]
                speed: 2138.05
                value: {index: 80, type: Single}
              - key: [2944, 256, 768]
                speed: 2475.26
                value: {index: 80, type: Single}
              - key: [2944, 256, 1792]
                speed: 2601.64
                value: {index: 80, type: Single}
              - key: [2944, 256, 3328]
                speed: 2644.21
                value: {index: 80, type: Single}
              - key: [2944, 448, 128]
                speed: 984.263
                value: {index: 68, type: Single}
              - key: [2944, 448, 256]
                speed: 2684.81
                value: {index: 80, type: Single}
              - key: [2944, 448, 768]
                speed: 2954.17
                value: {index: 80, type: Single}
              - key: [2944, 448, 1792]
                speed: 2898.71
                value: {index: 76, type: Single}
              - key: [2944, 448, 3328]
                speed: 2949.99
                value: {index: 76, type: Single}
              - key: [2944, 704, 128]
                speed: 1238.75
                value: {index: 68, type: Single}
              - key: [2944, 704, 256]
                speed: 2693.84
                value: {index: 80, type: Single}
              - key: [2944, 704, 768]
                speed: 2873.17
                value: {index: 80, type: Single}
              - key: [2944, 704, 1792]
                speed: 2996.75
                value: {index: 76, type: Single}
              - key: [2944, 704, 3328]
                speed: 3058.29
                value: {index: 76, type: Single}
              - key: [2944, 1024, 128]
                speed: 1428.33
                value: {index: 68, type: Single}
              - key: [2944, 1024, 256]
                speed: 2929.52
                value: {index: 80, type: Single}
              - key: [2944, 1024, 768]
                speed: 3237.94
                value: {index: 81, type: Single}
              - key: [2944, 1024, 1792]
                speed: 3375.57
                value: {index: 81, type: Single}
              - key: [2944, 1024, 3328]
                speed: 3422.66
                value: {index: 81, type: Single}
              - key: [2944, 1408, 128]
                speed: 1610.94
                value: {index: 68, type: Single}
              - key: [2944, 1408, 256]
                speed: 3175.6
                value: {index: 80, type: Single}
              - key: [2944, 1408, 768]
                speed: 3244.21
                value: {index: 80, type: Single}
              - key: [2944, 1408, 1792]
                speed: 3303.38
                value: {index: 85, type: Single}
              - key: [2944, 1408, 3328]
                speed: 3326.29
                value: {index: 76, type: Single}
              - key: [2944, 1856, 128]
                speed: 1832.43
                value: {index: 68, type: Single}
              - key: [2944, 1856, 256]
                speed: 3366.39
                value: {index: 85, type: Single}
              - key: [2944, 1856, 768]
                speed: 3682.09
                value: {index: 79, type: Single}
              - key: [2944, 1856, 1792]
                speed: 3785.45
                value: {index: 81, type: Single}
              - key: [2944, 1856, 3328]
                speed: 3843.19
                value: {index: 81, type: Single}
              - key: [2944, 2368, 128]
                speed: 1856.26
                value: {index: 68, type: Single}
              - key: [2944, 2368, 256]
                speed: 3307.9
                value: {index: 85, type: Single}
              - key: [2944, 2368, 768]
                speed: 3770.87
                value: {index: 81, type: Single}
              - key: [2944, 2368, 1792]
                speed: 3904.76
                value: {index: 81, type: Single}
              - key: [2944, 2368, 3328]
                speed: 3959.24
                value: {index: 81, type: Single}
              - key: [2944, 2944, 128]
                speed: 2027.7
                value: {index: 68, type: Single}
              - key: [2944, 2944, 256]
                speed: 3614.13
                value: {index: 79, type: Single}
              - key: [2944, 2944, 768]
                speed: 3874.66
                value: {index: 79, type: Single}
              - key: [2944, 2944, 1792]
                speed: 3943.29
                value: {index: 85, type: Single}
              - key: [2944, 2944, 3328]
                speed: 3962.38
                value: {index: 85, type: Single}
              - key: [2944, 3584, 128]
                speed: 2036.93
                value: {index: 68, type: Single}
              - key: [2944, 3584, 256]
                speed: 3660.47
                value: {index: 79, type: Single}
              - key: [2944, 3584, 768]
                speed: 3902.17
                value: {index: 79, type: Single}
              - key: [2944, 3584, 1792]
                speed: 3972.92
                value: {index: 81, type: Single}
              - key: [2944, 3584, 3328]
                speed: 4013.88
                value: {index: 81, type: Single}
              - key: [2944, 4288, 128]
                speed: 2033.86
                value: {index: 68, type: Single}
              - key: [2944, 4288, 256]
                speed: 3705.41
                value: {index: 85, type: Single}
              - key: [2944, 4288, 768]
                speed: 3954.88
                value: {index: 85, type: Single}
              - key: [2944, 4288, 1792]
                speed: 4023.15
                value: {index: 85, type: Single}
              - key: [2944, 4288, 3328]
                speed: 4025.95
                value: {index: 85, type: Single}
              - key: [2944, 5056, 128]
                speed: 2086.36
                value: {index: 68, type: Single}
              - key: [2944, 5056, 256]
                speed: 3655.81
                value: {index: 85, type: Single}
              - key: [2944, 5056, 768]
                speed: 4078.28
                value: {index: 81, type: Single}
              - key: [2944, 5056, 1792]
                speed: 4198.68
                value: {index: 81, type: Single}
              - key: [2944, 5056, 3328]
                speed: 4245.62
                value: {index: 81, type: Single}
              - key: [2944, 5888, 128]
                speed: 2157.85
                value: {index: 68, type: Single}
              - key: [2944, 5888, 256]
                speed: 3805.55
                value: {index: 79, type: Single}
              - key: [2944, 5888, 768]
                speed: 3992.16
                value: {index: 79, type: Single}
              - key: [2944, 5888, 1792]
                speed: 4037.68
                value: {index: 85, type: Single}
              - key: [2944, 5888, 3328]
                speed: 4048.09
                value: {index: 85, type: Single}
              - key: [2944, 6784, 128]
                speed: 2145.67
                value: {index: 68, type: Single}
              - key: [2944, 6784, 256]
                speed: 3775.0
                value: {index: 79, type: Single}
              - key: [2944, 6784, 768]
                speed: 3940.81
                value: {index: 79, type: Single}
              - key: [2944, 6784, 1792]
                speed: 3982.55
                value: {index: 85, type: Single}
              - key: [2944, 6784, 3328]
                speed: 3968.68
                value: {index: 85, type: Single}
              - key: [3584, 4, 128]
                speed: 33.0516
                value: {index: 92, type: Single}
              - key: [3584, 4, 256]
                speed: 58.8144
                value: {index: 94, type: Single}
              - key: [3584, 4, 768]
                speed: 134.927
                value: {index: 95, type: Single}
              - key: [3584, 4, 1792]
                speed: 117.715
                value: {index: 93, type: Single}
              - key: [3584, 4, 3328]
                speed: 63.0823
                value: {index: 93, type: Single}
              - key: [3584, 64, 128]
                speed: 271.25
                value: {index: 71, type: Single}
              - key: [3584, 64, 256]
                speed: 1261.17
                value: {index: 86, type: Single}
              - key: [3584, 64, 768]
                speed: 1692.55
                value: {index: 86, type: Single}
              - key: [3584, 64, 1792]
                speed: 1895.95
                value: {index: 86, type: Single}
              - key: [3584, 64, 3328]
                speed: 2028.93
                value: {index: 90, type: Single}
              - key: [3584, 128, 128]
                speed: 506.558
                value: {index: 71, type: Single}
              - key: [3584, 128, 256]
                speed: 2000.01
                value: {index: 76, type: Single}
              - key: [3584, 128, 768]
                speed: 2610.56
                value: {index: 76, type: Single}
              - key: [3584, 128, 1792]
                speed: 2880.06
                value: {index: 76, type: Single}
              - key: [3584, 128, 3328]
                speed: 2997.81
                value: {index: 76, type: Single}
              - key: [3584, 256, 128]
                speed: 858.483
                value: {index: 72, type: Single}
              - key: [3584, 256, 256]
                speed: 2577.71
                value: {index: 80, type: Single}
              - key: [3584, 256, 768]
                speed: 2968.67
                value: {index: 80, type: Single}
              - key: [3584, 256, 1792]
                speed: 3138.2
                value: {index: 80, type: Single}
              - key: [3584, 256, 3328]
                speed: 3203.64
                value: {index: 80, type: Single}
              - key: [3584, 448, 128]
                speed: 1121.35
                value: {index: 68, type: Single}
              - key: [3584, 448, 256]
                speed: 2757.93
                value: {index: 85, type: Single}
              - key: [3584, 448, 768]
                speed: 3137.4
                value: {index: 85, type: Single}
              - key: [3584, 448, 1792]
                speed: 3272.93
                value: {index: 85, type: Single}
              - key: [3584, 448, 3328]
                speed: 3323.76
                value: {index: 85, type: Single}
              - key: [3584, 704, 128]
                speed: 1237.59
                value: {index: 68, type: Single}
              - key: [3584, 704, 256]
                speed: 2805.43
                value: {index: 80, type: Single}
              - key: [3584, 704, 768]
                speed: 3095.87
                value: {index: 85, type: Single}
              - key: [3584, 704, 1792]
                speed: 3196.19
                value: {index: 85, type: Single}
              - key: [3584, 704, 3328]
                speed: 3228.52
                value: {index: 85, type: Single}
              - key: [3584, 1024, 128]
                speed: 1506.42
                value: {index: 68, type: Single}
              - key: [3584, 1024, 256]
                speed: 3309.12
                value: {index: 81, type: Single}
              - key: [3584, 1024, 768]
                speed: 3831.25
                value: {index: 81, type: Single}
              - key: [3584, 1024, 1792]
                speed: 4049.68
                value: {index: 81, type: Single}
              - key: [3584, 1024, 3328]
                speed: 4126.96
                value: {index: 81, type: Single}
              - key: [3584, 1408, 128]
                speed: 1567.47
                value: {index: 68, type: Single}
              - key: [3584, 1408, 256]
                speed: 3197.0
                value: {index: 80, type: Single}
              - key: [3584, 1408, 768]
                speed: 3446.52
                value: {index: 79, type: Single}
              - key: [3584, 1408, 1792]
                speed: 3497.09
                value: {index: 85, type: Single}
              - key: [3584, 1408, 3328]
                speed: 3547.47
                value: {index: 81, type: Single}
              - key: [3584, 1856, 128]
                speed: 1793.87
                value: {index: 68, type: Single}
              - key: [3584, 1856, 256]
                speed: 3429.92
                value: {index: 85, type: Single}
              - key: [3584, 1856, 768]
                speed: 3736.59
                value: {index: 85, type: Single}
              - key: [3584, 1856, 1792]
                speed: 3844.44
                value: {index: 85, type: Single}
              - key: [3584, 1856, 3328]
                speed: 3873.56
                value: {index: 85, type: Single}
              - key: [3584, 2368, 128]
                speed: 1823.18
                value: {index: 68, type: Single}
              - key: [3584, 2368, 256]
                speed: 3509.71
                value: {index: 85, type: Single}
              - key: [3584, 2368, 768]
                speed: 3764.82
                value: {index: 79, type: Single}
              - key: [3584, 2368, 1792]
                speed: 3858.79
                value: {index: 85, type: Single}
              - key: [3584, 2368, 3328]
                speed: 3884.3
                value: {index: 85, type: Single}
              - key: [3584, 2944, 128]
                speed: 1945.39
                value: {index: 68, type: Single}
              - key: [3584, 2944, 256]
                speed: 3632.51
                value: {index: 85, type: Single}
              - key: [3584, 2944, 768]
                speed: 3893.92
                value: {index: 79, type: Single}
              - key: [3584, 2944, 1792]
                speed: 3954.77
                value: {index: 85, type: Single}
              - key: [3584, 2944, 3328]
                speed: 3993.0
                value: {index: 81, type: Single}
              - key: [3584, 3584, 128]
                speed: 2006.85
                value: {index: 68, type: Single}
              - key: [3584, 3584, 256]
                speed: 3607.21
                value: {index: 79, type: Single}
              - key: [3584, 3584, 768]
                speed: 3800.43
                value: {index: 85, type: Single}
              - key: [3584, 3584, 1792]
                speed: 3843.46
                value: {index: 85, type: Single}
              - key: [3584, 3584, 3328]
                speed: 3862.76
                value: {index: 85, type: Single}
              - key: [3584, 4288, 128]
                speed: 2020.31
                value: {index: 68, type: Single}
              - key: [3584, 4288, 256]
                speed: 3759.52
                value: {index: 85, type: Single}
              - key: [3584, 4288, 768]
                speed: 4142.02
                value: {index: 81, type: Single}
              - key: [3584, 4288, 1792]
                speed: 4280.89
                value: {index: 81, type: Single}
              - key: [3584, 4288, 3328]
                speed: 4355.2
                value: {index: 81, type: Single}
              - key: [3584, 5056, 128]
                speed: 2067.54
                value: {index: 68, type: Single}
              - key: [3584, 5056, 256]
                speed: 3735.99
                value: {index: 85, type: Single}
              - key: [3584, 5056, 768]
                speed: 3954.96
                value: {index: 81, type: Single}
              - key: [3584, 5056, 1792]
                speed: 4056.65
                value: {index: 81, type: Single}
              - key: [3584, 5056, 3328]
                speed: 4118.95
                value: {index: 81, type: Single}
              - key: [3584, 5888, 128]
                speed: 2092.35
                value: {index: 68, type: Single}
              - key: [3584, 5888, 256]
                speed: 3796.07
                value: {index: 79, type: Single}
              - key: [3584, 5888, 768]
                speed: 3981.7
                value: {index: 85, type: Single}
              - key: [3584, 5888, 1792]
                speed: 4027.52
                value: {index: 85, type: Single}
              - key: [3584, 5888, 3328]
                speed: 4039.82
                value: {index: 85, type: Single}
              - key: [3584, 6784, 128]
                speed: 2122.21
                value: {index: 68, type: Single}
              - key: [3584, 6784, 256]
                speed: 3841.81
                value: {index: 85, type: Single}
              - key: [3584, 6784, 768]
                speed: 4030.55
                value: {index: 85, type: Single}
              - key: [3584, 6784, 1792]
                speed: 4076.21
                value: {index: 85, type: Single}
              - key: [3584, 6784, 3328]
                speed: 4089.55
                value: {index: 85, type: Single}
              - key: [4288, 4, 128]
                speed: 39.487
                value: {index: 91, type: Single}
              - key: [4288, 4, 256]
                speed: 67.9287
                value: {index: 94, type: Single}
              - key: [4288, 4, 768]
                speed: 151.063
                value: {index: 94, type: Single}
              - key: [4288, 4, 1792]
                speed: 107.984
                value: {index: 93, type: Single}
              - key: [4288, 4, 3328]
                speed: 65.3711
                value: {index: 97, type: Single}
              - key: [4288, 64, 128]
                speed: 324.772
                value: {index: 71, type: Single}
              - key: [4288, 64, 256]
                speed: 1267.22
                value: {index: 76, type: Single}
              - key: [4288, 64, 768]
                speed: 1602.52
                value: {index: 76, type: Single}
              - key: [4288, 64, 1792]
                speed: 1757.37
                value: {index: 76, type: Single}
              - key: [4288, 64, 3328]
                speed: 1995.87
                value: {index: 88, type: Single}
              - key: [4288, 128, 128]
                speed: 548.864
                value: {index: 68, type: Single}
              - key: [4288, 128, 256]
                speed: 1658.51
                value: {index: 76, type: Single}
              - key: [4288, 128, 768]
                speed: 1960.23
                value: {index: 76, type: Single}
              - key: [4288, 128, 1792]
                speed: 2099.84
                value: {index: 76, type: Single}
              - key: [4288, 128, 3328]
                speed: 2448.55
                value: {index: 75, type: Single}
              - key: [4288, 256, 128]
                speed: 834.774
                value: {index: 68, type: Single}
              - key: [4288, 256, 256]
                speed: 2240.26
                value: {index: 80, type: Single}
              - key: [4288, 256, 768]
                speed: 2585.42
                value: {index: 76, type: Single}
              - key: [4288, 256, 1792]
                speed: 2720.64
                value: {index: 76, type: Single}
              - key: [4288, 256, 3328]
                speed: 2826.19
                value: {index: 75, type: Single}
              - key: [4288, 448, 128]
                speed: 1388.9
                value: {index: 70, type: Single}
              - key: [4288, 448, 256]
                speed: 3218.47
                value: {index: 85, type: Single}
              - key: [4288, 448, 768]
                speed: 3709.14
                value: {index: 85, type: Single}
              - key: [4288, 448, 1792]
                speed: 3871.78
                value: {index: 85, type: Single}
              - key: [4288, 448, 3328]
                speed: 3941.92
                value: {index: 85, type: Single}
              - key: [4288, 704, 128]
                speed: 1503.74
                value: {index: 68, type: Single}
              - key: [4288, 704, 256]
                speed: 2925.5
                value: {index: 80, type: Single}
              - key: [4288, 704, 768]
                speed: 3179.73
                value: {index: 81, type: Single}
              - key: [4288, 704, 1792]
                speed: 3348.03
                value: {index: 81, type: Single}
              - key: [4288, 704, 3328]
                speed: 3409.54
                value: {index: 81, type: Single}
              - key: [4288, 1024, 128]
                speed: 1778.6
                value: {index: 68, type: Single}
              - key: [4288, 1024, 256]
                speed: 3338.3
                value: {index: 80, type: Single}
              - key: [4288, 1024, 768]
                speed: 3420.66
                value: {index: 79, type: Single}
              - key: [4288, 1024, 1792]
                speed: 3497.0
                value: {index: 79, type: Single}
              - key: [4288, 1024, 3328]
                speed: 3516.93
                value: {index: 79, type: Single}
              - key: [4288, 1408, 128]
                speed: 1881.58
                value: {index: 68, type: Single}
              - key: [4288, 1408, 256]
                speed: 3270.14
                value: {index: 80, type: Single}
              - key: [4288, 1408, 768]
                speed: 3446.52
                value: {index: 79, type: Single}
              - key: [4288, 1408, 1792]
                speed: 3500.0
                value: {index: 79, type: Single}
              - key: [4288, 1408, 3328]
                speed: 3517.65
                value: {index: 79, type: Single}
              - key: [4288, 1856, 128]
                speed: 1993.68
                value: {index: 68, type: Single}
              - key: [4288, 1856, 256]
                speed: 3329.06
                value: {index: 80, type: Single}
              - key: [4288, 1856, 768]
                speed: 3540.4
                value: {index: 79, type: Single}
              - key: [4288, 1856, 1792]
                speed: 3623.32
                value: {index: 85, type: Single}
              - key: [4288, 1856, 3328]
                speed: 3628.42
                value: {index: 79, type: Single}
              - key: [4288, 2368, 128]
                speed: 2116.79
                value: {index: 68, type: Single}
              - key: [4288, 2368, 256]
                speed: 3504.4
                value: {index: 85, type: Single}
              - key: [4288, 2368, 768]
                speed: 3735.52
                value: {index: 79, type: Single}
              - key: [4288, 2368, 1792]
                speed: 3812.62
                value: {index: 81, type: Single}
              - key: [4288, 2368, 3328]
                speed: 3860.23
                value: {index: 81, type: Single}
              - key: [4288, 2944, 128]
                speed: 2219.83
                value: {index: 68, type: Single}
              - key: [4288, 2944, 256]
                speed: 3751.87
                value: {index: 79, type: Single}
              - key: [4288, 2944, 768]
                speed: 3964.71
                value: {index: 79, type: Single}
              - key: [4288, 2944, 1792]
                speed: 4012.7
                value: {index: 79, type: Single}
              - key: [4288, 2944, 3328]
                speed: 3791.37
                value: {index: 79, type: Single}
              - key: [4288, 3584, 128]
                speed: 2219.44
                value: {index: 68, type: Single}
              - key: [4288, 3584, 256]
                speed: 3817.3
                value: {index: 81, type: Single}
              - key: [4288, 3584, 768]
                speed: 4244.5
                value: {index: 81, type: Single}
              - key: [4288, 3584, 1792]
                speed: 4348.15
                value: {index: 81, type: Single}
              - key: [4288, 3584, 3328]
                speed: 4388.11
                value: {index: 81, type: Single}
              - key: [4288, 4288, 128]
                speed: 2232.95
                value: {index: 68, type: Single}
              - key: [4288, 4288, 256]
                speed: 3764.68
                value: {index: 79, type: Single}
              - key: [4288, 4288, 768]
                speed: 4067.72
                value: {index: 81, type: Single}
              - key: [4288, 4288, 1792]
                speed: 4149.76
                value: {index: 81, type: Single}
              - key: [4288, 4288, 3328]
                speed: 4200.33
                value: {index: 81, type: Single}
              - key: [4288, 5056, 128]
                speed: 2224.03
                value: {index: 68, type: Single}
              - key: [4288, 5056, 256]
                speed: 3734.33
                value: {index: 85, type: Single}
              - key: [4288, 5056, 768]
                speed: 4033.91
                value: {index: 81, type: Single}
              - key: [4288, 5056, 1792]
                speed: 4100.33
                value: {index: 81, type: Single}
              - key: [4288, 5056, 3328]
                speed: 4132.33
                value: {index: 81, type: Single}
              - key: [4288, 5888, 128]
                speed: 2285.9
                value: {index: 68, type: Single}
              - key: [4288, 5888, 256]
                speed: 3885.39
                value: {index: 79, type: Single}
              - key: [4288, 5888, 768]
                speed: 4051.46
                value: {index: 81, type: Single}
              - key: [4288, 5888, 1792]
                speed: 4105.95
                value: {index: 81, type: Single}
              - key: [4288, 5888, 3328]
                speed: 4134.11
                value: {index: 81, type: Single}
              - key: [4288, 6784, 128]
                speed: 2287.61
                value: {index: 68, type: Single}
              - key: [4288, 6784, 256]
                speed: 3894.22
                value: {index: 79, type: Single}
              - key: [4288, 6784, 768]
                speed: 4079.5
                value: {index: 81, type: Single}
              - key: [4288, 6784, 1792]
                speed: 4146.25
                value: {index: 81, type: Single}
              - key: [4288, 6784, 3328]
                speed: 4169.2
                value: {index: 81, type: Single}
              - key: [5056, 4, 128]
                speed: 46.2267
                value: {index: 91, type: Single}
              - key: [5056, 4, 256]
                speed: 78.2549
                value: {index: 93, type: Single}
              - key: [5056, 4, 768]
                speed: 167.95
                value: {index: 95, type: Single}
              - key: [5056, 4, 1792]
                speed: 100.828
                value: {index: 93, type: Single}
              - key: [5056, 4, 3328]
                speed: 65.1178
                value: {index: 96, type: Single}
              - key: [5056, 64, 128]
                speed: 370.339
                value: {index: 71, type: Single}
              - key: [5056, 64, 256]
                speed: 1464.6
                value: {index: 76, type: Single}
              - key: [5056, 64, 768]
                speed: 1890.69
                value: {index: 76, type: Single}
              - key: [5056, 64, 1792]
                speed: 2048.69
                value: {index: 76, type: Single}
              - key: [5056, 64, 3328]
                speed: 2258.95
                value: {index: 88, type: Single}
              - key: [5056, 128, 128]
                speed: 650.42
                value: {index: 68, type: Single}
              - key: [5056, 128, 256]
                speed: 1887.82
                value: {index: 74, type: Single}
              - key: [5056, 128, 768]
                speed: 2299.34
                value: {index: 76, type: Single}
              - key: [5056, 128, 1792]
                speed: 2456.63
                value: {index: 76, type: Single}
              - key: [5056, 128, 3328]
                speed: 2525.06
                value: {index: 77, type: Single}
              - key: [5056, 256, 128]
                speed: 950.407
                value: {index: 68, type: Single}
              - key: [5056, 256, 256]
                speed: 2618.13
                value: {index: 80, type: Single}
              - key: [5056, 256, 768]
                speed: 2882.31
                value: {index: 80, type: Single}
              - key: [5056, 256, 1792]
                speed: 2982.83
                value: {index: 80, type: Single}
              - key: [5056, 256, 3328]
                speed: 3009.58
                value: {index: 80, type: Single}
              - key: [5056, 448, 128]
                speed: 1379.57
                value: {index: 68, type: Single}
              - key: [5056, 448, 256]
                speed: 2938.1
                value: {index: 80, type: Single}
              - key: [5056, 448, 768]
                speed: 3134.62
                value: {index: 80, type: Single}
              - key: [5056, 448, 1792]
                speed: 3023.9
                value: {index: 76, type: Single}
              - key: [5056, 448, 3328]
                speed: 3075.92
                value: {index: 76, type: Single}
              - key: [5056, 704, 128]
                speed: 1713.84
                value: {index: 68, type: Single}
              - key: [5056, 704, 256]
                speed: 3184.28
                value: {index: 85, type: Single}
              - key: [5056, 704, 768]
                speed: 3726.34
                value: {index: 81, type: Single}
              - key: [5056, 704, 1792]
                speed: 3940.45
                value: {index: 81, type: Single}
              - key: [5056, 704, 3328]
                speed: 4014.64
                value: {index: 81, type: Single}
              - key: [5056, 1024, 128]
                speed: 1847.4
                value: {index: 68, type: Single}
              - key: [5056, 1024, 256]
                speed: 3272.27
                value: {index: 80, type: Single}
              - key: [5056, 1024, 768]
                speed: 3532.77
                value: {index: 79, type: Single}
              - key: [5056, 1024, 1792]
                speed: 3596.05
                value: {index: 81, type: Single}
              - key: [5056, 1024, 3328]
                speed: 3646.2
                value: {index: 81, type: Single}
              - key: [5056, 1408, 128]
                speed: 1987.81
                value: {index: 68, type: Single}
              - key: [5056, 1408, 256]
                speed: 3460.48
                value: {index: 81, type: Single}
              - key: [5056, 1408, 768]
                speed: 3861.29
                value: {index: 81, type: Single}
              - key: [5056, 1408, 1792]
                speed: 4005.99
                value: {index: 81, type: Single}
              - key: [5056, 1408, 3328]
                speed: 4051.83
                value: {index: 81, type: Single}
              - key: [5056, 1856, 128]
                speed: 2128.18
                value: {index: 68, type: Single}
              - key: [5056, 1856, 256]
                speed: 3590.65
                value: {index: 85, type: Single}
              - key: [5056, 1856, 768]
                speed: 3833.44
                value: {index: 79, type: Single}
              - key: [5056, 1856, 1792]
                speed: 3910.92
                value: {index: 85, type: Single}
              - key: [5056, 1856, 3328]
                speed: 3922.94
                value: {index: 79, type: Single}
              - key: [5056, 2368, 128]
                speed: 2110.41
                value: {index: 68, type: Single}
              - key: [5056, 2368, 256]
                speed: 3555.34
                value: {index: 85, type: Single}
              - key: [5056, 2368, 768]
                speed: 3751.09
                value: {index: 79, type: Single}
              - key: [5056, 2368, 1792]
                speed: 3815.7
                value: {index: 85, type: Single}
              - key: [5056, 2368, 3328]
                speed: 3830.18
                value: {index: 79, type: Single}
              - key: [5056, 2944, 128]
                speed: 2170.2
                value: {index: 68, type: Single}
              - key: [5056, 2944, 256]
                speed: 3719.76
                value: {index: 81, type: Single}
              - key: [5056, 2944, 768]
                speed: 4097.22
                value: {index: 81, type: Single}
              - key: [5056, 2944, 1792]
                speed: 4204.34
                value: {index: 81, type: Single}
              - key: [5056, 2944, 3328]
                speed: 4244.08
                value: {index: 81, type: Single}
              - key: [5056, 3584, 128]
                speed: 2238.34
                value: {index: 68, type: Single}
              - key: [5056, 3584, 256]
                speed: 3772.45
                value: {index: 79, type: Single}
              - key: [5056, 3584, 768]
                speed: 4002.09
                value: {index: 81, type: Single}
              - key: [5056, 3584, 1792]
                speed: 4108.88
                value: {index: 81, type: Single}
              - key: [5056, 3584, 3328]
                speed: 4142.97
                value: {index: 81, type: Single}
              - key: [5056, 4288, 128]
                speed: 2220.47
                value: {index: 68, type: Single}
              - key: [5056, 4288, 256]
                speed: 3731.32
                value: {index: 85, type: Single}
              - key: [5056, 4288, 768]
                speed: 4001.41
                value: {index: 81, type: Single}
              - key: [5056, 4288, 1792]
                speed: 4091.25
                value: {index: 81, type: Single}
              - key: [5056, 4288, 3328]
                speed: 4135.36
                value: {index: 81, type: Single}
              - key: [5056, 5056, 128]
                speed: 2232.84
                value: {index: 68, type: Single}
              - key: [5056, 5056, 256]
                speed: 3770.72
                value: {index: 85, type: Single}
              - key: [5056, 5056, 768]
                speed: 4050.28
                value: {index: 81, type: Single}
              - key: [5056, 5056, 1792]
                speed: 4142.27
                value: {index: 81, type: Single}
              - key: [5056, 5056, 3328]
                speed: 4177.95
                value: {index: 81, type: Single}
              - key: [5056, 5888, 128]
                speed: 2267.63
                value: {index: 68, type: Single}
              - key: [5056, 5888, 256]
                speed: 3881.64
                value: {index: 81, type: Single}
              - key: [5056, 5888, 768]
                speed: 4150.24
                value: {index: 81, type: Single}
              - key: [5056, 5888, 1792]
                speed: 4231.37
                value: {index: 81, type: Single}
              - key: [5056, 5888, 3328]
                speed: 4262.56
                value: {index: 81, type: Single}
              - key: [5056, 6784, 128]
                speed: 2324.24
                value: {index: 69, type: Single}
              - key: [5056, 6784, 256]
                speed: 3953.88
                value: {index: 81, type: Single}
              - key: [5056, 6784, 768]
                speed: 4246.74
                value: {index: 81, type: Single}
              - key: [5056, 6784, 1792]
                speed: 4333.83
                value: {index: 81, type: Single}
              - key: [5056, 6784, 3328]
                speed: 4363.07
                value: {index: 81, type: Single}
              - key: [5888, 4, 128]
                speed: 54.143
                value: {index: 91, type: Single}
              - key: [5888, 4, 256]
                speed: 86.9278
                value: {index: 96, type: Single}
              - key: [5888, 4, 768]
                speed: 183.373
                value: {index: 94, type: Single}
              - key: [5888, 4, 1792]
                speed: 129.91
                value: {index: 93, type: Single}
              - key: [5888, 4, 3328]
                speed: 65.0705
                value: {index: 98, type: Single}
              - key: [5888, 64, 128]
                speed: 449.278
                value: {index: 71, type: Single}
              - key: [5888, 64, 256]
                speed: 1715.31
                value: {index: 76, type: Single}
              - key: [5888, 64, 768]
                speed: 2166.22
                value: {index: 76, type: Single}
              - key: [5888, 64, 1792]
                speed: 2393.26
                value: {index: 76, type: Single}
              - key: [5888, 64, 3328]
                speed: 2466.36
                value: {index: 76, type: Single}
              - key: [5888, 128, 128]
                speed: 690.247
                value: {index: 72, type: Single}
              - key: [5888, 128, 256]
                speed: 2134.27
                value: {index: 80, type: Single}
              - key: [5888, 128, 768]
                speed: 2476.1
                value: {index: 80, type: Single}
              - key: [5888, 128, 1792]
                speed: 2598.84
                value: {index: 80, type: Single}
              - key: [5888, 128, 3328]
                speed: 2640.87
                value: {index: 80, type: Single}
              - key: [5888, 256, 128]
                speed: 1044.49
                value: {index: 68, type: Single}
              - key: [5888, 256, 256]
                speed: 2654.62
                value: {index: 79, type: Single}
              - key: [5888, 256, 768]
                speed: 2967.67
                value: {index: 85, type: Single}
              - key: [5888, 256, 1792]
                speed: 3080.95
                value: {index: 79, type: Single}
              - key: [5888, 256, 3328]
                speed: 3119.18
                value: {index: 85, type: Single}
              - key: [5888, 448, 128]
                speed: 1265.9
                value: {index: 70, type: Single}
              - key: [5888, 448, 256]
                speed: 2936.01
                value: {index: 80, type: Single}
              - key: [5888, 448, 768]
                speed: 3250.3
                value: {index: 85, type: Single}
              - key: [5888, 448, 1792]
                speed: 3342.61
                value: {index: 85, type: Single}
              - key: [5888, 448, 3328]
                speed: 3366.06
                value: {index: 85, type: Single}
              - key: [5888, 704, 128]
                speed: 1568.28
                value: {index: 68, type: Single}
              - key: [5888, 704, 256]
                speed: 3174.08
                value: {index: 80, type: Single}
              - key: [5888, 704, 768]
                speed: 3279.23
                value: {index: 80, type: Single}
              - key: [5888, 704, 1792]
                speed: 3301.03
                value: {index: 85, type: Single}
              - key: [5888, 704, 3328]
                speed: 3302.66
                value: {index: 79, type: Single}
              - key: [5888, 1024, 128]
                speed: 1765.54
                value: {index: 68, type: Single}
              - key: [5888, 1024, 256]
                speed: 3256.34
                value: {index: 80, type: Single}
              - key: [5888, 1024, 768]
                speed: 3432.86
                value: {index: 85, type: Single}
              - key: [5888, 1024, 1792]
                speed: 3495.53
                value: {index: 79, type: Single}
              - key: [5888, 1024, 3328]
                speed: 3513.81
                value: {index: 79, type: Single}
              - key: [5888, 1408, 128]
                speed: 1861.42
                value: {index: 68, type: Single}
              - key: [5888, 1408, 256]
                speed: 3480.58
                value: {index: 85, type: Single}
              - key: [5888, 1408, 768]
                speed: 3721.45
                value: {index: 79, type: Single}
              - key: [5888, 1408, 1792]
                speed: 3775.83
                value: {index: 79, type: Single}
              - key: [5888, 1408, 3328]
                speed: 3788.44
                value: {index: 79, type: Single}
              - key: [5888, 1856, 128]
                speed: 1951.45
                value: {index: 68, type: Single}
              - key: [5888, 1856, 256]
                speed: 3567.28
                value: {index: 85, type: Single}
              - key: [5888, 1856, 768]
                speed: 3926.72
                value: {index: 81, type: Single}
              - key: [5888, 1856, 1792]
                speed: 4068.92
                value: {index: 81, type: Single}
              - key: [5888, 1856, 3328]
                speed: 4137.71
                value: {index: 81, type: Single}
              - key: [5888, 2368, 128]
                speed: 2023.26
                value: {index: 68, type: Single}
              - key: [5888, 2368, 256]
                speed: 3646.66
                value: {index: 85, type: Single}
              - key: [5888, 2368, 768]
                speed: 3823.0
                value: {index: 85, type: Single}
              - key: [5888, 2368, 1792]
                speed: 3922.22
                value: {index: 81, type: Single}
              - key: [5888, 2368, 3328]
                speed: 3971.76
                value: {index: 81, type: Single}
              - key: [5888, 2944, 128]
                speed: 2074.41
                value: {index: 68, type: Single}
              - key: [5888, 2944, 256]
                speed: 3807.9
                value: {index: 79, type: Single}
              - key: [5888, 2944, 768]
                speed: 3976.61
                value: {index: 79, type: Single}
              - key: [5888, 2944, 1792]
                speed: 4037.31
                value: {index: 85, type: Single}
              - key: [5888, 2944, 3328]
                speed: 4023.13
                value: {index: 79, type: Single}
              - key: [5888, 3584, 128]
                speed: 2070.91
                value: {index: 68, type: Single}
              - key: [5888, 3584, 256]
                speed: 3816.24
                value: {index: 79, type: Single}
              - key: [5888, 3584, 768]
                speed: 3978.03
                value: {index: 79, type: Single}
              - key: [5888, 3584, 1792]
                speed: 4030.37
                value: {index: 85, type: Single}
              - key: [5888, 3584, 3328]
                speed: 4032.36
                value: {index: 79, type: Single}
              - key: [5888, 4288, 128]
                speed: 2107.82
                value: {index: 68, type: Single}
              - key: [5888, 4288, 256]
                speed: 3883.9
                value: {index: 85, type: Single}
              - key: [5888, 4288, 768]
                speed: 4031.31
                value: {index: 85, type: Single}
              - key: [5888, 4288, 1792]
                speed: 4081.74
                value: {index: 85, type: Single}
              - key: [5888, 4288, 3328]
                speed: 4119.06
                value: {index: 81, type: Single}
              - key: [5888, 5056, 128]
                speed: 2161.14
                value: {index: 68, type: Single}
              - key: [5888, 5056, 256]
                speed: 3860.72
                value: {index: 85, type: Single}
              - key: [5888, 5056, 768]
                speed: 4098.87
                value: {index: 81, type: Single}
              - key: [5888, 5056, 1792]
                speed: 4203.84
                value: {index: 81, type: Single}
              - key: [5888, 5056, 3328]
                speed: 4245.76
                value: {index: 81, type: Single}
              - key: [5888, 5888, 128]
                speed: 2192.74
                value: {index: 68, type: Single}
              - key: [5888, 5888, 256]
                speed: 3932.49
                value: {index: 81, type: Single}
              - key: [5888, 5888, 768]
                speed: 4257.51
                value: {index: 81, type: Single}
              - key: [5888, 5888, 1792]
                speed: 4359.14
                value: {index: 81, type: Single}
              - key: [5888, 5888, 3328]
                speed: 4401.47
                value: {index: 81, type: Single}
              - key: [5888, 6784, 128]
                speed: 2176.35
                value: {index: 68, type: Single}
              - key: [5888, 6784, 256]
                speed: 3932.12
                value: {index: 85, type: Single}
              - key: [5888, 6784, 768]
                speed: 4106.76
                value: {index: 81, type: Single}
              - key: [5888, 6784, 1792]
                speed: 4150.84
                value: {index: 81, type: Single}
              - key: [5888, 6784, 3328]
                speed: 4169.73
                value: {index: 81, type: Single}
              - key: [6784, 4, 128]
                speed: 62.2034
                value: {index: 91, type: Single}
              - key: [6784, 4, 256]
                speed: 100.041
                value: {index: 96, type: Single}
              - key: [6784, 4, 768]
                speed: 193.541
                value: {index: 95, type: Single}
              - key: [6784, 4, 1792]
                speed: 102.591
                value: {index: 93, type: Single}
              - key: [6784, 4, 3328]
                speed: 66.9749
                value: {index: 94, type: Single}
              - key: [6784, 64, 128]
                speed: 503.392
                value: {index: 71, type: Single}
              - key: [6784, 64, 256]
                speed: 1880.06
                value: {index: 74, type: Single}
              - key: [6784, 64, 768]
                speed: 2472.18
                value: {index: 74, type: Single}
              - key: [6784, 64, 1792]
                speed: 2748.88
                value: {index: 76, type: Single}
              - key: [6784, 64, 3328]
                speed: 2831.43
                value: {index: 76, type: Single}
              - key: [6784, 128, 128]
                speed: 771.012
                value: {index: 72, type: Single}
              - key: [6784, 128, 256]
                speed: 2461.23
                value: {index: 80, type: Single}
              - key: [6784, 128, 768]
                speed: 2854.86
                value: {index: 80, type: Single}
              - key: [6784, 128, 1792]
                speed: 2992.47
                value: {index: 80, type: Single}
              - key: [6784, 128, 3328]
                speed: 3041.21
                value: {index: 80, type: Single}
              - key: [6784, 256, 128]
                speed: 1285.85
                value: {index: 68, type: Single}
              - key: [6784, 256, 256]
                speed: 3033.54
                value: {index: 79, type: Single}
              - key: [6784, 256, 768]
                speed: 3407.39
                value: {index: 79, type: Single}
              - key: [6784, 256, 1792]
                speed: 3550.12
                value: {index: 79, type: Single}
              - key: [6784, 256, 3328]
                speed: 3590.44
                value: {index: 79, type: Single}
              - key: [6784, 448, 128]
                speed: 1378.73
                value: {index: 69, type: Single}
              - key: [6784, 448, 256]
                speed: 2943.57
                value: {index: 80, type: Single}
              - key: [6784, 448, 768]
                speed: 3174.83
                value: {index: 81, type: Single}
              - key: [6784, 448, 1792]
                speed: 3363.58
                value: {index: 81, type: Single}
              - key: [6784, 448, 3328]
                speed: 3422.91
                value: {index: 81, type: Single}
              - key: [6784, 704, 128]
                speed: 1665.91
                value: {index: 68, type: Single}
              - key: [6784, 704, 256]
                speed: 3313.75
                value: {index: 85, type: Single}
              - key: [6784, 704, 768]
                speed: 3708.87
                value: {index: 85, type: Single}
              - key: [6784, 704, 1792]
                speed: 3794.06
                value: {index: 85, type: Single}
              - key: [6784, 704, 3328]
                speed: 3822.88
                value: {index: 85, type: Single}
              - key: [6784, 1024, 128]
                speed: 1865.86
                value: {index: 68, type: Single}
              - key: [6784, 1024, 256]
                speed: 3389.72
                value: {index: 81, type: Single}
              - key: [6784, 1024, 768]
                speed: 3796.29
                value: {index: 81, type: Single}
              - key: [6784, 1024, 1792]
                speed: 3907.02
                value: {index: 81, type: Single}
              - key: [6784, 1024, 3328]
                speed: 3955.21
                value: {index: 81, type: Single}
              - key: [6784, 1408, 128]
                speed: 2037.19
                value: {index: 68, type: Single}
              - key: [6784, 1408, 256]
                speed: 3694.22
                value: {index: 79, type: Single}
              - key: [6784, 1408, 768]
                speed: 3923.75
                value: {index: 79, type: Single}
              - key: [6784, 1408, 1792]
                speed: 3988.18
                value: {index: 85, type: Single}
              - key: [6784, 1408, 3328]
                speed: 3927.59
                value: {index: 79, type: Single}
              - key: [6784, 1856, 128]
                speed: 2043.18
                value: {index: 68, type: Single}
              - key: [6784, 1856, 256]
                speed: 3715.56
                value: {index: 85, type: Single}
              - key: [6784, 1856, 768]
                speed: 3942.17
                value: {index: 85, type: Single}
              - key: [6784, 1856, 1792]
                speed: 4013.96
                value: {index: 85, type: Single}
              - key: [6784, 1856, 3328]
                speed: 3951.52
                value: {index: 85, type: Single}
              - key: [6784, 2368, 128]
                speed: 2118.63
                value: {index: 68, type: Single}
              - key: [6784, 2368, 256]
                speed: 3699.64
                value: {index: 85, type: Single}
              - key: [6784, 2368, 768]
                speed: 3882.47
                value: {index: 85, type: Single}
              - key: [6784, 2368, 1792]
                speed: 3941.26
                value: {index: 85, type: Single}
              - key: [6784, 2368, 3328]
                speed: 3872.85
                value: {index: 85, type: Single}
              - key: [6784, 2944, 128]
                speed: 2134.34
                value: {index: 68, type: Single}
              - key: [6784, 2944, 256]
                speed: 3772.77
                value: {index: 79, type: Single}
              - key: [6784, 2944, 768]
                speed: 3946.89
                value: {index: 81, type: Single}
              - key: [6784, 2944, 1792]
                speed: 3981.55
                value: {index: 85, type: Single}
              - key: [6784, 2944, 3328]
                speed: 3965.71
                value: {index: 85, type: Single}
              - key: [6784, 3584, 128]
                speed: 2193.65
                value: {index: 68, type: Single}
              - key: [6784, 3584, 256]
                speed: 3866.25
                value: {index: 79, type: Single}
              - key: [6784, 3584, 768]
                speed: 4021.59
                value: {index: 85, type: Single}
              - key: [6784, 3584, 1792]
                speed: 4079.08
                value: {index: 85, type: Single}
              - key: [6784, 3584, 3328]
                speed: 4055.35
                value: {index: 85, type: Single}
              - key: [6784, 4288, 128]
                speed: 2209.21
                value: {index: 68, type: Single}
              - key: [6784, 4288, 256]
                speed: 3869.61
                value: {index: 85, type: Single}
              - key: [6784, 4288, 768]
                speed: 4027.08
                value: {index: 81, type: Single}
              - key: [6784, 4288, 1792]
                speed: 4118.83
                value: {index: 81, type: Single}
              - key: [6784, 4288, 3328]
                speed: 4157.67
                value: {index: 81, type: Single}
              - key: [6784, 5056, 128]
                speed: 2197.39
                value: {index: 68, type: Single}
              - key: [6784, 5056, 256]
                speed: 3921.25
                value: {index: 85, type: Single}
              - key: [6784, 5056, 768]
                speed: 4235.92
                value: {index: 81, type: Single}
              - key: [6784, 5056, 1792]
                speed: 4317.51
                value: {index: 81, type: Single}
              - key: [6784, 5056, 3328]
                speed: 4358.37
                value: {index: 81, type: Single}
              - key: [6784, 5888, 128]
                speed: 2254.19
                value: {index: 68, type: Single}
              - key: [6784, 5888, 256]
                speed: 3928.5
                value: {index: 79, type: Single}
              - key: [6784, 5888, 768]
                speed: 4089.07
                value: {index: 81, type: Single}
              - key: [6784, 5888, 1792]
                speed: 4127.14
                value: {index: 81, type: Single}
              - key: [6784, 5888, 3328]
                speed: 4164.62
                value: {index: 81, type: Single}
              - key: [6784, 6784, 128]
                speed: 2246.59
                value: {index: 68, type: Single}
              - key: [6784, 6784, 256]
                speed: 3957.45
                value: {index: 79, type: Single}
              - key: [6784, 6784, 768]
                speed: 4266.96
                value: {index: 81, type: Single}
              - key: [6784, 6784, 1792]
                speed: 4355.54
                value: {index: 81, type: Single}
              - key: [6784, 6784, 3328]
                speed: 4391.67
                value: {index: 81, type: Single}
              type: Matching
            predicate:
              type: And
              value:
              - type: TypesEqual
                value: [Float, Float, Float, Float]
              - {type: HighPrecisionAccumulate, value: false}
          type: Problem
      property: {type: OperationIdentifier}
      type: ProblemMap
    predicate:
      type: AMDGPU
      value: {type: Processor, value: gfx908}
  type: Hardware
solutions:
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 0
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '64', LSCB: '8', LSPA: '4', LSPB: '32', LVCA: '16', LVCB: '2', LVPA: '1',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1024', LdsOffsetA: '0', LdsOffsetB: '512',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64', MacroTile1: '64',
    MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '64',
    NumGlobalWriteVectorsPerThread: '16', NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '0', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x64x8_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 8]', ThreadTile0: '8', ThreadTile1: '8',
    ThreadTileA: '8', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT64x64x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT8_8_USFGRO0_VW4_WG8_8_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 8]
    workGroup: [8, 8, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 1
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '16', LSPA: '8', LSPB: '16', LVCA: '8', LVCB: '4', LVPA: '2',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '512',
    LdsOffsetB_Blk: '1536', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '1',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT32x32x16_SE_AMAS2_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bljk_SB_MT32x32x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_4_USFGRO0_VW4_WG8_8_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 2
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '8', LSPA: '8', LSPB: '32', LVCA: '8', LVCB: '2', LVPA: '2',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1792', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '256',
    LdsOffsetB_Blk: '1280', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '2',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT32x64x8_SE_AMAS2_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT32x64x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_8_USFGRO0_VW4_WG8_8_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 3
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '64', LSCB: '16', LSPA: '16', LSPB: '64', LVCA: '16', LVCB: '4', LVPA: '4',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3072', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32',
    NumGlobalWriteVectorsPerThread: '8', NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '3', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x128x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bljk_SB_MT64x128x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_8_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 4
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '64', LSCB: '8', LSPA: '4', LSPB: '32', LVCA: '16', LVCB: '2', LVPA: '1',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1792', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '512',
    LdsOffsetB_Blk: '1536', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '4',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x32x8_SE_AMAS2_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT64x32x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT8_4_USFGRO0_VW4_WG8_8_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 5
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32', MacroTile1: '32',
    MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '5', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT32x32x32_SE_AMAS3_GRVW4_GSU8_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: 'False', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bljk_SB_MT32x32x32_SE_AMAS3_BL1_EPS0_GRVW4_GSU8_ISA908_K1_KLA_PGR0_TT4_4_USFGRO0_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 8
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 6
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '32', LSPA: '16', LSPB: '32', LVCA: '16', LVCB: '8', LVPA: '4',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x32x32_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bljk_SB_MT64x32x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT8_4_USFGRO0_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 7
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '2048', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '5120', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '7',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT32x64x32_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bljk_SB_MT32x64x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_8_USFGRO0_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 8
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '128', LSCB: '8', LSPA: '2', LSPB: '32', LVCA: '128', LVCB: '8', LVPA: '2',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '8',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT128x64x8_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT128x64x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 9
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '8', LSPA: '4', LSPB: '32', LVCA: '64', LVCB: '8', LVPA: '4',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '512',
    LdsOffsetB_Blk: '1536', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '64', MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '16',
    NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '9',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x64x8_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT64x64x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 10
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '16', LSPA: '16', LSPB: '64', LVCA: '16', LVCB: '4', LVPA: '4',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64',
    MacroTile1: '64', MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '10',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x64x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bljk_SB_MT64x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_4_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 11
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '8', LSPA: '8', LSPB: '32', LVCA: '32', LVCB: '8', LVPA: '8',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '512', LdsOffsetB: '256',
    LdsOffsetB_Blk: '768', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '11',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT32x32x8_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT32x32x8_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 12
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '16', LSPA: '16', LSPB: '64', LVCA: '16', LVCB: '4', LVPA: '4',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '7168', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '2048', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '5120', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64',
    MacroTile1: '128', MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '12',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x128x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bljk_SB_MT64x128x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_8_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 13
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '16', LSPA: '4', LSPB: '16', LVCA: '64', LVCB: '16', LVPA: '4',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '13',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x32x16_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bljk_SB_MT64x32x16_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 8
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 14
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '2', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '128', LSCB: '8', LSPA: '8', LSPB: '64', LVCA: '32', LVCB: '4', LVPA: '2',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '14',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT128x64x8_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT128x64x8_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT8_4_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 15
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '32', LSPA: '16', LSPB: '32', LVCA: '16', LVCB: '8', LVPA: '4',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '15',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x32x32_SE_AMAS3_GRVW4_GSU4_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bljk_SB_MT64x32x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU4_ISA908_K1_KLA_PGR1_TT8_4_USFGRO0_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 4
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 16
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '8', LSPA: '8', LSPB: '32', LVCA: '32', LVCB: '8', LVPA: '8',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '512', LdsOffsetB: '256',
    LdsOffsetB_Blk: '768', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '16',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT32x32x8_SE_AMAS0_GRVW1_GSU4_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT32x32x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU4_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW1_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 17
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '32', LSPA: '16', LSPB: '32', LVCA: '16', LVCB: '8', LVPA: '4',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '17',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x32x32_SE_AMAS3_GRVW4_GSU2_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bljk_SB_MT64x32x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU2_ISA908_K1_KLA_PGR1_TT8_4_USFGRO0_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 2
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 18
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '128', LSCB: '8', LSPA: '8', LSPB: '128', LVCA: '32', LVCB: '2', LVPA: '2',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128',
    MacroTile1: '128', MacroTileA: '128', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '64', NumGlobalWriteVectorsPerThread: '16',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '18',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT128x128x8_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 8]', ThreadTile0: '8', ThreadTile1: '8', ThreadTileA: '8', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT128x128x8_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT8_8_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [128, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 19
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '8', LSPA: '4', LSPB: '32', LVCA: '64', LVCB: '8', LVPA: '4',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '128', MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '19',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT64x128x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 20
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '4', LSPA: '4',
    LSPB: '16', LVCA: '16', LVCB: '4', LVPA: '4', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '20',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2', ThreadTileA: '2', ThreadTileB: '2',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '2',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 21
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '4', LSPA: '4',
    LSPB: '16', LVCA: '16', LVCB: '4', LVPA: '4', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '21',
    SolutionNameMin: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2', ThreadTileA: '2', ThreadTileB: '2',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 22
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '22', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 23
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '23', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU4_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU4_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 24
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '24', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU8_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU8_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 25
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '25', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS0_GRVW1_GSU4_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU4_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW1_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 26
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '26', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS0_GRVW1_GSU8_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW1_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 27
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '8', LSCB: '32', LSPA: '32', LSPB: '8', LVCA: '2', LVCB: '8', LVPA: '8',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1024', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '512', LdsOffsetB: '256',
    LdsOffsetB_Blk: '768', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '0', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT32x32x8_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT32x32x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_4_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 28
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '64', LSPA: '32', LSPB: '16', LVCA: '8', LVCB: '16', LVPA: '8',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsOffsetA: '0', LdsOffsetB: '2048',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '32', LoopTail: 'True', LoopUnroll: '32', MacroTile0: '64', MacroTile1: '64',
    MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '1', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x64x32_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Alik_Bjlk_SB_MT64x64x32_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_4_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 29
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '8', LSCB: '128', LSPA: '32', LSPB: '2', LVCA: '8', LVCB: '128', LVPA: '32',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1536', LdsOffsetA: '0', LdsOffsetB: '512',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '2', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT64x128x8_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR0_TT4_8_USFGRO0_VW1_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 30
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '64', LSPA: '64', LSPB: '16', LVCA: '4', LVCB: '16', LVPA: '16',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '7168', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '3', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT128x64x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT128x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT8_4_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 31
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 6)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '64', LSPA: '8', LSPB: '4', LVCA: '32', LVCB: '64', LVPA: '8',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '14336', LdsNumElementsAlignedA: '4096',
    LdsNumElementsAlignedB: '2048', LdsOffsetA: '0', LdsOffsetA_Blk: '8192', LdsOffsetB: '4096',
    LdsOffsetB_Blk: '12288', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '32', LoopTail: 'True', LoopUnroll: '32', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '16', NumLoadsB: '8', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '16', NumLoadsPerpendicularB: '8', NumThreads: '256',
    OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']',
    PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '4',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT128x64x32_SE_AMAS1_GRVW1_GSU1_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '1'}
  name: Cijk_Alik_Bjlk_SB_MT128x64x32_SE_AMAS0_BL1_EPS1_GRVW1_GSU1_ISA906_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 32
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '16', LSPA: '16',
    LSPB: '4', LVCA: '4', LVCB: '16', LVPA: '16', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '5', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 33
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '16', LSPA: '16',
    LSPB: '4', LVCA: '4', LVCB: '16', LVPA: '16', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 34
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 6)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '1', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '7', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA906_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 35
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '8', LSCB: '32', LSPA: '32', LSPB: '8', LVCA: '2', LVCB: '8', LVPA: '8',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1024', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '512', LdsOffsetB: '256',
    LdsOffsetB_Blk: '768', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '0', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT32x32x8_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT32x32x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_4_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 36
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '64', LSPA: '64', LSPB: '16', LVCA: '4', LVCB: '16', LVPA: '16',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '64',
    MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '1', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x64x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '4', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT64x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_4_USFGRO0_VW4_WG16_16_1_WGM4
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 4
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 37
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '8', LSCB: '128', LSPA: '32', LSPB: '2', LVCA: '8', LVCB: '128', LVPA: '32',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1536', LdsOffsetA: '0', LdsOffsetB: '512',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '2', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '4', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT64x128x8_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR0_TT4_8_USFGRO0_VW1_WG16_16_1_WGM4
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 4
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 38
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '64', LSPA: '64', LSPB: '16', LVCA: '4', LVCB: '16', LVPA: '16',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '7168', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '3', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT128x64x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT128x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT8_4_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 39
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 0)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '64', LSPA: '8', LSPB: '4', LVCA: '32', LVCB: '64', LVPA: '8',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '14336', LdsNumElementsAlignedA: '4096',
    LdsNumElementsAlignedB: '2048', LdsOffsetA: '0', LdsOffsetA_Blk: '8192', LdsOffsetB: '4096',
    LdsOffsetB_Blk: '12288', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '32', LoopTail: 'True', LoopUnroll: '32', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '16', NumLoadsB: '8', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '16', NumLoadsPerpendicularB: '8', NumThreads: '256',
    OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']',
    PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '4',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT128x64x32_SE_AMAS1_GRVW1_GSU1_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '1'}
  name: Cijk_Alik_Bjlk_SB_MT128x64x32_SE_AMAS0_BL1_EPS1_GRVW1_GSU1_ISA900_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 40
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '16', LSPA: '16',
    LSPB: '4', LVCA: '4', LVCB: '16', LVPA: '16', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '5', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 41
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '16', LSPA: '16',
    LSPB: '4', LVCA: '4', LVCB: '16', LVPA: '16', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 42
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 0)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '1', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '7', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA900_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 43
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '8', LSPA: '8', LSPB: '32', LVCA: '8', LVCB: '2', LVPA: '2',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1792', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '256',
    LdsOffsetB_Blk: '1280', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '0', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT32x64x8_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT32x64x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_8_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 44
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '64', LSCB: '8', LSPA: '4', LSPB: '32', LVCA: '64', LVCB: '8', LVPA: '4',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1536', LdsOffsetA: '0', LdsOffsetB: '512',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '1', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT64x128x8_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR0_TT4_8_USFGRO0_VW1_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 45
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '128', LSCB: '8', LSPA: '2', LSPB: '32', LVCA: '128', LVCB: '8', LVPA: '2',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128', MacroTile1: '128',
    MacroTileA: '128', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '64', NumGlobalWriteVectorsPerThread: '64',
    NumLoadsA: '4', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '2', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT128x128x8_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 8]', ThreadTile0: '8', ThreadTile1: '8',
    ThreadTileA: '8', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT128x128x8_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR0_TT8_8_USFGRO0_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [128, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 46
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '8', LSPA: '8', LSPB: '32', LVCA: '8', LVCB: '2', LVPA: '2',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1024', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '512', LdsOffsetB: '256',
    LdsOffsetB_Blk: '768', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '3', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT32x32x8_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT32x32x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_4_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 47
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 6)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '16', LSPA: '4', LSPB: '16', LVCA: '64', LVCB: '16', LVPA: '4',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '4', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x32x16_SE_AMAS1_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bljk_SB_MT64x32x16_SE_AMAS0_BL1_EPS1_GRVW1_GSU1_ISA906_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 48
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '4', LSPA: '4',
    LSPB: '16', LVCA: '16', LVCB: '4', LVPA: '4', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '5', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 49
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '4', LSPA: '4',
    LSPB: '16', LVCA: '16', LVCB: '4', LVPA: '4', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 50
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 6)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '1', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '7', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA906_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 51
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '8', LSCB: '8', LSPA: '32', LSPB: '32', LVCA: '2', LVCB: '2', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1024', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '512', LdsOffsetB: '256',
    LdsOffsetB_Blk: '768', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '0', SolutionNameMin: Cijk_Alik_Bljk_SB_MT32x32x8_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT32x32x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_4_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 52
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3072', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '1', SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x128x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x128x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_8_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 53
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsOffsetA: '0', LdsOffsetB: '2048',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '32', LoopTail: 'True', LoopUnroll: '32', MacroTile0: '64', MacroTile1: '64',
    MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '2', SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x64x32_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Alik_Bljk_SB_MT64x64x32_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_4_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 54
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsOffsetA: '0', LdsOffsetB: '2048',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128', MacroTile1: '128',
    MacroTileA: '128', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '64', NumGlobalWriteVectorsPerThread: '16',
    NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '3', SolutionNameMin: Cijk_Alik_Bljk_SB_MT128x128x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 8]', ThreadTile0: '8', ThreadTile1: '8',
    ThreadTileA: '8', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT128x128x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT8_8_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 55
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '16', LSPA: '16', LSPB: '16', LVCA: '4', LVCB: '4', LVPA: '4',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1536', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '32',
    MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '4', SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT8_4_USFGRO0_VW4_WG8_8_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 56
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 6)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '16', LSPB: '16', LVCA: '16', LVCB: '16', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '5', SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS1_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS0_BL1_EPS1_GRVW1_GSU1_ISA906_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 57
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '4', LSPA: '16',
    LSPB: '16', LVCA: '4', LVCB: '4', LVPA: '16', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6', SolutionNameMin: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 58
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '4', LSPA: '16',
    LSPB: '16', LVCA: '4', LVCB: '4', LVPA: '16', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '7', SolutionNameMin: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 59
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 6)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '1', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '8', SolutionNameMin: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA906_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 60
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '8', LSPA: '8', LSPB: '32', LVCA: '8', LVCB: '2', LVPA: '2',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1792', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '256',
    LdsOffsetB_Blk: '1280', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '0', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT32x64x8_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT32x64x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_8_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 61
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '128', LSCB: '16', LSPA: '8', LSPB: '64', LVCA: '32', LVCB: '4', LVPA: '2',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '7168', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '1', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT128x64x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bljk_SB_MT128x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT8_4_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 62
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '64', LSCB: '8', LSPA: '4', LSPB: '32', LVCA: '64', LVCB: '8', LVPA: '4',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1536', LdsOffsetA: '0', LdsOffsetB: '512',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '2', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT64x128x8_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR0_TT4_8_USFGRO0_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 63
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '8', LSPA: '8', LSPB: '32', LVCA: '8', LVCB: '2', LVPA: '2',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1024', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '512', LdsOffsetB: '256',
    LdsOffsetB_Blk: '768', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '3', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT32x32x8_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT32x32x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_4_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 64
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 0)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '16', LSPA: '4', LSPB: '16', LVCA: '64', LVCB: '16', LVPA: '4',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '4', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT64x32x16_SE_AMAS1_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bljk_SB_MT64x32x16_SE_AMAS0_BL1_EPS1_GRVW1_GSU1_ISA900_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 65
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '4', LSPA: '4',
    LSPB: '16', LVCA: '16', LVCB: '4', LVPA: '4', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '5', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 66
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '4', LSPA: '4',
    LSPB: '16', LVCA: '16', LVCB: '4', LVPA: '4', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bljk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 67
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 0)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '1', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '7', SolutionNameMin: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bljk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA900_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 68
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3072', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32',
    NumGlobalWriteVectorsPerThread: '8', NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '0', SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x128x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x128x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_8_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 69
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsOffsetA: '0', LdsOffsetB: '2048',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128', MacroTile1: '128',
    MacroTileA: '128', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '64',
    NumGlobalWriteVectorsPerThread: '16', NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '1', SolutionNameMin: Cijk_Alik_Bljk_SB_MT128x128x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 8]', ThreadTile0: '8', ThreadTile1: '8',
    ThreadTileA: '8', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT128x128x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT8_8_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 70
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '7168', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '2',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT128x64x16_SE_AMAS2_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT128x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT8_4_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 71
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '32', LSPA: '8', LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '2',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '32', LoopTail: 'True', LoopUnroll: '32', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '4', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '4', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '3',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT32x32x32_SE_AMAS2_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Alik_Bljk_SB_MT32x32x32_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_4_USFGRO0_VW4_WG8_8_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 72
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '16', LSPA: '16', LSPB: '16', LVCA: '4', LVCB: '4', LVPA: '4',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '4',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT32x64x16_SE_AMAS2_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT32x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_8_USFGRO0_VW4_WG8_8_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 73
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '5',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT32x32x32_SE_AMAS3_GRVW4_GSU4_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '1'}
  name: Cijk_Alik_Bljk_SB_MT32x32x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU4_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 4
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 74
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '2', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '32', LSPB: '64', LVCA: '8', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT32x64x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT32x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 75
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64',
    MacroTile1: '64', MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '7',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x64x16_SE_AMAS3_GRVW4_GSU4_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU4_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 4
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 76
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '2', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '32', LVCA: '4', LVCB: '8', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '8',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 77
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64',
    MacroTile1: '64', MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '9',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x64x16_SE_AMAS3_GRVW4_GSU2_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU2_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 2
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 78
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '10',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT32x32x32_SE_AMAS3_GRVW4_GSU8_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '1'}
  name: Cijk_Alik_Bljk_SB_MT32x32x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU8_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 8
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 79
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '7168', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '2048', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '5120', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64',
    MacroTile1: '128', MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '11',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x128x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x128x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 80
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64',
    MacroTile1: '64', MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '12',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x64x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 81
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '2048', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128',
    MacroTile1: '128', MacroTileA: '128', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '64', NumGlobalWriteVectorsPerThread: '16',
    NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '13',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT128x128x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 8]', ThreadTile0: '8', ThreadTile1: '8', ThreadTileA: '8', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT128x128x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT8_8_USFGRO1_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 82
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '8', LSCB: '8', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '32',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '128', MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '14',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT64x128x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW1_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 83
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '2', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '32', LSPB: '64', LVCA: '8', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '15',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT32x64x16_SE_AMAS3_GRVW4_GSU2_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT32x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU2_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 2
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 84
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '2', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '32', LSPB: '64', LVCA: '8', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '16',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT32x64x16_SE_AMAS3_GRVW4_GSU4_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT32x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU4_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 4
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 85
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '7168', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '17',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT128x64x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT128x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 86
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '2', GlobalLoadVectorWidthB: '2', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '512',
    LdsOffsetB_Blk: '1536', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '18',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT32x32x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT32x32x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 87
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '2', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '32', LVCA: '4', LVCB: '8', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '19',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS3_GRVW4_GSU4_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU4_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 4
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 88
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '8', LSCB: '8', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '32',
    LVPB: '32', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '20',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT128x64x8_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT128x64x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 89
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '21',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT32x32x32_SE_AMAS3_GRVW4_GSU2_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '1'}
  name: Cijk_Alik_Bljk_SB_MT32x32x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU2_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 2
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 90
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '2', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '32', LVCA: '4', LVCB: '8', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '22',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS3_GRVW4_GSU2_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU2_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 2
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 91
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '4', LSPA: '16',
    LSPB: '16', LVCA: '4', LVCB: '4', LVPA: '16', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '23',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2', ThreadTileA: '2', ThreadTileB: '2',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '2',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 92
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '4', LSPA: '16',
    LSPB: '16', LVCA: '4', LVCB: '4', LVPA: '16', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '24',
    SolutionNameMin: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2', ThreadTileA: '2', ThreadTileB: '2',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 93
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '25', SolutionNameMin: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 94
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '26', SolutionNameMin: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU4_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU4_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 95
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '27', SolutionNameMin: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU8_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU8_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 96
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '28', SolutionNameMin: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS0_GRVW1_GSU2_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU2_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW1_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 97
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '29', SolutionNameMin: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS0_GRVW1_GSU4_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU4_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW1_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 98
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '30', SolutionNameMin: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS0_GRVW1_GSU8_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW1_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 99
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '8', LSCB: '8', LSPA: '32', LSPB: '32', LVCA: '2', LVCB: '2', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1024', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '512', LdsOffsetB: '256',
    LdsOffsetB_Blk: '768', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '0', SolutionNameMin: Cijk_Alik_Bljk_SB_MT32x32x8_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT32x32x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_4_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 100
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3072', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '1', SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x128x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x128x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_8_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 101
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsOffsetA: '0', LdsOffsetB: '2048',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '32', LoopTail: 'True', LoopUnroll: '32', MacroTile0: '64', MacroTile1: '64',
    MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '2', SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x64x32_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Alik_Bljk_SB_MT64x64x32_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_4_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 102
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '16', LSPA: '64', LSPB: '64', LVCA: '4', LVCB: '4', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3072', LdsOffsetA: '0', LdsOffsetB: '2048',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128', MacroTile1: '64',
    MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '3', SolutionNameMin: Cijk_Alik_Bljk_SB_MT128x64x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT128x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT8_4_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 103
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '16', LSPA: '16', LSPB: '16', LVCA: '4', LVCB: '4', LVPA: '4',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1536', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '32',
    MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '4', SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT8_4_USFGRO0_VW4_WG8_8_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 104
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 0)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '16', LSPA: '16', LSPB: '16', LVCA: '16', LVCB: '16', LVPA: '16',
    LVPB: '16', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '5', SolutionNameMin: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS1_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bljk_SB_MT64x32x16_SE_AMAS0_BL1_EPS1_GRVW1_GSU1_ISA900_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 105
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '4', LSPA: '16',
    LSPB: '16', LVCA: '4', LVCB: '4', LVPA: '16', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6', SolutionNameMin: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 106
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '4', LSPA: '16',
    LSPB: '16', LVCA: '4', LVCB: '4', LVPA: '16', LVPB: '16', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '7', SolutionNameMin: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bljk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 107
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 0)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '1', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '8', SolutionNameMin: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bljk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA900_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bljk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bljk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 108
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '32', LSPA: '8', LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '2',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1024', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '512', LdsOffsetB: '256',
    LdsOffsetB_Blk: '768', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '0', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT32x32x8_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT32x32x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_4_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 109
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '64', LSCB: '64', LSPA: '16', LSPB: '16', LVCA: '16', LVCB: '16', LVPA: '4',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '64',
    MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '1', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x64x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bjlk_SB_MT64x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_4_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 110
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '64', LSCB: '128', LSPA: '4', LSPB: '2', LVCA: '64', LVCB: '128', LVPA: '4',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1536', LdsOffsetA: '0', LdsOffsetB: '512',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '2', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT64x128x8_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR0_TT4_8_USFGRO0_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 111
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 0)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '32', LSPA: '4', LSPB: '8', LVCA: '64', LVCB: '32', LVPA: '4',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '3', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x32x16_SE_AMAS1_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bjlk_SB_MT64x32x16_SE_AMAS0_BL1_EPS1_GRVW1_GSU1_ISA900_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 112
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '16', LSPA: '4',
    LSPB: '4', LVCA: '16', LVCB: '16', LVPA: '4', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '4', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 113
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '16', LSPA: '4',
    LSPB: '4', LVCA: '16', LVCB: '16', LVPA: '4', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '5', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 114
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 0)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '1', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA900_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 115
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '128', LSCB: '128', LSPA: '2', LSPB: '2', LVCA: '128', LVCB: '128', LVPA: '2',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128', MacroTile1: '128',
    MacroTileA: '128', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '64', NumGlobalWriteVectorsPerThread: '64',
    NumLoadsA: '4', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '0', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT128x128x8_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 8]', ThreadTile0: '8', ThreadTile1: '8',
    ThreadTileA: '8', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT128x128x8_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR0_TT8_8_USFGRO0_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [128, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 116
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '32', LSPA: '8', LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '2',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1024', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '512', LdsOffsetB: '256',
    LdsOffsetB_Blk: '768', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '1', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT32x32x8_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT32x32x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_4_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 117
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '64', LSCB: '64', LSPA: '16', LSPB: '16', LVCA: '16', LVCB: '16', LVPA: '4',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '64',
    MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '2', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x64x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bjlk_SB_MT64x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_4_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 118
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '64', LSCB: '128', LSPA: '4', LSPB: '2', LVCA: '64', LVCB: '128', LVPA: '4',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1536', LdsOffsetA: '0', LdsOffsetB: '512',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '3', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT64x128x8_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR0_TT4_8_USFGRO0_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 119
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '128', LSCB: '64', LSPA: '8', LSPB: '16', LVCA: '32', LVCB: '16', LVPA: '2',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '7168', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '4', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT128x64x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bjlk_SB_MT128x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT8_4_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 120
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 6)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '32', LSPA: '4', LSPB: '8', LVCA: '64', LVCB: '32', LVPA: '4',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '5', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x32x16_SE_AMAS1_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bjlk_SB_MT64x32x16_SE_AMAS0_BL1_EPS1_GRVW1_GSU1_ISA906_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 121
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '16', LSPA: '4',
    LSPB: '4', LVCA: '16', LVCB: '16', LVPA: '4', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 122
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '16', LSPA: '4',
    LSPB: '4', LVCA: '16', LVCB: '16', LVPA: '4', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0',
    NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '7', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 123
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 6)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinGlobalWriteVectorWidth: '1', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '1', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0Indices: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1Indices: '[''J'']', PackedC1IndicesX: '[1]',
    PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1',
    PersistentKernel: '0', PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True',
    PrefetchLocalRead: 'True', ReplacementKernel: 'False', ScheduleGlobalRead: '1',
    ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '8', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA906_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 124
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '64', LSPA: '16', LSPB: '4', LVCA: '4', LVCB: '16', LVPA: '4',
    LVPB: '1', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '64',
    MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '64',
    NumGlobalWriteVectorsPerThread: '16', NumLoadsA: '4', NumLoadsB: '4', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '4',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '0', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x64x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 8]', ThreadTile0: '8', ThreadTile1: '8',
    ThreadTileA: '8', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT64x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT8_8_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 8]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 125
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '128', LSPA: '64', LSPB: '8', LVCA: '4', LVCB: '32', LVPA: '16',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsOffsetA: '0', LdsOffsetB: '2048',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128', MacroTile1: '128',
    MacroTileA: '128', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '64',
    NumGlobalWriteVectorsPerThread: '16', NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '1', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT128x128x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 8]', ThreadTile0: '8', ThreadTile1: '8',
    ThreadTileA: '8', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT128x128x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT8_8_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 126
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '32', LSPA: '8', LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '2',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '32', LoopTail: 'True', LoopUnroll: '32', MacroTile0: '32', MacroTile1: '32',
    MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '16',
    NumGlobalWriteVectorsPerThread: '4', NumLoadsA: '4', NumLoadsB: '4', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '4',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '2', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT32x32x32_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Alik_Bjlk_SB_MT32x32x32_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_4_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 127
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '64', LSPA: '64', LSPB: '16', LVCA: '4', LVCB: '16', LVPA: '16',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3072', LdsOffsetA: '0', LdsOffsetB: '2048',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128', MacroTile1: '64',
    MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32',
    NumGlobalWriteVectorsPerThread: '8', NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '3', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT128x64x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT128x64x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT8_4_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 128
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '16', LSCB: '128', LSPA: '64', LSPB: '8', LVCA: '4', LVCB: '32', LVPA: '16',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3072', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32',
    NumGlobalWriteVectorsPerThread: '8', NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '4', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x128x16_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '4', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT64x128x16_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_8_USFGRO0_VW4_WG16_16_1_WGM4
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 4
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 129
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '8', LSCB: '64', LSPA: '32', LSPB: '4', LVCA: '8', LVCB: '64', LVPA: '32',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '512',
    LdsOffsetB_Blk: '1536', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '64', MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '16',
    NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '5',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x64x8_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT64x64x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW1_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 130
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '2', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '64', LSPA: '32', LSPB: '16', LVCA: '8', LVCB: '16', LVPA: '16',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT32x64x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT32x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_8_USFGRO0_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 131
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '8', LSCB: '128', LSPA: '32', LSPB: '2', LVCA: '8', LVCB: '128', LVPA: '32',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '128', MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '7',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU4_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT64x128x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU4_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW1_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 132
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32', MacroTile1: '32',
    MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '8', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT32x32x32_SE_AMAS3_GRVW4_GSU4_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: 'False', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Alik_Bjlk_SB_MT32x32x32_SE_AMAS3_BL1_EPS0_GRVW4_GSU4_ISA908_K1_KLA_PGR0_TT4_4_USFGRO0_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 4
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 133
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '64', LSPA: '16', LSPB: '4', LVCA: '16', LVCB: '64', LVPA: '16',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '9',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT32x64x16_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT32x64x16_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW1_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 8
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 134
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '8', LSCB: '128', LSPA: '32', LSPB: '2', LVCA: '8', LVCB: '128', LVPA: '32',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '128', MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '10',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '4', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT64x128x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW1_WG16_16_1_WGM4
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 4
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 135
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '64', LSPA: '32', LSPB: '16', LVCA: '8', LVCB: '16', LVPA: '8',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '2048', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '5120', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '11',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT32x64x32_SE_AMAS3_GRVW4_GSU4_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Alik_Bjlk_SB_MT32x64x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU4_ISA908_K1_KLA_PGR1_TT4_8_USFGRO0_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 4
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 136
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '12',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x32x32_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Alik_Bjlk_SB_MT64x32x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT8_4_USFGRO0_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 137
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '13',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x32x32_SE_AMAS3_GRVW4_GSU2_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '4', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Alik_Bjlk_SB_MT64x32x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU2_ISA908_K1_KLA_PGR1_TT8_4_USFGRO0_VW4_WG8_8_4_WGM4
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 2
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 4
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 138
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '2', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '8', LSCB: '128', LSPA: '64', LSPB: '8', LVCA: '4', LVCB: '32', LVPA: '32',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '128', MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '14',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x128x8_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT64x128x8_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_8_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 139
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '8', LSCB: '64', LSPA: '32', LSPB: '4', LVCA: '8', LVCB: '64', LVPA: '32',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '512',
    LdsOffsetB_Blk: '1536', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '64', MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '16',
    NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '15',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT64x64x8_SE_AMAS0_GRVW1_GSU4_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '4', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT64x64x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU4_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW1_WG16_16_1_WGM4
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 4
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 140
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '8', LSCB: '128', LSPA: '128', LSPB: '8', LVCA: '2', LVCB: '32', LVPA: '32',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128',
    MacroTile1: '128', MacroTileA: '128', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '64', NumGlobalWriteVectorsPerThread: '16',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '16',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT128x128x8_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 8]', ThreadTile0: '8', ThreadTile1: '8', ThreadTileA: '8', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT128x128x8_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT8_8_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [128, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 141
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '32', LSPA: '16', LSPB: '8', LVCA: '16', LVCB: '32', LVPA: '16',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '512',
    LdsOffsetB_Blk: '1536', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '17',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT32x32x16_SE_AMAS0_GRVW1_GSU1_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT32x32x16_SE_AMAS0_BL1_EPS1_GRVW1_GSU1_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW1_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 142
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '64', LSPA: '64', LSPB: '16', LVCA: '4', LVCB: '16', LVPA: '16',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '7168', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '18',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT128x64x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT128x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT8_4_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 143
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32', MacroTile1: '32',
    MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '19', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT32x32x32_SE_AMAS3_GRVW4_GSU8_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: 'False', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 4]', WorkGroupMapping: '4', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Alik_Bjlk_SB_MT32x32x32_SE_AMAS3_BL1_EPS0_GRVW4_GSU8_ISA908_K1_KLA_PGR0_TT4_4_USFGRO0_VW4_WG8_8_4_WGM4
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 8
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 4
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 144
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '8', LSCB: '64', LSPA: '32', LSPB: '4', LVCA: '8', LVCB: '64', LVPA: '32',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '20',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT128x64x8_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT128x64x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 145
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '2', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '16', LSCB: '64', LSPA: '32', LSPB: '16', LVCA: '8', LVCB: '16', LVPA: '16',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '21',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT32x64x16_SE_AMAS3_GRVW4_GSU2_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Alik_Bjlk_SB_MT32x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU2_ISA908_K1_KLA_PGR1_TT4_8_USFGRO0_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 2
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 146
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '16', LSPA: '16',
    LSPB: '4', LVCA: '4', LVCB: '16', LVPA: '16', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '22',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2', ThreadTileA: '2', ThreadTileB: '2',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '2',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 147
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '4', LSCB: '16', LSPA: '16',
    LSPB: '4', LVCA: '4', LVCB: '16', LVPA: '16', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '23',
    SolutionNameMin: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2', ThreadTileA: '2', ThreadTileB: '2',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Alik_Bjlk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 148
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '24', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 149
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '25', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU4_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU4_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 150
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '26', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU8_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU8_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 151
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '27', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS0_GRVW1_GSU2_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU2_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW1_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 152
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '28', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS0_GRVW1_GSU4_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU4_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW1_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 153
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '29', SolutionNameMin: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS0_GRVW1_GSU8_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Alik_Bjlk_SB_MT8x8x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW1_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Alik_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Alik_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 154
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '128', LSCB: '64', LSPA: '2', LSPB: '4', LVCA: '128', LVCB: '64', LVPA: '2',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1536', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128', MacroTile1: '64',
    MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32',
    NumGlobalWriteVectorsPerThread: '32', NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '0', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT128x64x8_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT128x64x8_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR0_TT8_4_USFGRO0_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 155
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '64', LSCB: '64', LSPA: '4', LSPB: '4', LVCA: '64', LVCB: '64', LVPA: '4',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1024', LdsOffsetA: '0', LdsOffsetB: '512',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64', MacroTile1: '64',
    MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '16',
    NumGlobalWriteVectorsPerThread: '16', NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '1', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x64x8_SE_AMAS0_GRVW1_GSU1_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT64x64x8_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR0_TT4_4_USFGRO0_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 156
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '64', LSPA: '8', LSPB: '4', LVCA: '8', LVCB: '16', LVPA: '2',
    LVPB: '1', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '1792', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '256',
    LdsOffsetB_Blk: '1280', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '2',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT32x64x8_SE_AMAS2_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT32x64x8_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR1_TT4_8_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 157
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'False',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: 'False',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '[0, 0, 0]', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Source,
    LSCA: '32', LSCB: '32', LSPA: '8', LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '2',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '32', LoopTail: 'True', LoopUnroll: '32', MacroTile0: '32', MacroTile1: '32',
    MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '16',
    NumGlobalWriteVectorsPerThread: '4', NumLoadsA: '4', NumLoadsB: '4', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '4',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '3', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT32x32x32_SE_AMAS2_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '0', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bjlk_SB_MT32x32x32_SE_AMAS2_BL0_EPS0_GRVW4_GSU1_ISA000_K1_KLS_PGR0_TT4_4_USFGRO0_VW4_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 158
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '32', LSPA: '16', LSPB: '32', LVCA: '16', LVCB: '8', LVPA: '4',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '4',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x32x32_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bjlk_SB_MT64x32x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT8_4_USFGRO0_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 159
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '64', LSPA: '8', LSPB: '4', LVCA: '32', LVCB: '64', LVPA: '8',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '2048', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '5120', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '4', NumLoadsB: '8', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '8', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '5',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT32x64x32_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bjlk_SB_MT32x64x32_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW1_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 8
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 160
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '32', LSPA: '4', LSPB: '8', LVCA: '64', LVCB: '32', LVPA: '4',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '8', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '8', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '6',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x32x32_SE_AMAS0_GRVW1_GSU4_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bjlk_SB_MT64x32x32_SE_AMAS0_BL1_EPS1_GRVW1_GSU4_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 4
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 161
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '64', LSPA: '32', LSPB: '16', LVCA: '8', LVCB: '16', LVPA: '8',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '2048', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '5120', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '7',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT32x64x32_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bjlk_SB_MT32x64x32_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_8_USFGRO0_VW4_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 1
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 162
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '128', LSCB: '64', LSPA: '2', LSPB: '4', LVCA: '128', LVCB: '64', LVPA: '2',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '8',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT128x64x8_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT128x64x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 163
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '64', LSPA: '4', LSPB: '4', LVCA: '64', LVCB: '64', LVPA: '4',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '2048', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '1024', LdsOffsetB: '512',
    LdsOffsetB_Blk: '1536', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '64', MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '16',
    NumLoadsA: '2', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '9',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x64x8_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT64x64x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 164
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '128', LSPA: '16', LSPB: '8', LVCA: '16', LVCB: '32', LVPA: '4',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3072', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64', MacroTile1: '128',
    MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32',
    NumGlobalWriteVectorsPerThread: '8', NumLoadsA: '1', NumLoadsB: '2', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '2',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '10', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x128x16_SE_AMAS3_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8',
    ThreadTileA: '4', ThreadTileB: '8', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: 'False', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bjlk_SB_MT64x128x16_SE_AMAS3_BL1_EPS0_GRVW4_GSU1_ISA908_K1_KLA_PGR0_TT4_8_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 165
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '128', LSPA: '4', LSPB: '2', LVCA: '64', LVCB: '128', LVPA: '4',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '128', MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '11',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU4_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT64x128x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU4_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 166
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32', MacroTile1: '32',
    MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '12', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT32x32x32_SE_AMAS3_GRVW4_GSU8_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: 'False', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bjlk_SB_MT32x32x32_SE_AMAS3_BL1_EPS0_GRVW4_GSU8_ISA908_K1_KLA_PGR0_TT4_4_USFGRO0_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 8
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 167
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '128', LSPA: '4', LSPB: '2', LVCA: '64', LVCB: '128', LVPA: '4',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '128', MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '13',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU2_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT64x128x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU2_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 168
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '32', LSPB: '32', LVCA: '8', LVCB: '8', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsOffsetA: '0', LdsOffsetB: '1024',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32', MacroTile1: '32',
    MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '4',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '14', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT32x32x32_SE_AMAS3_GRVW4_GSU4_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8',
    SuppressNoLoadLoop: 'False', ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4',
    ThreadTileA: '4', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: 'False', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[8, 8, 4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bjlk_SB_MT32x32x32_SE_AMAS3_BL1_EPS0_GRVW4_GSU4_ISA908_K1_KLA_PGR0_TT4_4_USFGRO0_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 4
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 169
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '32', LSPA: '8', LSPB: '8', LVCA: '32', LVCB: '32', LVPA: '8',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '256',
    LdsNumElementsAlignedB: '256', LdsOffsetA: '0', LdsOffsetA_Blk: '512', LdsOffsetB: '256',
    LdsOffsetB_Blk: '768', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '32',
    MacroTile1: '32', MacroTileA: '32', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '1',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '15',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT32x32x8_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT32x32x8_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_4_USFGRO1_VW4_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [32, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 170
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '32', LSPA: '4', LSPB: '8', LVCA: '64', LVCB: '32', LVPA: '4',
    LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '2048',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '2048',
    LdsOffsetB_Blk: '6144', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '32', MacroTileA: '64', MacroTileB: '32', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '8', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '8', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '16',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x32x32_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bjlk_SB_MT64x32x32_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG8_8_4_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 8
    macroTile: [64, 32, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [8, 8, 4]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 171
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'False', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '128', LSCB: '64', LSPA: '8', LSPB: '16', LVCA: '32', LVCB: '16', LVPA: '2',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3072', LdsOffsetA: '0', LdsOffsetB: '2048',
    LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True', LocalRead2B: 'True',
    LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True', LocalWrite2B: 'True',
    LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False', LoopDoWhile: 'False',
    LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '128', MacroTile1: '64',
    MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '32',
    NumGlobalWriteVectorsPerThread: '8', NumLoadsA: '2', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '1',
    NumThreads: '256', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1',
    PackGranularity: '2', PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'False', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '17', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT128x64x16_SE_AMAS3_GRVW4_GSU1_VW4,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16',
    SuppressNoLoadLoop: 'False', ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4',
    ThreadTileA: '8', ThreadTileB: '4', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: 'False', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '4', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[16, 16, 1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bjlk_SB_MT128x64x16_SE_AMAS3_BL1_EPS0_GRVW4_GSU1_ISA908_K1_KLA_PGR0_TT8_4_USFGRO0_VW4_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 172
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '16',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '64', LSPA: '16', LSPB: '16', LVCA: '16', LVCB: '16', LVPA: '4',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '16', LoopTail: 'True', LoopUnroll: '16', MacroTile0: '64',
    MacroTile1: '64', MacroTileA: '64', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '16', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '18',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x64x16_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 4]', ThreadTile0: '4', ThreadTile1: '4', ThreadTileA: '4', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '2'}
  name: Cijk_Ailk_Bjlk_SB_MT64x64x16_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT4_4_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 16
    globalSplitU: 1
    macroTile: [64, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 2
    staggerU: 32
    threadTile: [4, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 173
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '32',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '32', LSCB: '64', LSPA: '8', LSPB: '4', LVCA: '32', LVCB: '64', LVPA: '8',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '8192', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '2048', LdsOffsetA: '0', LdsOffsetA_Blk: '4096', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '5120', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '32',
    MacroTile1: '64', MacroTileA: '32', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '8', NumGlobalWriteVectorsPerThread: '8',
    NumLoadsA: '4', NumLoadsB: '8', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '8', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '19',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT32x64x32_SE_AMAS0_GRVW1_GSU4_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '1'}
  name: Cijk_Ailk_Bjlk_SB_MT32x64x32_SE_AMAS0_BL1_EPS1_GRVW1_GSU4_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW1_WG8_8_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 32
    globalSplitU: 4
    macroTile: [32, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 1
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [8, 8, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 174
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '4', GlobalLoadVectorWidthB: '4', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '4',
    GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '4', GuaranteeNoPartialA: 'False', GuaranteeNoPartialB: 'False',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '128', LSCB: '128', LSPA: '8', LSPB: '8', LVCA: '32', LVCB: '32', LVPA: '2',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '4096', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128',
    MacroTile1: '128', MacroTileA: '128', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '64', NumGlobalWriteVectorsPerThread: '16',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '20',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT128x128x8_SE_AMAS3_GRVW4_GSU1_VW4, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 8]', ThreadTile0: '8', ThreadTile1: '8', ThreadTileA: '8', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: 'False',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '4',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT128x128x8_SE_AMAS3_BL1_EPS1_GRVW4_GSU1_ISA908_K1_KLA_PGR1_TT8_8_USFGRO0_VW4_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 4}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 1
    macroTile: [128, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 175
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '128', LSCB: '64', LSPA: '2', LSPB: '4', LVCA: '128', LVCB: '64', LVPA: '2',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '21',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT128x64x8_SE_AMAS0_GRVW1_GSU4_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT128x64x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU4_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 176
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '128', LSCB: '64', LSPA: '2', LSPB: '4', LVCA: '128', LVCB: '64', LVPA: '2',
    LVPB: '4', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '1024',
    LdsNumElementsAlignedB: '512', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '1024',
    LdsOffsetB_Blk: '3072', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '128',
    MacroTile1: '64', MacroTileA: '128', MacroTileB: '64', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '4', NumLoadsB: '2', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '4', NumLoadsPerpendicularB: '2', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '22',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT128x64x8_SE_AMAS0_GRVW1_GSU2_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[8, 4]', ThreadTile0: '8', ThreadTile1: '4', ThreadTileA: '8', ThreadTileB: '4',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT128x64x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU2_ISA908_K1_KLA_PGR1_TT8_4_USFGRO1_VW1_WG16_16_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [128, 64, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [8, 4]
    workGroup: [16, 16, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 177
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BenchmarkFork: '0', BufferLoad: 'True',
    BufferStore: 'True', CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8',
    DirectToLds: 'False', DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0',
    DisableKernelPieces: '0', DisableVgprOverlapping: 'False', EdgeType: ShiftPtr,
    EnableMatrixInstruction: 'False', ExpandPointerSwap: 'True', FractionalLoad: '0',
    GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True',
    GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True', GlobalReadCoalesceGroupB: 'True',
    GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True', GlobalReadVectorWidth: '1',
    GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True', GlobalSplitUWorkGroupMappingRoundRobin: 'False',
    GlobalWriteVectorWidth: '1', GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True',
    ISA: '(9, 0, 8)', InnerUnroll: '1', InterleaveAlpha: '0', KernelLanguage: Assembly,
    LSCA: '64', LSCB: '128', LSPA: '4', LSPB: '2', LVCA: '64', LVCB: '128', LVPA: '4',
    LVPB: '2', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0',
    LdsBlockSizePerPadB: '0', LdsNumElements: '3584', LdsNumElementsAlignedA: '512',
    LdsNumElementsAlignedB: '1024', LdsOffsetA: '0', LdsOffsetA_Blk: '2048', LdsOffsetB: '512',
    LdsOffsetB_Blk: '2560', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '8', LoopTail: 'True', LoopUnroll: '8', MacroTile0: '64',
    MacroTile1: '128', MacroTileA: '64', MacroTileB: '128', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '32', NumGlobalWriteVectorsPerThread: '32',
    NumLoadsA: '2', NumLoadsB: '4', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '2', NumLoadsPerpendicularB: '4', NumThreads: '256', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '23',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT64x128x8_SE_AMAS0_GRVW1_GSU8_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '16', SubGroup1: '16', SubGroupA: '16', SubGroupB: '16', SuppressNoLoadLoop: 'False',
    ThreadTile: '[4, 8]', ThreadTile0: '4', ThreadTile1: '8', ThreadTileA: '4', ThreadTileB: '8',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '1',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[16, 16,
      1]', WorkGroupMapping: '8', WorkGroupMappingType: B, _UseSgprForGRO: '1', _VectorStore: 'True',
    _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT64x128x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT4_8_USFGRO1_VW1_WG16_16_1_WGM8
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [64, 128, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [4, 8]
    workGroup: [16, 16, 1]
    workGroupMapping: 8
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 178
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '2', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '2',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '16', LSPA: '4',
    LSPB: '4', LVCA: '16', LVCB: '16', LVPA: '4', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '2',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '24',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS2_GRVW2_GSU1_VW2, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2', ThreadTileA: '2', ThreadTileB: '2',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '2',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS2_BL0_EPS0_GRVW2_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW2_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 179
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'False', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '4', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'False', FractionalLoad: 'False', GlobalLoadVectorWidthA: '1',
    GlobalLoadVectorWidthB: '1', GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '1', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '[0, 0, 0]', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Source, LSCA: '16', LSCB: '16', LSPA: '4',
    LSPB: '4', LVCA: '16', LVCB: '16', LVPA: '4', LVPB: '4', LdcEqualsLdd: 'True',
    LdsBlockSizePerPad: '0', LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409',
    LdsNumElementsAlignedA: '64', LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128',
    LdsOffsetB: '64', LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1',
    LocalRead2A: 'True', LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '1',
    LocalWrite2A: 'True', LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '4', LoopTail: 'True', LoopUnroll: '4', MacroTile0: '16',
    MacroTile1: '16', MacroTileA: '16', MacroTileB: '16', MacroTileShapeMax: '64',
    MacroTileShapeMin: '1', MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40',
    MaxVgprNumber: '256', MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0',
    NonTemporalC: '0', NumElementsPerThread: '4', NumGlobalWriteVectorsPerThread: '4',
    NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1', NumLoadsCoalescedB: '1',
    NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1', NumThreads: '64', OptNoLoadLoop: '1',
    PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2', PackSummationDims: '0',
    PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]', PackedC1IdxChars: '[''J'']',
    PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1', PerformanceWaitCount: '-1',
    PerformanceWaitLocation: '-1', PersistentKernel: '0', PrefetchAcrossPersistent: '0',
    PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True', ReplacementKernel: 'False',
    ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1', SolutionIndex: '25',
    SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS0_GRVW1_GSU1_VW1, StaggerU: '32',
    StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0', StoreVectorWidth: '4',
    SubGroup0: '8', SubGroup1: '8', SubGroupA: '8', SubGroupB: '8', SuppressNoLoadLoop: 'False',
    ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2', ThreadTileA: '2', ThreadTileB: '2',
    TransposeLDS: '0', UnrollIncIsDepthU: '0', UnrollMajorLDSA: '0', UnrollMajorLDSB: '0',
    UnrollMemFence: 'False', Use64bShadowLimit: '1', UseInstOffsetForGRO: '0', UseSgprForGRO: '0',
    Valid: 'True', VectorAtomicWidth: '1', VectorStore: 'True', VectorWidth: '1',
    WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0', WorkGroup: '[8, 8,
      1]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: 'False',
    _VectorStore: 'True', _staggerStrideShift: '4'}
  name: Cijk_Ailk_Bjlk_SB_MT16x16x4_SE_AMAS0_BL0_EPS0_GRVW1_GSU1_ISA000_K1_KLS_PGR1_TT2_2_USFGRO0_VW1_WG8_8_1_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Source}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 4
    globalSplitU: 1
    macroTile: [16, 16, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: true
    staggerStrideShift: 4
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [8, 8, 1]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 180
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '26', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU2_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU2_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 181
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '27', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU4_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU4_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 182
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '3', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '2', GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '28', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS3_GRVW2_GSU8_VW2,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '2', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS3_BL1_EPS1_GRVW2_GSU8_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW2_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: LeadingFreeSizesGreaterOrEqual, value: 2}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 183
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '2', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '29', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS0_GRVW1_GSU2_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU2_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW1_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 2
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 184
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '4', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '30', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS0_GRVW1_GSU4_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU4_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW1_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 4
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
- debugKernel: false
  hardwarePredicate: {type: TruePred}
  ideals: {}
  index: 185
  info: {AggressivePerfMode: '1', AssertFree0ElementMultiple: '1', AssertFree1ElementMultiple: '1',
    AssertMinApproxSize: '0', AssertSizeEqual: '{}', AssertStrideAEqual: '{0: 1}',
    AssertStrideBEqual: '{0: 1}', AssertStrideCEqual: '{0: 1}', AssertStrideDEqual: '{0:
      1}', AssertSummationElementMultiple: '1', AssignedDerivedParameters: 'False',
    AssignedProblemIndependentDerivedParameters: 'True', BufferLoad: 'True', BufferStore: 'True',
    CheckDimOverflow: '0', CheckTensorDimAsserts: 'False', DepthU: '8', DirectToLds: 'False',
    DirectToLdsA: 'False', DirectToLdsB: 'False', DisableAtomicFail: '0', DisableKernelPieces: '0',
    DisableVgprOverlapping: 'False', EdgeType: ShiftPtr, EnableMatrixInstruction: 'False',
    ExpandPointerSwap: 'True', FractionalLoad: '0', GlobalLoadVectorWidthA: '1', GlobalLoadVectorWidthB: '1',
    GlobalRead2A: 'True', GlobalRead2B: 'True', GlobalReadCoalesceGroupA: 'True',
    GlobalReadCoalesceGroupB: 'True', GlobalReadCoalesceVectorA: 'True', GlobalReadCoalesceVectorB: 'True',
    GlobalReadVectorWidth: '1', GlobalSplitU: '8', GlobalSplitUSummationAssignmentRoundRobin: 'True',
    GlobalSplitUWorkGroupMappingRoundRobin: 'False', GlobalWriteVectorWidth: '1',
    GuaranteeNoPartialA: 'True', GuaranteeNoPartialB: 'True', ISA: '(9, 0, 8)', InnerUnroll: '1',
    InterleaveAlpha: '0', KernelLanguage: Assembly, LSCA: '8', LSCB: '8', LSPA: '8',
    LSPB: '8', LVCA: '8', LVCB: '8', LVPA: '8', LVPB: '8', LdcEqualsLdd: 'True', LdsBlockSizePerPad: '0',
    LdsBlockSizePerPadA: '0', LdsBlockSizePerPadB: '0', LdsNumElements: '409', LdsNumElementsAlignedA: '64',
    LdsNumElementsAlignedB: '64', LdsOffsetA: '0', LdsOffsetA_Blk: '128', LdsOffsetB: '64',
    LdsOffsetB_Blk: '192', LdsPadA: '0', LdsPadB: '0', LocalDotLayout: '1', LocalRead2A: 'True',
    LocalRead2B: 'True', LocalReadVectorWidth: '-1', LocalSplitU: '4', LocalWrite2A: 'True',
    LocalWrite2B: 'True', LocalWriteUseSgprA: 'False', LocalWriteUseSgprB: 'False',
    LoopDoWhile: 'False', LoopIters: '2', LoopTail: 'True', LoopUnroll: '2', MacroTile0: '8',
    MacroTile1: '8', MacroTileA: '8', MacroTileB: '8', MacroTileShapeMax: '64', MacroTileShapeMin: '1',
    MagicDivAlg: '1', MatrixInstruction: '[]', MaxOccupancy: '40', MaxVgprNumber: '256',
    MinVgprNumber: '0', NonTemporalA: '0', NonTemporalB: '0', NonTemporalC: '0', NumElementsPerThread: '1',
    NumGlobalWriteVectorsPerThread: '1', NumLoadsA: '1', NumLoadsB: '1', NumLoadsCoalescedA: '1',
    NumLoadsCoalescedB: '1', NumLoadsPerpendicularA: '1', NumLoadsPerpendicularB: '1',
    NumThreads: '64', OptNoLoadLoop: '1', PackBatchDims: '0', PackFreeDims: '1', PackGranularity: '2',
    PackSummationDims: '0', PackedC0IdxChars: '[''I'']', PackedC0IndicesX: '[0]',
    PackedC1IdxChars: '[''J'']', PackedC1IndicesX: '[1]', PerformanceSyncLocation: '-1',
    PerformanceWaitCount: '-1', PerformanceWaitLocation: '-1', PersistentKernel: '0',
    PrefetchAcrossPersistent: '0', PrefetchGlobalRead: 'True', PrefetchLocalRead: 'True',
    ReplacementKernel: 'False', ScheduleGlobalRead: '1', ScheduleIterAlg: '1', ScheduleLocalWrite: '1',
    SolutionIndex: '31', SolutionNameMin: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS0_GRVW1_GSU8_VW1,
    StaggerU: '32', StaggerUMapping: '0', StaggerUStride: '256', StoreRemapVectorWidth: '0',
    StoreVectorWidth: '4', SubGroup0: '4', SubGroup1: '4', SubGroupA: '4', SubGroupB: '4',
    SuppressNoLoadLoop: 'False', ThreadTile: '[2, 2]', ThreadTile0: '2', ThreadTile1: '2',
    ThreadTileA: '2', ThreadTileB: '2', TransposeLDS: '0', UnrollIncIsDepthU: '0',
    UnrollMajorLDSA: '0', UnrollMajorLDSB: '0', UnrollMemFence: 'False', Use64bShadowLimit: '1',
    UseInstOffsetForGRO: '0', UseSgprForGRO: '1', Valid: 'True', VectorAtomicWidth: '1',
    VectorStore: 'True', VectorWidth: '1', WaveSeparateGlobalReadA: '0', WaveSeparateGlobalReadB: '0',
    WorkGroup: '[4, 4, 4]', WorkGroupMapping: '1', WorkGroupMappingType: B, _UseSgprForGRO: '1',
    _VectorStore: 'True', _staggerStrideShift: '3'}
  name: Cijk_Ailk_Bjlk_SB_MT8x8x8_SE_AMAS0_BL1_EPS1_GRVW1_GSU8_ISA908_K1_KLA_PGR1_TT2_2_USFGRO1_VW1_WG4_4_4_WGM1
  problemPredicate:
    type: And
    value:
    - {index: 0, type: StrideCEqual, value: 1}
    - {index: 0, type: StrideDEqual, value: 1}
    - {index: 0, type: StrideBEqual, value: 1}
    - {index: 0, type: StrideAEqual, value: 1}
    - {type: OperationIdentifierEqual, value: Contraction_l_Ailk_Bjlk_Cijk_Dijk}
    - type: TypesEqual
      value: [Float, Float, Float, Float]
    - {type: HighPrecisionAccumulate, value: false}
    - {type: CDStridesEqual, value: true}
    - type: Or
      value:
      - {type: KernelLanguage, value: Any}
      - {type: KernelLanguage, value: Assembly}
    - {type: DeterministicMode, value: false}
    - type: Or
      value:
      - {type: ArithmeticUnit, value: Any}
      - {type: ArithmeticUnit, value: VALU}
  problemType: {aType: Float, bType: Float, cType: Float, dType: Float, highPrecisionAccumulate: false,
    operationIdentifier: Contraction_l_Ailk_Bjlk_Cijk_Dijk, useBeta: true, useInitialStridesAB: false,
    useInitialStridesCD: false}
  sizeMapping:
    depthU: 8
    globalSplitU: 8
    macroTile: [8, 8, 1]
    magicDivAlg: 1
    packBatchDims: 0
    packSummationDims: 0
    persistentKernel: 0
    sourceKernel: false
    staggerStrideShift: 3
    staggerU: 32
    threadTile: [2, 2]
    workGroup: [4, 4, 4]
    workGroupMapping: 1
...
