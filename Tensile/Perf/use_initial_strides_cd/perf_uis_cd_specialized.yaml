# A config to generate a fast kernel for large DGEMMs
GlobalParameters:
  EnqueuesPerSync: 100
  NumElementsToValidate: 0
  KernelTime: True
  SleepPercent: 0
  DataInitTypeBeta : 1
  DataInitTypeAB: 0
  PrintSolutionRejectionReason: 1
  PrintWinnersOnly: 1
  NewClient: 2
  CEqualD: 0

BenchmarkProblems:
  -
    - # ProblemType
      OperationType: TensorContraction
      DataType: s
      TransposeA: False
      TransposeB: False
      UseBeta: True
      Batched: True
      NumIndicesC: 3
      IndexAssignmentsA: [ 0, 2, 3 ]
      IndexAssignmentsB: [ 3, 2, 1 ]
      UseInitialStridesAB: True
      UseInitialStridesCD: True

    - # BenchmarkProblemSizeGroup - Standard
      InitialSolutionParameters:
      BenchmarkCommonParameters:
        - KernelLanguage: ["Assembly"]
        - EdgeType: ["ShiftPtr"]
      ForkParameters:
        - LdcEqualsLdd: [0]
        - ThreadTile:
          - [ 4, 4 ]
          - [ 8, 8 ]
        - WorkGroup:
          - [ 8, 8, 1 ]
          - [ 16, 16, 1 ]
            #- [ 32, 16, 1 ]
            #- [ 16, 16, 1 ]
          #- WorkGroupMapping: [1,8,64]
        - StaggerU: [32]
        - StaggerUMapping: [1]
        - DepthU: [ 16 ]
        - VectorWidth: [-1]
        - GlobalReadVectorWidth: [-1] # specialize, since strideA0=strideB0=1 can use wider loads
        - FractionalLoad: [1]
        - AssertStrideAEqual: [ { 0: 1 } ]  # specialize
        - AssertStrideBEqual: [ { 0: 1 } ]  # specialize
        - AssertStrideCEqual: [ { 0: 0 } ]  # specialize
        - AssertStrideDEqual: [ { 0: 1 } ]  # specialize
          #- AssertSummationElementM}ltiple: [4]
          #- AssertFree0ElementMultiple: [4]
          #- AssertFree1ElementMultiple: [4]
      BenchmarkForkParameters:
      BenchmarkJoinParameters:
      BenchmarkFinalParameters:
        - ProblemSizes:
          - Exact: {sizes: [512,512,1,512], stridesC: [0]}
          - Exact: {sizes: [1024,1024,1,1024], stridesC: [0]}
          - Exact: {sizes: [4096,4096,1,4096], stridesC: [0]}
